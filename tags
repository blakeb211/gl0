!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
AllocatorH	..\Allocator\Allocator.h	2;"	d
Moya	..\Allocator\Allocator.h	/^namespace Moya {$/;"	n
MemoryPool	..\Allocator\Allocator.h	/^class MemoryPool {$/;"	c	namespace:Moya
Block	..\Allocator\Allocator.h	/^  struct Block {$/;"	s	class:Moya::MemoryPool
next	..\Allocator\Allocator.h	/^    Block* next;$/;"	m	struct:Moya::MemoryPool::Block
Buffer	..\Allocator\Allocator.h	/^  class Buffer {$/;"	c	class:Moya::MemoryPool
blockSize	..\Allocator\Allocator.h	/^    static const std::size_t blockSize = sizeof(T) > sizeof(Block)$/;"	m	class:Moya::MemoryPool::Buffer
data	..\Allocator\Allocator.h	/^    uint8_t data[blockSize * growSize];$/;"	m	class:Moya::MemoryPool::Buffer
next	..\Allocator\Allocator.h	/^    Buffer* const next;$/;"	m	class:Moya::MemoryPool::Buffer
Buffer	..\Allocator\Allocator.h	/^    Buffer(Buffer* next) : next(next) {}$/;"	f	class:Moya::MemoryPool::Buffer
getBlock	..\Allocator\Allocator.h	/^    T* getBlock(std::size_t index) {$/;"	f	class:Moya::MemoryPool::Buffer
firstFreeBlock	..\Allocator\Allocator.h	/^  Block* firstFreeBlock = nullptr;$/;"	m	class:Moya::MemoryPool
firstBuffer	..\Allocator\Allocator.h	/^  Buffer* firstBuffer = nullptr;$/;"	m	class:Moya::MemoryPool
bufferedBlocks	..\Allocator\Allocator.h	/^  std::size_t bufferedBlocks = growSize;$/;"	m	class:Moya::MemoryPool
memoryPool	..\Allocator\Allocator.h	/^  MemoryPool(MemoryPool&& memoryPool) = delete;$/;"	m	class:Moya::MemoryPool
memoryPool	..\Allocator\Allocator.h	/^  MemoryPool(const MemoryPool& memoryPool) = delete;$/;"	m	class:Moya::MemoryPool
memoryPool	..\Allocator\Allocator.h	/^  MemoryPool operator=(MemoryPool&& memoryPool) = delete;$/;"	m	class:Moya::MemoryPool
memoryPool	..\Allocator\Allocator.h	/^  MemoryPool operator=(const MemoryPool& memoryPool) = delete;$/;"	m	class:Moya::MemoryPool
~MemoryPool	..\Allocator\Allocator.h	/^  ~MemoryPool() {$/;"	f	class:Moya::MemoryPool
allocate	..\Allocator\Allocator.h	/^  T* allocate() {$/;"	f	class:Moya::MemoryPool
deallocate	..\Allocator\Allocator.h	/^  void deallocate(T* pointer) {$/;"	f	class:Moya::MemoryPool
Allocator	..\Allocator\Allocator.h	/^class Allocator : private MemoryPool<T, growSize> {$/;"	c	namespace:Moya
copyAllocator	..\Allocator\Allocator.h	/^  Allocator* copyAllocator = nullptr;$/;"	m	class:Moya::Allocator
rebindAllocator	..\Allocator\Allocator.h	/^  std::allocator<T>* rebindAllocator = nullptr;$/;"	m	class:Moya::Allocator
size_type	..\Allocator\Allocator.h	/^  typedef std::size_t size_type;$/;"	t	class:Moya::Allocator
difference_type	..\Allocator\Allocator.h	/^  typedef std::ptrdiff_t difference_type;$/;"	t	class:Moya::Allocator
pointer	..\Allocator\Allocator.h	/^  typedef T* pointer;$/;"	t	class:Moya::Allocator
const_pointer	..\Allocator\Allocator.h	/^  typedef const T* const_pointer;$/;"	t	class:Moya::Allocator
reference	..\Allocator\Allocator.h	/^  typedef T& reference;$/;"	t	class:Moya::Allocator
const_reference	..\Allocator\Allocator.h	/^  typedef const T& const_reference;$/;"	t	class:Moya::Allocator
value_type	..\Allocator\Allocator.h	/^  typedef T value_type;$/;"	t	class:Moya::Allocator
rebind	..\Allocator\Allocator.h	/^  struct rebind {$/;"	s	class:Moya::Allocator
other	..\Allocator\Allocator.h	/^    typedef Allocator<U, growSize> other;$/;"	t	struct:Moya::Allocator::rebind
Allocator	..\Allocator\Allocator.h	/^  Allocator(Allocator& allocator) : copyAllocator(&allocator) {}$/;"	f	class:Moya::Allocator
Allocator	..\Allocator\Allocator.h	/^  Allocator(const Allocator<U, growSize>& other) {$/;"	f	class:Moya::Allocator
~Allocator	..\Allocator\Allocator.h	/^  ~Allocator() { delete rebindAllocator; }$/;"	f	class:Moya::Allocator
allocate	..\Allocator\Allocator.h	/^  pointer allocate(size_type n, const void* hint = 0) {$/;"	f	class:Moya::Allocator
deallocate	..\Allocator\Allocator.h	/^  void deallocate(pointer p, size_type n) {$/;"	f	class:Moya::Allocator
construct	..\Allocator\Allocator.h	/^  void construct(pointer p, const_reference val) { new (p) T(val); }$/;"	f	class:Moya::Allocator
destroy	..\Allocator\Allocator.h	/^  void destroy(pointer p) { p->~T(); }$/;"	f	class:Moya::Allocator
growSize	..\Allocator\Measure.cpp	/^const std::size_t growSize = 1024;$/;"	v
numberOfIterations	..\Allocator\Measure.cpp	/^const int numberOfIterations = 1024;$/;"	v
randomRange	..\Allocator\Measure.cpp	/^const int randomRange = 1024;$/;"	v
PerformanceTest	..\Allocator\Measure.cpp	/^class PerformanceTest$/;"	c	file:
container	..\Allocator\Measure.cpp	/^        Container container;$/;"	m	class:PerformanceTest	file:
randomNumberGenerator	..\Allocator\Measure.cpp	/^        std::default_random_engine randomNumberGenerator;$/;"	m	class:PerformanceTest	file:
randomNumberDistribution	..\Allocator\Measure.cpp	/^        std::uniform_int_distribution<int> randomNumberDistribution;$/;"	m	class:PerformanceTest	file:
PerformanceTest	..\Allocator\Measure.cpp	/^        PerformanceTest() :$/;"	f	class:PerformanceTest
run	..\Allocator\Measure.cpp	/^        double run()$/;"	f	class:PerformanceTest
PushFrontTest	..\Allocator\Measure.cpp	/^class PushFrontTest : public PerformanceTest<Container>$/;"	c	file:
testIteration	..\Allocator\Measure.cpp	/^    virtual void testIteration(int newSize)$/;"	f	class:PushFrontTest	file:
PushBackTest	..\Allocator\Measure.cpp	/^class PushBackTest : public PerformanceTest<Container>$/;"	c	file:
testIteration	..\Allocator\Measure.cpp	/^    virtual void testIteration(int newSize)$/;"	f	class:PushBackTest	file:
MapTest	..\Allocator\Measure.cpp	/^class MapTest : public PerformanceTest<Container>$/;"	c	file:
testIteration	..\Allocator\Measure.cpp	/^    virtual void testIteration(int newSize)$/;"	f	class:MapTest	file:
SetTest	..\Allocator\Measure.cpp	/^class SetTest : public PerformanceTest<Container>$/;"	c	file:
testIteration	..\Allocator\Measure.cpp	/^    virtual void testIteration(int newSize)$/;"	f	class:SetTest	file:
printTestStatus	..\Allocator\Measure.cpp	/^void printTestStatus(const char *name, StlContainer &stlContainer, FastContainer &fastContainer)$/;"	f
main	..\Allocator\Measure.cpp	/^int main()$/;"	f
Level	..\Async_test_level_loading\Main.cpp	/^struct Level {$/;"	s	file:
verts	..\Async_test_level_loading\Main.cpp	/^    vector<float> verts;$/;"	m	struct:Level	file:
faces	..\Async_test_level_loading\Main.cpp	/^    vector<int> faces;$/;"	m	struct:Level	file:
name	..\Async_test_level_loading\Main.cpp	/^    string name;$/;"	m	struct:Level	file:
load_level	..\Async_test_level_loading\Main.cpp	/^unique_ptr<Level> load_level(string name)$/;"	f
main	..\Async_test_level_loading\Main.cpp	/^int main()$/;"	f
main	..\boost_examples\boost_pool.cpp	/^int main()$/;"	f
main	..\boost_examples\ex1.cpp	/^int main()$/;"	f
main	..\boost_examples\ex2.cpp	/^int main() {$/;"	f
BOOST_TEST_MAIN	..\boost_examples\ex3-quaternion.cpp	14;"	d	file:
DEFINE_TYPE_NAME	..\boost_examples\ex3-quaternion.cpp	29;"	d	file:
cpp_bin_float_quad	..\boost_examples\ex3-quaternion.cpp	/^DEFINE_TYPE_NAME(boost::multiprecision::cpp_bin_float_quad);$/;"	v
number	..\boost_examples\ex3-quaternion.cpp	/^DEFINE_TYPE_NAME(boost::multiprecision::number<boost::multiprecision::cpp_dec_float<25> >);$/;"	v
CPP_DEC_FLOAT_TEST	..\boost_examples\ex3-quaternion.cpp	45;"	d	file:
CPP_DEC_FLOAT_TEST	..\boost_examples\ex3-quaternion.cpp	47;"	d	file:
LD_TEST	..\boost_examples\ex3-quaternion.cpp	50;"	d	file:
LD_TEST	..\boost_examples\ex3-quaternion.cpp	52;"	d	file:
test_types	..\boost_examples\ex3-quaternion.cpp	/^typedef boost::mpl::list<float, double LD_TEST, boost::multiprecision::cpp_bin_float_quad CPP_DEC_FLOAT_TEST >  test_types;$/;"	t	file:
near_eps_test_types	..\boost_examples\ex3-quaternion.cpp	/^typedef boost::mpl::list<float, double>  near_eps_test_types;$/;"	t	file:
near_eps_test_types	..\boost_examples\ex3-quaternion.cpp	/^typedef boost::mpl::list<float, double, long double>  near_eps_test_types;$/;"	t	file:
abs	..\boost_examples\ex3-quaternion.cpp	/^inline float        abs(float v)$/;"	f
abs	..\boost_examples\ex3-quaternion.cpp	/^inline double        abs(double v)$/;"	f
abs	..\boost_examples\ex3-quaternion.cpp	/^inline long double    abs(long double v)$/;"	f
quaternion	..\boost_examples\ex3-quaternion.cpp	/^template    class ::boost::math::quaternion<int>;$/;"	m	class:boost::math	typeref:class:boost::math::	file:
quaternion	..\boost_examples\ex3-quaternion.cpp	/^template class boost::math::quaternion<int>;$/;"	m	class:boost::math	typeref:class:boost::math::	file:
other_type	..\boost_examples\ex3-quaternion.cpp	/^struct other_type$/;"	s	file:
type	..\boost_examples\ex3-quaternion.cpp	/^  typedef double type;$/;"	t	struct:other_type	file:
other_type	..\boost_examples\ex3-quaternion.cpp	/^struct other_type<double>$/;"	s	file:
type	..\boost_examples\ex3-quaternion.cpp	/^  typedef float type;$/;"	t	struct:other_type	file:
other_type	..\boost_examples\ex3-quaternion.cpp	/^struct other_type<float>$/;"	s	file:
type	..\boost_examples\ex3-quaternion.cpp	/^  typedef short type;$/;"	t	struct:other_type	file:
test_compare	..\boost_examples\ex3-quaternion.cpp	/^void test_compare(const T& a, const U& b, bool eq)$/;"	f
check_exact_quaternion_result	..\boost_examples\ex3-quaternion.cpp	/^void check_exact_quaternion_result(const boost::math::quaternion<T>& q, R1 a, R2 b, R3 c, R4 d)$/;"	f
check_approx_quaternion_result	..\boost_examples\ex3-quaternion.cpp	/^void check_approx_quaternion_result(const boost::math::quaternion<T>& q, R1 a, R2 b, R3 c, R4 d, int eps = 10)$/;"	f
check_complex_ops_imp	..\boost_examples\ex3-quaternion.cpp	/^void check_complex_ops_imp()$/;"	f
check_complex_ops	..\boost_examples\ex3-quaternion.cpp	/^void check_complex_ops() {}$/;"	f
check_complex_ops	..\boost_examples\ex3-quaternion.cpp	/^void check_complex_ops<float>() { check_complex_ops_imp<float>(); }$/;"	f
check_complex_ops	..\boost_examples\ex3-quaternion.cpp	/^void check_complex_ops<double>() { check_complex_ops_imp<double>(); }$/;"	f
check_complex_ops	..\boost_examples\ex3-quaternion.cpp	/^void check_complex_ops<long double>() { check_complex_ops_imp<long double>(); }$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	..\boost_examples\ex3-quaternion.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(arithmetic_test, T, test_types)$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	..\boost_examples\ex3-quaternion.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(multiplication_test, T, test_types)$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	..\boost_examples\ex3-quaternion.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(exp_test, T, test_types)$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	..\boost_examples\ex3-quaternion.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(cos_test, T, test_types)$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	..\boost_examples\ex3-quaternion.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(sin_test, T, test_types)$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	..\boost_examples\ex3-quaternion.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(cosh_test, T, test_types)$/;"	f
BOOST_AUTO_TEST_CASE_TEMPLATE	..\boost_examples\ex3-quaternion.cpp	/^BOOST_AUTO_TEST_CASE_TEMPLATE(sinh_test, T, test_types)$/;"	f
BuilderSettings	..\Catch2\.conan\build.py	/^class BuilderSettings(object):$/;"	c
username	..\Catch2\.conan\build.py	/^    def username(self):$/;"	m	class:BuilderSettings
login_username	..\Catch2\.conan\build.py	/^    def login_username(self):$/;"	m	class:BuilderSettings
upload	..\Catch2\.conan\build.py	/^    def upload(self):$/;"	m	class:BuilderSettings
upload_only_when_stable	..\Catch2\.conan\build.py	/^    def upload_only_when_stable(self):$/;"	m	class:BuilderSettings
stable_branch_pattern	..\Catch2\.conan\build.py	/^    def stable_branch_pattern(self):$/;"	m	class:BuilderSettings
reference	..\Catch2\.conan\build.py	/^    def reference(self):$/;"	m	class:BuilderSettings
channel	..\Catch2\.conan\build.py	/^    def channel(self):$/;"	m	class:BuilderSettings
_version	..\Catch2\.conan\build.py	/^    def _version(self):$/;"	m	class:BuilderSettings
_branch	..\Catch2\.conan\build.py	/^    def _branch(self):$/;"	m	class:BuilderSettings
TestPackageConan	..\Catch2\.conan\test_package\conanfile.py	/^class TestPackageConan(ConanFile):$/;"	c
build	..\Catch2\.conan\test_package\conanfile.py	/^    def build(self):$/;"	m	class:TestPackageConan
test	..\Catch2\.conan\test_package\conanfile.py	/^    def test(self):$/;"	m	class:TestPackageConan
Factorial	..\Catch2\.conan\test_package\test_package.cpp	/^int Factorial( int number ) {$/;"	f
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	19;"	d	file:
SIMULATE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_VERSION_TWEAK	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	36;"	d	file:
SIMULATE_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	40;"	d	file:
SIMULATE_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	41;"	d	file:
SIMULATE_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	44;"	d	file:
SIMULATE_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	46;"	d	file:
SIMULATE_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	49;"	d	file:
SIMULATE_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	72;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	81;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	102;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_TWEAK	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	189;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	201;"	d	file:
SIMULATE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	203;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	207;"	d	file:
SIMULATE_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	210;"	d	file:
SIMULATE_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	211;"	d	file:
COMPILER_VERSION_TWEAK	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_INTERNAL	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	223;"	d	file:
SIMULATE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	229;"	d	file:
SIMULATE_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	232;"	d	file:
SIMULATE_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	241;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_TWEAK	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	265;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	269;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	272;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	274;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	280;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_INTERNAL	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_MAJOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	285;"	d	file:
COMPILER_VERSION_MINOR	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	286;"	d	file:
COMPILER_VERSION_PATCH	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_VERSION_INTERNAL	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	296;"	d	file:
COMPILER_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	299;"	d	file:
info_compiler	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_simulate	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
qnxnto	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
info_cray	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
STRINGIFY_HELPER	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	319;"	d	file:
STRINGIFY	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	320;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	363;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	366;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	369;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	372;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	375;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	378;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	381;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	384;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	387;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	393;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	397;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	400;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	403;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	406;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	409;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	414;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	417;"	d	file:
PLATFORM_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	421;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	432;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	435;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	438;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	441;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	445;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	447;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	449;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	453;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	456;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	459;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	464;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	467;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	470;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	475;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	478;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	481;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	484;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	487;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	490;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	493;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	496;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	499;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	502;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	507;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	510;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	513;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	516;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	519;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	522;"	d	file:
ARCHITECTURE_ID	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	525;"	d	file:
DEC	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	529;"	d	file:
HEX	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	540;"	d	file:
info_version	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_simulate_version	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_platform	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_arch	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
CXX_STD	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	608;"	d	file:
CXX_STD	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	610;"	d	file:
CXX_STD	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	613;"	d	file:
CXX_STD	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	616;"	d	file:
CXX_STD	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	618;"	d	file:
info_language_dialect_default	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
main	..\Catch2\build\CMakeFiles\3.17.0\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
CatchConan	..\Catch2\conanfile.py	/^class CatchConan(ConanFile):$/;"	c
_configure_cmake	..\Catch2\conanfile.py	/^    def _configure_cmake(self):$/;"	m	class:CatchConan
initions	..\Catch2\conanfile.py	/^        cmake.definitions["BUILD_TESTING"] = "OFF"$/;"	f	function:CatchConan._configure_cmake
initions	..\Catch2\conanfile.py	/^        cmake.definitions["CATCH_INSTALL_DOCS"] = "OFF"$/;"	f	function:CatchConan._configure_cmake
initions	..\Catch2\conanfile.py	/^        cmake.definitions["CATCH_INSTALL_HELPERS"] = "ON"$/;"	f	function:CatchConan._configure_cmake
build	..\Catch2\conanfile.py	/^    def build(self):$/;"	m	class:CatchConan
package	..\Catch2\conanfile.py	/^    def package(self):$/;"	m	class:CatchConan
package_info	..\Catch2\conanfile.py	/^    def package_info(self):$/;"	m	class:CatchConan
Factorial	..\Catch2\examples\010-TestCase.cpp	/^static int Factorial( int number ) {$/;"	f	file:
Factorial	..\Catch2\examples\020-TestCase-2.cpp	/^static int Factorial( int number ) {$/;"	f	file:
one	..\Catch2\examples\030-Asn-Require-Check.cpp	/^static std::string one() {$/;"	f	file:
DBConnection	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^class DBConnection$/;"	c	file:
createConnection	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^    static DBConnection createConnection( std::string const & \/*dbName*\/ ) {$/;"	f	class:DBConnection
executeSQL	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^    bool executeSQL( std::string const & \/*query*\/, int const \/*id*\/, std::string const & arg ) {$/;"	f	class:DBConnection
UniqueTestsFixture	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^class UniqueTestsFixture$/;"	c	file:
UniqueTestsFixture	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^    UniqueTestsFixture()$/;"	f	class:UniqueTestsFixture
getID	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^    int getID() {$/;"	f	class:UniqueTestsFixture
conn	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^    DBConnection conn;$/;"	m	class:UniqueTestsFixture	file:
uniqueID	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^    static int uniqueID;$/;"	m	class:UniqueTestsFixture	file:
uniqueID	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^int UniqueTestsFixture::uniqueID = 0;$/;"	m	class:UniqueTestsFixture	file:
TEST_CASE_METHOD	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^TEST_CASE_METHOD( UniqueTestsFixture, "Create Employee\/No Name", "[create]" ) {$/;"	f
TEST_CASE_METHOD	..\Catch2\examples\110-Fix-ClassFixture.cpp	/^TEST_CASE_METHOD( UniqueTestsFixture, "Create Employee\/Normal", "[create]" ) {$/;"	f
ws	..\Catch2\examples\210-Evt-EventListeners.cpp	/^std::string ws(int const level) {$/;"	f	namespace:__anon1
operator <<	..\Catch2\examples\210-Evt-EventListeners.cpp	/^std::ostream& operator<<(std::ostream& out, Catch::Tag t) {$/;"	f	namespace:__anon1
operator <<	..\Catch2\examples\210-Evt-EventListeners.cpp	/^std::ostream& operator<<( std::ostream& os, std::vector<T> const& v ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SourceLineInfo const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, Catch::MessageInfo const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, std::vector<Catch::MessageInfo> const& v ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestRunInfo const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::Counts const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::Totals const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestRunStats const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestCaseInfo const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestCaseStats const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SectionInfo const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SectionStats const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionInfo const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionResultData const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionResult const& info ) {$/;"	f	namespace:__anon1
print	..\Catch2\examples\210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionStats const& info ) {$/;"	f	namespace:__anon1
dashed_line	..\Catch2\examples\210-Evt-EventListeners.cpp	/^char const * dashed_line =$/;"	v
MyListener	..\Catch2\examples\210-Evt-EventListeners.cpp	/^struct MyListener : Catch::EventListenerBase {$/;"	s	namespace:__anon1	file:
~MyListener	..\Catch2\examples\210-Evt-EventListeners.cpp	/^MyListener::~MyListener() {}$/;"	f	class:MyListener
Fixture	..\Catch2\examples\210-Evt-EventListeners.cpp	/^struct Fixture {$/;"	s	file:
fortytwo	..\Catch2\examples\210-Evt-EventListeners.cpp	/^    int fortytwo() const {$/;"	f	struct:Fixture
TEST_CASE_METHOD	..\Catch2\examples\210-Evt-EventListeners.cpp	/^TEST_CASE_METHOD( Fixture, "3: Testcase with class-based fixture", "[tag-C][tag-D]" ) {$/;"	f
out_buff	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^class out_buff : public std::stringbuf {$/;"	c	file:
m_stream	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^    std::FILE* m_stream;$/;"	m	class:out_buff	file:
out_buff	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^    out_buff(std::FILE* stream):m_stream(stream) {}$/;"	f	class:out_buff
~out_buff	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^out_buff::~out_buff() { pubsync(); }$/;"	f	class:out_buff
Catch	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^namespace Catch {$/;"	n	file:
cout	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^    std::ostream& cout() {$/;"	f	namespace:Catch
clog	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^    std::ostream& clog() {$/;"	f	namespace:Catch
cerr	..\Catch2\examples\231-Cfg-OutputStreams.cpp	/^    std::ostream& cerr() {$/;"	f	namespace:Catch
RandomIntGenerator	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^class RandomIntGenerator : public Catch::Generators::IGenerator<int> {$/;"	c	namespace:__anon2	file:
m_rand	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^    std::minstd_rand m_rand;$/;"	m	class:__anon2::RandomIntGenerator	file:
m_dist	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^    std::uniform_int_distribution<> m_dist;$/;"	m	class:__anon2::RandomIntGenerator	file:
current_number	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^    int current_number;$/;"	m	class:__anon2::RandomIntGenerator	file:
RandomIntGenerator	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^    RandomIntGenerator(int low, int high):$/;"	f	class:__anon2::RandomIntGenerator
override	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^    int const& get() const override;$/;"	m	class:__anon2::RandomIntGenerator	file:
get	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^int const& RandomIntGenerator::get() const {$/;"	f	class:__anon2::RandomIntGenerator
random	..\Catch2\examples\300-Gen-OwnGenerator.cpp	/^Catch::Generators::GeneratorWrapper<int> random(int low, int high) {$/;"	f	namespace:__anon2
LineGenerator	..\Catch2\examples\301-Gen-MapTypeConversion.cpp	/^class LineGenerator : public Catch::Generators::IGenerator<std::string> {$/;"	c	namespace:__anon3	file:
m_line	..\Catch2\examples\301-Gen-MapTypeConversion.cpp	/^    std::string m_line;$/;"	m	class:__anon3::LineGenerator	file:
m_stream	..\Catch2\examples\301-Gen-MapTypeConversion.cpp	/^    std::stringstream m_stream;$/;"	m	class:__anon3::LineGenerator	file:
LineGenerator	..\Catch2\examples\301-Gen-MapTypeConversion.cpp	/^    LineGenerator() {$/;"	f	class:__anon3::LineGenerator
override	..\Catch2\examples\301-Gen-MapTypeConversion.cpp	/^    std::string const& get() const override;$/;"	m	class:__anon3::LineGenerator	file:
get	..\Catch2\examples\301-Gen-MapTypeConversion.cpp	/^std::string const& LineGenerator::get() const {$/;"	f	class:__anon3::std::LineGenerator
lines	..\Catch2\examples\301-Gen-MapTypeConversion.cpp	/^Catch::Generators::GeneratorWrapper<std::string> lines(std::string \/* ignored for example *\/) {$/;"	f	namespace:__anon3
TestSubject	..\Catch2\examples\302-Gen-Table.cpp	/^struct TestSubject {$/;"	s	file:
GetLength	..\Catch2\examples\302-Gen-Table.cpp	/^    size_t GetLength( const std::string& input ) const { return input.size(); }$/;"	f	struct:TestSubject
resample	..\Catch2\extras\catch_amalgamated.cpp	/^     sample resample(URng& rng, int resamples, std::vector<double>::iterator first, std::vector<double>::iterator last, Estimator& estimator) {$/;"	f	namespace:__anon4
erf_inv	..\Catch2\extras\catch_amalgamated.cpp	/^    double erf_inv(double x) {$/;"	f	namespace:__anon4
standard_deviation	..\Catch2\extras\catch_amalgamated.cpp	/^    double standard_deviation(std::vector<double>::iterator first, std::vector<double>::iterator last) {$/;"	f	namespace:__anon4
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
weighted_average_quantile	..\Catch2\extras\catch_amalgamated.cpp	/^            double weighted_average_quantile(int k, int q, std::vector<double>::iterator first, std::vector<double>::iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
erfc_inv	..\Catch2\extras\catch_amalgamated.cpp	/^            double erfc_inv(double x) {$/;"	f	namespace:Catch::Benchmark::Detail
normal_quantile	..\Catch2\extras\catch_amalgamated.cpp	/^            double normal_quantile(double p) {$/;"	f	namespace:Catch::Benchmark::Detail
outlier_variance	..\Catch2\extras\catch_amalgamated.cpp	/^            double outlier_variance(Estimate<double> mean, Estimate<double> stddev, int n) {$/;"	f	namespace:Catch::Benchmark::Detail
analyse_samples	..\Catch2\extras\catch_amalgamated.cpp	/^            bootstrap_analysis analyse_samples(double confidence_level, int n_resamples, std::vector<double>::iterator first, std::vector<double>::iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
benchmarkErrorMsg	..\Catch2\extras\catch_amalgamated.cpp	/^            const std::string benchmarkErrorMsg = "a benchmark failed to run successfully";$/;"	v
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
optimized_away_error	..\Catch2\extras\catch_amalgamated.cpp	/^            struct optimized_away_error : std::exception {$/;"	s	namespace:Catch::Benchmark::Detail	file:
override	..\Catch2\extras\catch_amalgamated.cpp	/^                const char* what() const noexcept override;$/;"	m	struct:Catch::Benchmark::Detail::optimized_away_error	file:
throw_optimized_away_error	..\Catch2\extras\catch_amalgamated.cpp	/^            void throw_optimized_away_error() {$/;"	f	namespace:Catch::Benchmark::Detail
marginComparison	..\Catch2\extras\catch_amalgamated.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:__anon5
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Approx	..\Catch2\extras\catch_amalgamated.cpp	/^    Approx::Approx ( double value )$/;"	f	class:Catch::Approx
custom	..\Catch2\extras\catch_amalgamated.cpp	/^    Approx Approx::custom() {$/;"	f	class:Catch::Approx
operator -	..\Catch2\extras\catch_amalgamated.cpp	/^    Approx Approx::operator-() const {$/;"	f	class:Catch::Approx
toString	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string Approx::toString() const {$/;"	f	class:Catch::Approx
equalityComparisonImpl	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Approx::equalityComparisonImpl(const double other) const {$/;"	f	class:Catch::Approx
setMargin	..\Catch2\extras\catch_amalgamated.cpp	/^    void Approx::setMargin(double newMargin) {$/;"	f	class:Catch::Approx
setEpsilon	..\Catch2\extras\catch_amalgamated.cpp	/^    void Approx::setEpsilon(double newEpsilon) {$/;"	f	class:Catch::Approx
literals	..\Catch2\extras\catch_amalgamated.cpp	/^namespace literals {$/;"	n	namespace:Catch	file:
_a	..\Catch2\extras\catch_amalgamated.cpp	/^    Approx operator "" _a(long double val) {$/;"	f	namespace:Catch::literals
_a	..\Catch2\extras\catch_amalgamated.cpp	/^    Approx operator "" _a(unsigned long long val) {$/;"	f	namespace:Catch::literals
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<Catch::Approx>::convert(Catch::Approx const& value) {$/;"	f	class:Catch::StringMaker
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
AssertionResultData	..\Catch2\extras\catch_amalgamated.cpp	/^    AssertionResultData::AssertionResultData(ResultWas::OfType _resultType, LazyExpression const & _lazyExpression):$/;"	f	class:Catch::AssertionResultData
reconstructExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string AssertionResultData::reconstructExpression() const {$/;"	f	class:Catch::AssertionResultData
AssertionResult	..\Catch2\extras\catch_amalgamated.cpp	/^    AssertionResult::AssertionResult( AssertionInfo const& info, AssertionResultData const& data )$/;"	f	class:Catch::AssertionResult
succeeded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool AssertionResult::succeeded() const {$/;"	f	class:Catch::AssertionResult
isOk	..\Catch2\extras\catch_amalgamated.cpp	/^    bool AssertionResult::isOk() const {$/;"	f	class:Catch::AssertionResult
getResultType	..\Catch2\extras\catch_amalgamated.cpp	/^    ResultWas::OfType AssertionResult::getResultType() const {$/;"	f	class:Catch::AssertionResult
hasExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    bool AssertionResult::hasExpression() const {$/;"	f	class:Catch::AssertionResult
hasMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    bool AssertionResult::hasMessage() const {$/;"	f	class:Catch::AssertionResult
getExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string AssertionResult::getExpression() const {$/;"	f	class:Catch::AssertionResult
getExpressionInMacro	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string AssertionResult::getExpressionInMacro() const {$/;"	f	class:Catch::AssertionResult
hasExpandedExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    bool AssertionResult::hasExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
getExpandedExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string AssertionResult::getExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
getMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string AssertionResult::getMessage() const {$/;"	f	class:Catch::AssertionResult
getSourceInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    SourceLineInfo AssertionResult::getSourceInfo() const {$/;"	f	class:Catch::AssertionResult
getTestMacroName	..\Catch2\extras\catch_amalgamated.cpp	/^    StringRef AssertionResult::getTestMacroName() const {$/;"	f	class:Catch::AssertionResult
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Config	..\Catch2\extras\catch_amalgamated.cpp	/^    Config::Config( ConfigData const& data )$/;"	f	class:Catch::Config
getFilename	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string const& Config::getFilename() const {$/;"	f	class:Catch::std::Config
listTests	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::listTests() const          { return m_data.listTests; }$/;"	f	class:Catch::Config
listTags	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::listTags() const           { return m_data.listTags; }$/;"	f	class:Catch::Config
listReporters	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::listReporters() const      { return m_data.listReporters; }$/;"	f	class:Catch::Config
getProcessName	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string Config::getProcessName() const { return m_data.processName; }$/;"	f	class:Catch::Config
getReporterName	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string const& Config::getReporterName() const { return m_data.reporterName; }$/;"	f	class:Catch::std::Config
getTestsOrTags	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<std::string> const& Config::getTestsOrTags() const { return m_data.testsOrTags; }$/;"	f	class:Catch::std::Config
getSectionsToRun	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<std::string> const& Config::getSectionsToRun() const { return m_data.sectionsToRun; }$/;"	f	class:Catch::std::Config
testSpec	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpec const& Config::testSpec() const { return m_testSpec; }$/;"	f	class:Catch::Config
hasTestFilters	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::hasTestFilters() const { return m_hasTestFilters; }$/;"	f	class:Catch::Config
showHelp	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::showHelp() const { return m_data.showHelp; }$/;"	f	class:Catch::Config
allowThrows	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::allowThrows() const                   { return !m_data.noThrow; }$/;"	f	class:Catch::Config
stream	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& Config::stream() const               { return m_stream->stream(); }$/;"	f	class:Catch::Config
name	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string Config::name() const                   { return m_data.name.empty() ? m_data.processName : m_data.name; }$/;"	f	class:Catch::Config
includeSuccessfulResults	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::includeSuccessfulResults() const      { return m_data.showSuccessfulTests; }$/;"	f	class:Catch::Config
warnAboutMissingAssertions	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::warnAboutMissingAssertions() const    { return !!(m_data.warnings & WarnAbout::NoAssertions); }$/;"	f	class:Catch::Config
warnAboutNoTests	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::warnAboutNoTests() const              { return !!(m_data.warnings & WarnAbout::NoTests); }$/;"	f	class:Catch::Config
showDurations	..\Catch2\extras\catch_amalgamated.cpp	/^    ShowDurations Config::showDurations() const        { return m_data.showDurations; }$/;"	f	class:Catch::Config
minDuration	..\Catch2\extras\catch_amalgamated.cpp	/^    double Config::minDuration() const                 { return m_data.minDuration; }$/;"	f	class:Catch::Config
runOrder	..\Catch2\extras\catch_amalgamated.cpp	/^    TestRunOrder Config::runOrder() const              { return m_data.runOrder; }$/;"	f	class:Catch::Config
rngSeed	..\Catch2\extras\catch_amalgamated.cpp	/^    unsigned int Config::rngSeed() const               { return m_data.rngSeed; }$/;"	f	class:Catch::Config
useColour	..\Catch2\extras\catch_amalgamated.cpp	/^    UseColour Config::useColour() const                { return m_data.useColour; }$/;"	f	class:Catch::Config
shouldDebugBreak	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::shouldDebugBreak() const              { return m_data.shouldDebugBreak; }$/;"	f	class:Catch::Config
abortAfter	..\Catch2\extras\catch_amalgamated.cpp	/^    int Config::abortAfter() const                     { return m_data.abortAfter; }$/;"	f	class:Catch::Config
showInvisibles	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::showInvisibles() const                { return m_data.showInvisibles; }$/;"	f	class:Catch::Config
verbosity	..\Catch2\extras\catch_amalgamated.cpp	/^    Verbosity Config::verbosity() const                { return m_data.verbosity; }$/;"	f	class:Catch::Config
benchmarkNoAnalysis	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Config::benchmarkNoAnalysis() const                      { return m_data.benchmarkNoAnalysis; }$/;"	f	class:Catch::Config
benchmarkSamples	..\Catch2\extras\catch_amalgamated.cpp	/^    int Config::benchmarkSamples() const                          { return m_data.benchmarkSamples; }$/;"	f	class:Catch::Config
benchmarkConfidenceInterval	..\Catch2\extras\catch_amalgamated.cpp	/^    double Config::benchmarkConfidenceInterval() const            { return m_data.benchmarkConfidenceInterval; }$/;"	f	class:Catch::Config
benchmarkResamples	..\Catch2\extras\catch_amalgamated.cpp	/^    unsigned int Config::benchmarkResamples() const               { return m_data.benchmarkResamples; }$/;"	f	class:Catch::Config
benchmarkWarmupTime	..\Catch2\extras\catch_amalgamated.cpp	/^    std::chrono::milliseconds Config::benchmarkWarmupTime() const { return std::chrono::milliseconds(m_data.benchmarkWarmupTime); }$/;"	f	class:Catch::Config
openStream	..\Catch2\extras\catch_amalgamated.cpp	/^    IStream const* Config::openStream() {$/;"	f	class:Catch::Config
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
MessageBuilder	..\Catch2\extras\catch_amalgamated.cpp	/^    Catch::MessageBuilder::MessageBuilder( StringRef const& macroName,$/;"	f	class:Catch::Catch::MessageBuilder
ScopedMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    ScopedMessage::ScopedMessage( MessageBuilder const& builder ):$/;"	f	class:Catch::ScopedMessage
move	..\Catch2\extras\catch_amalgamated.cpp	/^        m_info( std::move( old.m_info ) ) {$/;"	f	namespace:Catch
~ScopedMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    ScopedMessage::~ScopedMessage() {$/;"	f	class:Catch::ScopedMessage
Capturer	..\Catch2\extras\catch_amalgamated.cpp	/^    Capturer::Capturer( StringRef macroName, SourceLineInfo const& lineInfo, ResultWas::OfType resultType, StringRef names ) {$/;"	f	class:Catch::Capturer
~Capturer	..\Catch2\extras\catch_amalgamated.cpp	/^    Capturer::~Capturer() {$/;"	f	class:Catch::Capturer
captureValue	..\Catch2\extras\catch_amalgamated.cpp	/^    void Capturer::captureValue( size_t index, std::string const& value ) {$/;"	f	class:Catch::Capturer
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
RegistryHub	..\Catch2\extras\catch_amalgamated.cpp	/^        class RegistryHub : public IRegistryHub,$/;"	c	namespace:Catch::__anon6	file:
m_testCaseRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^            TestRegistry m_testCaseRegistry;$/;"	m	class:Catch::__anon6::RegistryHub	file:
m_reporterRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^            ReporterRegistry m_reporterRegistry;$/;"	m	class:Catch::__anon6::RegistryHub	file:
m_exceptionTranslatorRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^            ExceptionTranslatorRegistry m_exceptionTranslatorRegistry;$/;"	m	class:Catch::__anon6::RegistryHub	file:
m_tagAliasRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^            TagAliasRegistry m_tagAliasRegistry;$/;"	m	class:Catch::__anon6::RegistryHub	file:
m_exceptionRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^            StartupExceptionRegistry m_exceptionRegistry;$/;"	m	class:Catch::__anon6::RegistryHub	file:
m_enumValuesRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^            Detail::EnumValuesRegistry m_enumValuesRegistry;$/;"	m	class:Catch::__anon6::RegistryHub	file:
getRegistryHub	..\Catch2\extras\catch_amalgamated.cpp	/^    IRegistryHub const& getRegistryHub() {$/;"	f	namespace:Catch
getMutableRegistryHub	..\Catch2\extras\catch_amalgamated.cpp	/^    IMutableRegistryHub& getMutableRegistryHub() {$/;"	f	namespace:Catch
cleanUp	..\Catch2\extras\catch_amalgamated.cpp	/^    void cleanUp() {$/;"	f	namespace:Catch
translateActiveException	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string translateActiveException() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
MaxExitCode	..\Catch2\extras\catch_amalgamated.cpp	/^        const int MaxExitCode = 255;$/;"	v
createReporter	..\Catch2\extras\catch_amalgamated.cpp	/^        IStreamingReporterPtr createReporter(std::string const& reporterName, IConfig const* config) {$/;"	f	namespace:Catch::__anon7
makeReporter	..\Catch2\extras\catch_amalgamated.cpp	/^        IStreamingReporterPtr makeReporter(Config const* config) {$/;"	f	namespace:Catch::__anon7
TestGroup	..\Catch2\extras\catch_amalgamated.cpp	/^        class TestGroup {$/;"	c	namespace:Catch::__anon7	file:
TestGroup	..\Catch2\extras\catch_amalgamated.cpp	/^            explicit TestGroup(IStreamingReporterPtr&& reporter, Config const* config):$/;"	f	class:Catch::__anon7::TestGroup
execute	..\Catch2\extras\catch_amalgamated.cpp	/^            Totals execute() {$/;"	f	class:Catch::__anon7::TestGroup
m_config	..\Catch2\extras\catch_amalgamated.cpp	/^            Config const* m_config;$/;"	m	class:Catch::__anon7::TestGroup	file:
m_context	..\Catch2\extras\catch_amalgamated.cpp	/^            RunContext m_context;$/;"	m	class:Catch::__anon7::TestGroup	file:
m_tests	..\Catch2\extras\catch_amalgamated.cpp	/^            Tests m_tests;$/;"	m	class:Catch::__anon7::TestGroup	file:
m_matches	..\Catch2\extras\catch_amalgamated.cpp	/^            TestSpec::Matches m_matches;$/;"	m	class:Catch::__anon7::TestGroup	file:
applyFilenamesAsTags	..\Catch2\extras\catch_amalgamated.cpp	/^        void applyFilenamesAsTags() {$/;"	f	namespace:Catch::__anon7
Session	..\Catch2\extras\catch_amalgamated.cpp	/^    Session::Session() {$/;"	f	class:Catch::Session
~Session	..\Catch2\extras\catch_amalgamated.cpp	/^    Session::~Session() {$/;"	f	class:Catch::Session
showHelp	..\Catch2\extras\catch_amalgamated.cpp	/^    void Session::showHelp() const {$/;"	f	class:Catch::Session
libIdentify	..\Catch2\extras\catch_amalgamated.cpp	/^    void Session::libIdentify() {$/;"	f	class:Catch::Session
applyCommandLine	..\Catch2\extras\catch_amalgamated.cpp	/^    int Session::applyCommandLine( int argc, char const * const * argv ) {$/;"	f	class:Catch::Session
applyCommandLine	..\Catch2\extras\catch_amalgamated.cpp	/^    int Session::applyCommandLine( int argc, wchar_t const * const * argv ) {$/;"	f	class:Catch::Session
useConfigData	..\Catch2\extras\catch_amalgamated.cpp	/^    void Session::useConfigData( ConfigData const& configData ) {$/;"	f	class:Catch::Session
run	..\Catch2\extras\catch_amalgamated.cpp	/^    int Session::run() {$/;"	f	class:Catch::Session
cli	..\Catch2\extras\catch_amalgamated.cpp	/^    Clara::Parser const& Session::cli() const {$/;"	f	class:Catch::Clara::Session
cli	..\Catch2\extras\catch_amalgamated.cpp	/^    void Session::cli( Clara::Parser const& newParser ) {$/;"	f	class:Catch::Session
configData	..\Catch2\extras\catch_amalgamated.cpp	/^    ConfigData& Session::configData() {$/;"	f	class:Catch::Session
config	..\Catch2\extras\catch_amalgamated.cpp	/^    Config& Session::config() {$/;"	f	class:Catch::Session
runInternal	..\Catch2\extras\catch_amalgamated.cpp	/^    int Session::runInternal() {$/;"	f	class:Catch::Session
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
operator |	..\Catch2\extras\catch_amalgamated.cpp	/^        TestCaseProperties operator|(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon8
operator |=	..\Catch2\extras\catch_amalgamated.cpp	/^        TestCaseProperties& operator|=(TestCaseProperties& lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon8
operator &	..\Catch2\extras\catch_amalgamated.cpp	/^        TestCaseProperties operator&(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon8
applies	..\Catch2\extras\catch_amalgamated.cpp	/^        bool applies(TestCaseProperties tcp) {$/;"	f	namespace:Catch::__anon8
parseSpecialTag	..\Catch2\extras\catch_amalgamated.cpp	/^        TestCaseProperties parseSpecialTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon8
isReservedTag	..\Catch2\extras\catch_amalgamated.cpp	/^        bool isReservedTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon8
enforceNotReservedTag	..\Catch2\extras\catch_amalgamated.cpp	/^        void enforceNotReservedTag( StringRef tag, SourceLineInfo const& _lineInfo ) {$/;"	f	namespace:Catch::__anon8
makeDefaultName	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string makeDefaultName() {$/;"	f	namespace:Catch::__anon8
extractFilenamePart	..\Catch2\extras\catch_amalgamated.cpp	/^        StringRef extractFilenamePart(StringRef filename) {$/;"	f	namespace:Catch::__anon8
sizeOfExtraTags	..\Catch2\extras\catch_amalgamated.cpp	/^        size_t sizeOfExtraTags(StringRef filepath) {$/;"	f	namespace:Catch::__anon8
makeTestCaseInfo	..\Catch2\extras\catch_amalgamated.cpp	/^        makeTestCaseInfo(std::string const& _className,$/;"	f	namespace:Catch
TestCaseInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    TestCaseInfo::TestCaseInfo(std::string const& _className,$/;"	f	class:Catch::TestCaseInfo
isHidden	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestCaseInfo::isHidden() const {$/;"	f	class:Catch::TestCaseInfo
throws	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestCaseInfo::throws() const {$/;"	f	class:Catch::TestCaseInfo
okToFail	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestCaseInfo::okToFail() const {$/;"	f	class:Catch::TestCaseInfo
expectedToFail	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestCaseInfo::expectedToFail() const {$/;"	f	class:Catch::TestCaseInfo
addFilenameTag	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestCaseInfo::addFilenameTag() {$/;"	f	class:Catch::TestCaseInfo
tagsAsString	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string TestCaseInfo::tagsAsString() const {$/;"	f	class:Catch::TestCaseInfo
internalAppendTag	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestCaseInfo::internalAppendTag(StringRef tagStr) {$/;"	f	class:Catch::TestCaseInfo
operator ==	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestCaseHandle::operator == ( TestCaseHandle const& rhs ) const {$/;"	f	class:Catch::TestCaseHandle
operator <	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestCaseHandle::operator < ( TestCaseHandle const& rhs ) const {$/;"	f	class:Catch::TestCaseHandle
getTestCaseInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    TestCaseInfo const& TestCaseHandle::getTestCaseInfo() const {$/;"	f	class:Catch::TestCaseHandle
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Pattern	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpec::Pattern::Pattern( std::string const& name )$/;"	f	class:Catch::TestSpec::Pattern
name	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string const& TestSpec::Pattern::name() const {$/;"	f	class:Catch::std::TestSpec::Pattern
NamePattern	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpec::NamePattern::NamePattern( std::string const& name, std::string const& filterString )$/;"	f	class:Catch::TestSpec::NamePattern
matches	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpec::NamePattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::NamePattern
TagPattern	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpec::TagPattern::TagPattern( std::string const& tag, std::string const& filterString )$/;"	f	class:Catch::TestSpec::TagPattern
matches	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpec::TagPattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::TagPattern
matches	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpec::Filter::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::Filter
name	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string TestSpec::Filter::name() const {$/;"	f	class:Catch::TestSpec::Filter
hasFilters	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpec::hasFilters() const {$/;"	f	class:Catch::TestSpec
matches	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpec::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec
matchesByFilter	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpec::Matches TestSpec::matchesByFilter( std::vector<TestCaseHandle> const& testCases, IConfig const& config ) const$/;"	f	class:Catch::TestSpec
getInvalidArgs	..\Catch2\extras\catch_amalgamated.cpp	/^    const TestSpec::vectorStrings& TestSpec::getInvalidArgs() const{$/;"	f	class:Catch::TestSpec
nanosecondsInSecond	..\Catch2\extras\catch_amalgamated.cpp	/^static const uint64_t nanosecondsInSecond = 1000000000;$/;"	v	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
start	..\Catch2\extras\catch_amalgamated.cpp	/^    void Timer::start() {$/;"	f	class:Catch::Timer
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
unprintableString	..\Catch2\extras\catch_amalgamated.cpp	/^    const std::string unprintableString = "{?}";$/;"	v
hexThreshold	..\Catch2\extras\catch_amalgamated.cpp	/^        const int hexThreshold = 255;$/;"	v
Endianness	..\Catch2\extras\catch_amalgamated.cpp	/^        struct Endianness {$/;"	s	namespace:Catch::Detail::__anon10	file:
Arch	..\Catch2\extras\catch_amalgamated.cpp	/^            enum Arch { Big, Little };$/;"	g	struct:Catch::Detail::__anon10::Endianness	file:
Big	..\Catch2\extras\catch_amalgamated.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon10::Endianness::Arch	file:
Little	..\Catch2\extras\catch_amalgamated.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon10::Endianness::Arch	file:
which	..\Catch2\extras\catch_amalgamated.cpp	/^            static Arch which() {$/;"	f	struct:Catch::Detail::__anon10::Endianness
fpToString	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string fpToString(T value, int precision) {$/;"	f	namespace:Catch::Detail::__anon10
rawMemoryToString	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string rawMemoryToString( const void *object, std::size_t size ) {$/;"	f	namespace:Catch::Detail
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<std::string>::convert(const std::string& str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<std::string_view>::convert(std::string_view str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<char const*>::convert(char const* str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<char*>::convert(char* str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<std::wstring>::convert(const std::wstring& wstr) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<std::wstring_view>::convert(std::wstring_view str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<wchar_t const*>::convert(wchar_t const * str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<wchar_t *>::convert(wchar_t * str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<std::byte>::convert(std::byte value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<int>::convert(int value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<long>::convert(long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<long long>::convert(long long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<unsigned int>::convert(unsigned int value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<unsigned long>::convert(unsigned long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<unsigned long long>::convert(unsigned long long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<signed char>::convert(signed char value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<char>::convert(char c) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<unsigned char>::convert(unsigned char c) {$/;"	f	class:Catch::StringMaker
precision	..\Catch2\extras\catch_amalgamated.cpp	/^int StringMaker<float>::precision = 5;$/;"	m	class:Catch::StringMaker	file:
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<float>::convert(float value) {$/;"	f	class:Catch::StringMaker
precision	..\Catch2\extras\catch_amalgamated.cpp	/^int StringMaker<double>::precision = 10;$/;"	m	class:Catch::StringMaker	file:
convert	..\Catch2\extras\catch_amalgamated.cpp	/^std::string StringMaker<double>::convert(double value) {$/;"	f	class:Catch::StringMaker
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
operator -	..\Catch2\extras\catch_amalgamated.cpp	/^    Counts Counts::operator - ( Counts const& other ) const {$/;"	f	class:Catch::Counts
operator +=	..\Catch2\extras\catch_amalgamated.cpp	/^    Counts& Counts::operator += ( Counts const& other ) {$/;"	f	class:Catch::Counts
total	..\Catch2\extras\catch_amalgamated.cpp	/^    std::size_t Counts::total() const {$/;"	f	class:Catch::Counts
allPassed	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Counts::allPassed() const {$/;"	f	class:Catch::Counts
allOk	..\Catch2\extras\catch_amalgamated.cpp	/^    bool Counts::allOk() const {$/;"	f	class:Catch::Counts
operator -	..\Catch2\extras\catch_amalgamated.cpp	/^    Totals Totals::operator - ( Totals const& other ) const {$/;"	f	class:Catch::Totals
operator +=	..\Catch2\extras\catch_amalgamated.cpp	/^    Totals& Totals::operator += ( Totals const& other ) {$/;"	f	class:Catch::Totals
delta	..\Catch2\extras\catch_amalgamated.cpp	/^    Totals Totals::delta( Totals const& prevTotals ) const {$/;"	f	class:Catch::Totals
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Version	..\Catch2\extras\catch_amalgamated.cpp	/^    Version::Version$/;"	f	class:Catch::Version
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, Version const& version ) {$/;"	f	namespace:Catch
libraryVersion	..\Catch2\extras\catch_amalgamated.cpp	/^    Version const& libraryVersion() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Generators	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Generators {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Generators	file:
throw_generator_exception	..\Catch2\extras\catch_amalgamated.cpp	/^    void throw_generator_exception(char const* msg) {$/;"	f	namespace:Catch::Generators::Detail
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
ReporterConfig	..\Catch2\extras\catch_amalgamated.cpp	/^    ReporterConfig::ReporterConfig( IConfig const* _fullConfig )$/;"	f	class:Catch::ReporterConfig
ReporterConfig	..\Catch2\extras\catch_amalgamated.cpp	/^    ReporterConfig::ReporterConfig( IConfig const* _fullConfig, std::ostream& _stream )$/;"	f	class:Catch::ReporterConfig
stream	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& ReporterConfig::stream() const { return *m_stream; }$/;"	f	class:Catch::ReporterConfig
fullConfig	..\Catch2\extras\catch_amalgamated.cpp	/^    IConfig const * ReporterConfig::fullConfig() const { return m_fullConfig; }$/;"	f	class:Catch::ReporterConfig
TestRunInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    TestRunInfo::TestRunInfo( std::string const& _name ) : name( _name ) {}$/;"	f	class:Catch::TestRunInfo
GroupInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    GroupInfo::GroupInfo(  std::string const& _name,$/;"	f	class:Catch::GroupInfo
AssertionStats	..\Catch2\extras\catch_amalgamated.cpp	/^     AssertionStats::AssertionStats( AssertionResult const& _assertionResult,$/;"	f	class:Catch::AssertionStats
SectionStats	..\Catch2\extras\catch_amalgamated.cpp	/^    SectionStats::SectionStats(  SectionInfo const& _sectionInfo,$/;"	f	class:Catch::SectionStats
TestCaseStats	..\Catch2\extras\catch_amalgamated.cpp	/^    TestCaseStats::TestCaseStats(  TestCaseInfo const& _testInfo,$/;"	f	class:Catch::TestCaseStats
TestGroupStats	..\Catch2\extras\catch_amalgamated.cpp	/^    TestGroupStats::TestGroupStats( GroupInfo const& _groupInfo,$/;"	f	class:Catch::TestGroupStats
TestGroupStats	..\Catch2\extras\catch_amalgamated.cpp	/^    TestGroupStats::TestGroupStats( GroupInfo const& _groupInfo )$/;"	f	class:Catch::TestGroupStats
TestRunStats	..\Catch2\extras\catch_amalgamated.cpp	/^    TestRunStats::TestRunStats(   TestRunInfo const& _runInfo,$/;"	f	class:Catch::TestRunStats
fatalErrorEncountered	..\Catch2\extras\catch_amalgamated.cpp	/^    void IStreamingReporter::fatalErrorEncountered( StringRef ) {}$/;"	f	class:Catch::IStreamingReporter
listReporters	..\Catch2\extras\catch_amalgamated.cpp	/^    void IStreamingReporter::listReporters(std::vector<ReporterDescription> const& descriptions, IConfig const& config) {$/;"	f	class:Catch::IStreamingReporter
listTests	..\Catch2\extras\catch_amalgamated.cpp	/^    void IStreamingReporter::listTests(std::vector<TestCaseHandle> const& tests, IConfig const& config) {$/;"	f	class:Catch::IStreamingReporter
listTags	..\Catch2\extras\catch_amalgamated.cpp	/^    void IStreamingReporter::listTags(std::vector<TagInfo> const& tags, IConfig const& config) {$/;"	f	class:Catch::IStreamingReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
AssertionHandler	..\Catch2\extras\catch_amalgamated.cpp	/^    AssertionHandler::AssertionHandler$/;"	f	class:Catch::AssertionHandler
getResultCapture	..\Catch2\extras\catch_amalgamated.cpp	/^        m_resultCapture( getResultCapture() )$/;"	f	namespace:Catch
handleExpr	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::handleExpr( ITransientExpression const& expr ) {$/;"	f	class:Catch::AssertionHandler
handleMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::handleMessage(ResultWas::OfType resultType, StringRef const& message) {$/;"	f	class:Catch::AssertionHandler
complete	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::complete() {$/;"	f	class:Catch::AssertionHandler
setCompleted	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::setCompleted() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedInflightException	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::handleUnexpectedInflightException() {$/;"	f	class:Catch::AssertionHandler
handleExceptionThrownAsExpected	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::handleExceptionThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleExceptionNotThrownAsExpected	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::handleExceptionNotThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedExceptionNotThrown	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::handleUnexpectedExceptionNotThrown() {$/;"	f	class:Catch::AssertionHandler
handleThrowingCallSkipped	..\Catch2\extras\catch_amalgamated.cpp	/^    void AssertionHandler::handleThrowingCallSkipped() {$/;"	f	class:Catch::AssertionHandler
handleExceptionMatchExpr	..\Catch2\extras\catch_amalgamated.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, std::string const& str, StringRef const& matcherString  ) {$/;"	f	namespace:Catch
isOptPrefix	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isOptPrefix( char c ) {$/;"	f	namespace:__anon11
normaliseOpt	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string normaliseOpt( std::string const& optName ) {$/;"	f	namespace:__anon11
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Clara	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Clara {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Clara	file:
loadBuffer	..\Catch2\extras\catch_amalgamated.cpp	/^            void TokenStream::loadBuffer() {$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	..\Catch2\extras\catch_amalgamated.cpp	/^            TokenStream::TokenStream( Args const& args ):$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	..\Catch2\extras\catch_amalgamated.cpp	/^            TokenStream::TokenStream( Iterator it_, Iterator itEnd_ ):$/;"	f	class:Catch::Clara::Detail::TokenStream
operator ++	..\Catch2\extras\catch_amalgamated.cpp	/^            TokenStream& TokenStream::operator++() {$/;"	f	class:Catch::Clara::Detail::TokenStream
convertInto	..\Catch2\extras\catch_amalgamated.cpp	/^            ParserResult convertInto( std::string const& source,$/;"	f	namespace:Catch::Clara::Detail
convertInto	..\Catch2\extras\catch_amalgamated.cpp	/^            ParserResult convertInto( std::string const& source,$/;"	f	namespace:Catch::Clara::Detail
cardinality	..\Catch2\extras\catch_amalgamated.cpp	/^            size_t ParserBase::cardinality() const { return 1; }$/;"	f	class:Catch::Clara::Detail::ParserBase
parse	..\Catch2\extras\catch_amalgamated.cpp	/^            InternalParseResult ParserBase::parse( Args const& args ) const {$/;"	f	class:Catch::Clara::Detail::ParserBase
ParseState	..\Catch2\extras\catch_amalgamated.cpp	/^            ParseState::ParseState( ParseResultType type,$/;"	f	class:Catch::Clara::Detail::ParseState
setFlag	..\Catch2\extras\catch_amalgamated.cpp	/^            ParserResult BoundFlagRef::setFlag( bool flag ) {$/;"	f	class:Catch::Clara::Detail::BoundFlagRef
isContainer	..\Catch2\extras\catch_amalgamated.cpp	/^            bool BoundRef::isContainer() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isFlag	..\Catch2\extras\catch_amalgamated.cpp	/^            bool BoundRef::isFlag() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isFlag	..\Catch2\extras\catch_amalgamated.cpp	/^            bool BoundFlagRefBase::isFlag() const { return true; }$/;"	f	class:Catch::Clara::Detail::BoundFlagRefBase
parse	..\Catch2\extras\catch_amalgamated.cpp	/^        Detail::InternalParseResult Arg::parse(std::string const&,$/;"	f	class:Catch::Clara::Arg
Opt	..\Catch2\extras\catch_amalgamated.cpp	/^        Opt::Opt(bool& ref) :$/;"	f	class:Catch::Clara::Opt
getHelpColumns	..\Catch2\extras\catch_amalgamated.cpp	/^        std::vector<Detail::HelpColumns> Opt::getHelpColumns() const {$/;"	f	class:Catch::Clara::Opt
isMatch	..\Catch2\extras\catch_amalgamated.cpp	/^        bool Opt::isMatch(std::string const& optToken) const {$/;"	f	class:Catch::Clara::Opt
parse	..\Catch2\extras\catch_amalgamated.cpp	/^        Detail::InternalParseResult Opt::parse(std::string const&,$/;"	f	class:Catch::Clara::Opt
validate	..\Catch2\extras\catch_amalgamated.cpp	/^        Detail::Result Opt::validate() const {$/;"	f	class:Catch::Clara::Opt
ExeName	..\Catch2\extras\catch_amalgamated.cpp	/^        ExeName::ExeName() :$/;"	f	class:Catch::Clara::ExeName
ExeName	..\Catch2\extras\catch_amalgamated.cpp	/^        ExeName::ExeName(std::string& ref) : ExeName() {$/;"	f	class:Catch::Clara::ExeName
parse	..\Catch2\extras\catch_amalgamated.cpp	/^            ExeName::parse(std::string const&,$/;"	f	class:Catch::Clara::ExeName
set	..\Catch2\extras\catch_amalgamated.cpp	/^        ParserResult ExeName::set(std::string const& newName) {$/;"	f	class:Catch::Clara::ExeName
operator |=	..\Catch2\extras\catch_amalgamated.cpp	/^        Parser& Parser::operator|=( Parser const& other ) {$/;"	f	class:Catch::Clara::Parser
getHelpColumns	..\Catch2\extras\catch_amalgamated.cpp	/^        std::vector<Detail::HelpColumns> Parser::getHelpColumns() const {$/;"	f	class:Catch::Clara::Parser
writeToStream	..\Catch2\extras\catch_amalgamated.cpp	/^        void Parser::writeToStream( std::ostream& os ) const {$/;"	f	class:Catch::Clara::Parser
validate	..\Catch2\extras\catch_amalgamated.cpp	/^        Detail::Result Parser::validate() const {$/;"	f	class:Catch::Clara::Parser
parse	..\Catch2\extras\catch_amalgamated.cpp	/^        Parser::parse( std::string const& exeName,$/;"	f	class:Catch::Clara::Parser
Args	..\Catch2\extras\catch_amalgamated.cpp	/^        Args::Args(int argc, char const* const* argv) :$/;"	f	class:Catch::Clara::Args
Args	..\Catch2\extras\catch_amalgamated.cpp	/^        Args::Args(std::initializer_list<std::string> args) :$/;"	f	class:Catch::Clara::Args
Help	..\Catch2\extras\catch_amalgamated.cpp	/^        Help::Help( bool& showHelpFlag ):$/;"	f	class:Catch::Clara::Help
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
RegistrarForTagAliases	..\Catch2\extras\catch_amalgamated.cpp	/^    RegistrarForTagAliases::RegistrarForTagAliases(char const* alias, char const* tag, SourceLineInfo const& lineInfo) {$/;"	f	class:Catch::RegistrarForTagAliases
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
isnan	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isnan(float f) {$/;"	f	namespace:Catch
isnan	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isnan(double d) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
uncaught_exceptions	..\Catch2\extras\catch_amalgamated.cpp	/^    bool uncaught_exceptions() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
ErrnoGuard	..\Catch2\extras\catch_amalgamated.cpp	/^        ErrnoGuard::ErrnoGuard():m_oldErrno(errno){}$/;"	f	class:Catch::ErrnoGuard
~ErrnoGuard	..\Catch2\extras\catch_amalgamated.cpp	/^        ErrnoGuard::~ErrnoGuard() { errno = m_oldErrno; }$/;"	f	class:Catch::ErrnoGuard
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
formatReconstructedExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    void formatReconstructedExpression( std::ostream &os, std::string const& lhs, StringRef op, std::string const& rhs ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
LeakDetector	..\Catch2\extras\catch_amalgamated.cpp	/^    LeakDetector::LeakDetector() {$/;"	f	class:Catch::LeakDetector
LeakDetector	..\Catch2\extras\catch_amalgamated.cpp	/^    Catch::LeakDetector::LeakDetector() {}$/;"	f	class:Catch::LeakDetector
~LeakDetector	..\Catch2\extras\catch_amalgamated.cpp	/^Catch::LeakDetector::~LeakDetector() {$/;"	f	class:Catch::LeakDetector
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
MessageInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    MessageInfo::MessageInfo(   StringRef const& _macroName,$/;"	f	class:Catch::MessageInfo
globalCount	..\Catch2\extras\catch_amalgamated.cpp	/^    unsigned int MessageInfo::globalCount = 0;$/;"	m	class:Catch::MessageInfo	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
makeCommandLineParser	..\Catch2\extras\catch_amalgamated.cpp	/^    Clara::Parser makeCommandLineParser( ConfigData& config ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, SourceLineInfo const& info ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
IColourImpl	..\Catch2\extras\catch_amalgamated.cpp	/^        struct IColourImpl {$/;"	s	namespace:Catch::__anon12	file:
NoColourImpl	..\Catch2\extras\catch_amalgamated.cpp	/^        struct NoColourImpl : IColourImpl {$/;"	s	namespace:Catch::__anon12	file:
instance	..\Catch2\extras\catch_amalgamated.cpp	/^            static IColourImpl* instance() {$/;"	f	struct:Catch::__anon12::NoColourImpl
CATCH_CONFIG_COLOUR_WINDOWS	..\Catch2\extras\catch_amalgamated.cpp	3106;"	d	file:
CATCH_CONFIG_COLOUR_ANSI	..\Catch2\extras\catch_amalgamated.cpp	3108;"	d	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Win32ColourImpl	..\Catch2\extras\catch_amalgamated.cpp	/^    class Win32ColourImpl : public IColourImpl {$/;"	c	namespace:Catch::__anon13	file:
Win32ColourImpl	..\Catch2\extras\catch_amalgamated.cpp	/^        Win32ColourImpl() : stdoutHandle( GetStdHandle(STD_OUTPUT_HANDLE) )$/;"	f	class:Catch::__anon13::Win32ColourImpl
setTextAttribute	..\Catch2\extras\catch_amalgamated.cpp	/^        void setTextAttribute( WORD _textAttribute ) {$/;"	f	class:Catch::__anon13::Win32ColourImpl	file:
stdoutHandle	..\Catch2\extras\catch_amalgamated.cpp	/^        HANDLE stdoutHandle;$/;"	m	class:Catch::__anon13::Win32ColourImpl	file:
originalForegroundAttributes	..\Catch2\extras\catch_amalgamated.cpp	/^        WORD originalForegroundAttributes;$/;"	m	class:Catch::__anon13::Win32ColourImpl	file:
originalBackgroundAttributes	..\Catch2\extras\catch_amalgamated.cpp	/^        WORD originalBackgroundAttributes;$/;"	m	class:Catch::__anon13::Win32ColourImpl	file:
platformColourInstance	..\Catch2\extras\catch_amalgamated.cpp	/^    IColourImpl* platformColourInstance() {$/;"	f	namespace:Catch::__anon13
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
PosixColourImpl	..\Catch2\extras\catch_amalgamated.cpp	/^    class PosixColourImpl : public IColourImpl {$/;"	c	namespace:Catch::__anon14	file:
instance	..\Catch2\extras\catch_amalgamated.cpp	/^        static IColourImpl* instance() {$/;"	f	class:Catch::__anon14::PosixColourImpl
setColour	..\Catch2\extras\catch_amalgamated.cpp	/^        void setColour( const char* _escapeCode ) {$/;"	f	class:Catch::__anon14::PosixColourImpl	file:
useColourOnPlatform	..\Catch2\extras\catch_amalgamated.cpp	/^    bool useColourOnPlatform() {$/;"	f	namespace:Catch::__anon14
platformColourInstance	..\Catch2\extras\catch_amalgamated.cpp	/^    IColourImpl* platformColourInstance() {$/;"	f	namespace:Catch::__anon14
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
platformColourInstance	..\Catch2\extras\catch_amalgamated.cpp	/^    static IColourImpl* platformColourInstance() { return NoColourImpl::instance(); }$/;"	f	namespace:Catch	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Colour	..\Catch2\extras\catch_amalgamated.cpp	/^    Colour::Colour( Code _colourCode ) { use( _colourCode ); }$/;"	f	class:Catch::Colour
~Colour	..\Catch2\extras\catch_amalgamated.cpp	/^    Colour::~Colour(){ if( !m_moved ) use( None ); }$/;"	f	class:Catch::Colour
use	..\Catch2\extras\catch_amalgamated.cpp	/^    void Colour::use( Code _colourCode ) {$/;"	f	class:Catch::Colour
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, Colour const& ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Context	..\Catch2\extras\catch_amalgamated.cpp	/^    class Context : public IMutableContext, private Detail::NonCopyable {$/;"	c	namespace:Catch	file:
override	..\Catch2\extras\catch_amalgamated.cpp	/^        ~Context() override;$/;"	m	class:Catch::Context	file:
m_config	..\Catch2\extras\catch_amalgamated.cpp	/^        IConfig const* m_config = nullptr;$/;"	m	class:Catch::Context	file:
m_runner	..\Catch2\extras\catch_amalgamated.cpp	/^        IRunner* m_runner = nullptr;$/;"	m	class:Catch::Context	file:
m_resultCapture	..\Catch2\extras\catch_amalgamated.cpp	/^        IResultCapture* m_resultCapture = nullptr;$/;"	m	class:Catch::Context	file:
currentContext	..\Catch2\extras\catch_amalgamated.cpp	/^    IMutableContext *IMutableContext::currentContext = nullptr;$/;"	m	class:Catch::IMutableContext	file:
createContext	..\Catch2\extras\catch_amalgamated.cpp	/^    void IMutableContext::createContext()$/;"	f	class:Catch::IMutableContext
cleanUpContext	..\Catch2\extras\catch_amalgamated.cpp	/^    void cleanUpContext() {$/;"	f	namespace:Catch
rng	..\Catch2\extras\catch_amalgamated.cpp	/^    SimplePcg32& rng() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
writeToDebugConsole	..\Catch2\extras\catch_amalgamated.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
writeToDebugConsole	..\Catch2\extras\catch_amalgamated.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
writeToDebugConsole	..\Catch2\extras\catch_amalgamated.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\extras\catch_amalgamated.cpp	/^        bool isDebuggerActive(){$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch{$/;"	n	file:
isDebuggerActive	..\Catch2\extras\catch_amalgamated.cpp	/^        bool isDebuggerActive(){$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\extras\catch_amalgamated.cpp	/^        bool isDebuggerActive() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\extras\catch_amalgamated.cpp	/^        bool isDebuggerActive() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\extras\catch_amalgamated.cpp	/^       bool isDebuggerActive() { return false; }$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
throw_exception	..\Catch2\extras\catch_amalgamated.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch
throw_logic_error	..\Catch2\extras\catch_amalgamated.cpp	/^    void throw_logic_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_domain_error	..\Catch2\extras\catch_amalgamated.cpp	/^    void throw_domain_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_runtime_error	..\Catch2\extras\catch_amalgamated.cpp	/^    void throw_runtime_error(std::string const& msg) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
~IMutableEnumValuesRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^    IMutableEnumValuesRegistry::~IMutableEnumValuesRegistry() {}$/;"	f	class:Catch::IMutableEnumValuesRegistry
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
extractInstanceName	..\Catch2\extras\catch_amalgamated.cpp	/^            StringRef extractInstanceName(StringRef enumInstance) {$/;"	f	namespace:Catch::Detail::__anon15
parseEnums	..\Catch2\extras\catch_amalgamated.cpp	/^        std::vector<StringRef> parseEnums( StringRef enums ) {$/;"	f	namespace:Catch::Detail
~EnumInfo	..\Catch2\extras\catch_amalgamated.cpp	/^        EnumInfo::~EnumInfo() {}$/;"	f	class:Catch::Detail::EnumInfo
lookup	..\Catch2\extras\catch_amalgamated.cpp	/^        StringRef EnumInfo::lookup( int value ) const {$/;"	f	class:Catch::Detail::EnumInfo
makeEnumInfo	..\Catch2\extras\catch_amalgamated.cpp	/^        Catch::Detail::unique_ptr<EnumInfo> makeEnumInfo( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	namespace:Catch::Detail
registerEnum	..\Catch2\extras\catch_amalgamated.cpp	/^        EnumInfo const& EnumValuesRegistry::registerEnum( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	class:Catch::Detail::EnumValuesRegistry
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
~ExceptionTranslatorRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^    ExceptionTranslatorRegistry::~ExceptionTranslatorRegistry() {$/;"	f	class:Catch::ExceptionTranslatorRegistry
registerTranslator	..\Catch2\extras\catch_amalgamated.cpp	/^    void ExceptionTranslatorRegistry::registerTranslator( const IExceptionTranslator* translator ) {$/;"	f	class:Catch::ExceptionTranslatorRegistry
translateActiveException	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string ExceptionTranslatorRegistry::translateActiveException() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
tryTranslators	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string ExceptionTranslatorRegistry::tryTranslators() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
translateActiveException	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string ExceptionTranslatorRegistry::translateActiveException() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
tryTranslators	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string ExceptionTranslatorRegistry::tryTranslators() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
reportFatal	..\Catch2\extras\catch_amalgamated.cpp	/^    void reportFatal( char const * const message ) {$/;"	f	namespace:__anon16
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
SignalDefs	..\Catch2\extras\catch_amalgamated.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	s	namespace:Catch	file:
id	..\Catch2\extras\catch_amalgamated.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
name	..\Catch2\extras\catch_amalgamated.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
signalDefs	..\Catch2\extras\catch_amalgamated.cpp	/^    static SignalDefs signalDefs[] = {$/;"	v	file:
handleVectoredException	..\Catch2\extras\catch_amalgamated.cpp	/^    LONG CALLBACK FatalConditionHandler::handleVectoredException(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	class:Catch::FatalConditionHandler
FatalConditionHandler	..\Catch2\extras\catch_amalgamated.cpp	/^    FatalConditionHandler::FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
reset	..\Catch2\extras\catch_amalgamated.cpp	/^    void FatalConditionHandler::reset() {$/;"	f	class:Catch::FatalConditionHandler
isSet	..\Catch2\extras\catch_amalgamated.cpp	/^bool FatalConditionHandler::isSet = false;$/;"	m	class:Catch::FatalConditionHandler	file:
guaranteeSize	..\Catch2\extras\catch_amalgamated.cpp	/^ULONG FatalConditionHandler::guaranteeSize = 0;$/;"	m	class:Catch::FatalConditionHandler	file:
exceptionHandlerHandle	..\Catch2\extras\catch_amalgamated.cpp	/^PVOID FatalConditionHandler::exceptionHandlerHandle = nullptr;$/;"	m	class:Catch::FatalConditionHandler	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
SignalDefs	..\Catch2\extras\catch_amalgamated.cpp	/^    struct SignalDefs {$/;"	s	namespace:Catch	file:
id	..\Catch2\extras\catch_amalgamated.cpp	/^        int id;$/;"	m	struct:Catch::SignalDefs	file:
name	..\Catch2\extras\catch_amalgamated.cpp	/^        const char* name;$/;"	m	struct:Catch::SignalDefs	file:
sigStackSize	..\Catch2\extras\catch_amalgamated.cpp	/^    static constexpr std::size_t sigStackSize = 32768 >= MINSIGSTKSZ ? 32768 : MINSIGSTKSZ;$/;"	v	file:
signalDefs	..\Catch2\extras\catch_amalgamated.cpp	/^    static SignalDefs signalDefs[] = {$/;"	v	file:
handleSignal	..\Catch2\extras\catch_amalgamated.cpp	/^    void FatalConditionHandler::handleSignal( int sig ) {$/;"	f	class:Catch::FatalConditionHandler
FatalConditionHandler	..\Catch2\extras\catch_amalgamated.cpp	/^    FatalConditionHandler::FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
reset	..\Catch2\extras\catch_amalgamated.cpp	/^    void FatalConditionHandler::reset() {$/;"	f	class:Catch::FatalConditionHandler
isSet	..\Catch2\extras\catch_amalgamated.cpp	/^    bool FatalConditionHandler::isSet = false;$/;"	m	class:Catch::FatalConditionHandler	file:
oldSigActions	..\Catch2\extras\catch_amalgamated.cpp	/^    struct sigaction FatalConditionHandler::oldSigActions[sizeof(signalDefs)\/sizeof(SignalDefs)] = {};$/;"	m	class:Catch::FatalConditionHandler	typeref:struct:Catch::FatalConditionHandler::	file:
oldSigStack	..\Catch2\extras\catch_amalgamated.cpp	/^    stack_t FatalConditionHandler::oldSigStack = {};$/;"	m	class:Catch::FatalConditionHandler	file:
altStackMem	..\Catch2\extras\catch_amalgamated.cpp	/^    char FatalConditionHandler::altStackMem[sigStackSize] = {};$/;"	m	class:Catch::FatalConditionHandler	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
listTests	..\Catch2\extras\catch_amalgamated.cpp	/^        void listTests(IStreamingReporter& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon17
listTags	..\Catch2\extras\catch_amalgamated.cpp	/^        void listTags(IStreamingReporter& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon17
listReporters	..\Catch2\extras\catch_amalgamated.cpp	/^        void listReporters(IStreamingReporter& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon17
add	..\Catch2\extras\catch_amalgamated.cpp	/^    void TagInfo::add( StringRef spelling ) {$/;"	f	class:Catch::TagInfo
all	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string TagInfo::all() const {$/;"	f	class:Catch::TagInfo
list	..\Catch2\extras\catch_amalgamated.cpp	/^    bool list( IStreamingReporter& reporter, Config const& config ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
leakDetector	..\Catch2\extras\catch_amalgamated.cpp	/^    LeakDetector leakDetector;$/;"	v
wmain	..\Catch2\extras\catch_amalgamated.cpp	/^extern "C" int wmain (int argc, wchar_t * argv[], wchar_t * []) {$/;"	f
dup	..\Catch2\extras\catch_amalgamated.cpp	3943;"	d	file:
dup2	..\Catch2\extras\catch_amalgamated.cpp	3944;"	d	file:
fileno	..\Catch2\extras\catch_amalgamated.cpp	3945;"	d	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
RedirectedStream	..\Catch2\extras\catch_amalgamated.cpp	/^    RedirectedStream::RedirectedStream( std::ostream& originalStream, std::ostream& redirectionStream )$/;"	f	class:Catch::RedirectedStream
~RedirectedStream	..\Catch2\extras\catch_amalgamated.cpp	/^    RedirectedStream::~RedirectedStream() {$/;"	f	class:Catch::RedirectedStream
RedirectedStdOut	..\Catch2\extras\catch_amalgamated.cpp	/^    RedirectedStdOut::RedirectedStdOut() : m_cout( Catch::cout(), m_rss.get() ) {}$/;"	f	class:Catch::RedirectedStdOut
RedirectedStdErr	..\Catch2\extras\catch_amalgamated.cpp	/^    RedirectedStdErr::RedirectedStdErr()$/;"	f	class:Catch::RedirectedStdErr
RedirectedStreams	..\Catch2\extras\catch_amalgamated.cpp	/^    RedirectedStreams::RedirectedStreams(std::string& redirectedCout, std::string& redirectedCerr)$/;"	f	class:Catch::RedirectedStreams
~RedirectedStreams	..\Catch2\extras\catch_amalgamated.cpp	/^    RedirectedStreams::~RedirectedStreams() {$/;"	f	class:Catch::RedirectedStreams
TempFile	..\Catch2\extras\catch_amalgamated.cpp	/^    TempFile::TempFile() {$/;"	f	class:Catch::TempFile
TempFile	..\Catch2\extras\catch_amalgamated.cpp	/^    TempFile::TempFile() {$/;"	f	class:Catch::TempFile
~TempFile	..\Catch2\extras\catch_amalgamated.cpp	/^    TempFile::~TempFile() {$/;"	f	class:Catch::TempFile
getFile	..\Catch2\extras\catch_amalgamated.cpp	/^    FILE* TempFile::getFile() {$/;"	f	class:Catch::TempFile
getContents	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string TempFile::getContents() {$/;"	f	class:Catch::TempFile
OutputRedirect	..\Catch2\extras\catch_amalgamated.cpp	/^    OutputRedirect::OutputRedirect(std::string& stdout_dest, std::string& stderr_dest) :$/;"	f	class:Catch::OutputRedirect
~OutputRedirect	..\Catch2\extras\catch_amalgamated.cpp	/^    OutputRedirect::~OutputRedirect() {$/;"	f	class:Catch::OutputRedirect
dup	..\Catch2\extras\catch_amalgamated.cpp	4066;"	d	file:
dup2	..\Catch2\extras\catch_amalgamated.cpp	4067;"	d	file:
fileno	..\Catch2\extras\catch_amalgamated.cpp	4068;"	d	file:
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
rotate_right	..\Catch2\extras\catch_amalgamated.cpp	/^        uint32_t rotate_right(uint32_t val, uint32_t count) {$/;"	f	namespace:Catch::__anon18
SimplePcg32	..\Catch2\extras\catch_amalgamated.cpp	/^    SimplePcg32::SimplePcg32(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
seed	..\Catch2\extras\catch_amalgamated.cpp	/^    void SimplePcg32::seed(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
discard	..\Catch2\extras\catch_amalgamated.cpp	/^    void SimplePcg32::discard(uint64_t skip) {$/;"	f	class:Catch::SimplePcg32
operator ()	..\Catch2\extras\catch_amalgamated.cpp	/^    SimplePcg32::result_type SimplePcg32::operator()() {$/;"	f	class:Catch::SimplePcg32
operator ==	..\Catch2\extras\catch_amalgamated.cpp	/^    bool operator==(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
operator !=	..\Catch2\extras\catch_amalgamated.cpp	/^    bool operator!=(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
ReporterRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^    ReporterRegistry::ReporterRegistry() {$/;"	f	class:Catch::ReporterRegistry
create	..\Catch2\extras\catch_amalgamated.cpp	/^    IStreamingReporterPtr ReporterRegistry::create( std::string const& name, IConfig const* config ) const {$/;"	f	class:Catch::ReporterRegistry
registerReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    void ReporterRegistry::registerReporter( std::string const& name, IReporterFactoryPtr factory ) {$/;"	f	class:Catch::ReporterRegistry
registerListener	..\Catch2\extras\catch_amalgamated.cpp	/^    void ReporterRegistry::registerListener( IReporterFactoryPtr factory ) {$/;"	f	class:Catch::ReporterRegistry
getFactories	..\Catch2\extras\catch_amalgamated.cpp	/^    IReporterRegistry::FactoryMap const& ReporterRegistry::getFactories() const {$/;"	f	class:Catch::IReporterRegistry::ReporterRegistry
getListeners	..\Catch2\extras\catch_amalgamated.cpp	/^    IReporterRegistry::Listeners const& ReporterRegistry::getListeners() const {$/;"	f	class:Catch::IReporterRegistry::ReporterRegistry
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
isOk	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isJustInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
operator |	..\Catch2\extras\catch_amalgamated.cpp	/^    ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
shouldContinueOnFailure	..\Catch2\extras\catch_amalgamated.cpp	/^    bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	..\Catch2\extras\catch_amalgamated.cpp	/^    bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Generators	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Generators {$/;"	n	namespace:Catch	file:
GeneratorTracker	..\Catch2\extras\catch_amalgamated.cpp	/^        struct GeneratorTracker : TestCaseTracking::TrackerBase, IGeneratorTracker {$/;"	s	namespace:Catch::Generators	file:
m_generator	..\Catch2\extras\catch_amalgamated.cpp	/^            GeneratorBasePtr m_generator;$/;"	m	struct:Catch::Generators::GeneratorTracker	file:
GeneratorTracker	..\Catch2\extras\catch_amalgamated.cpp	/^            GeneratorTracker( TestCaseTracking::NameAndLocation const& nameAndLocation, TrackerContext& ctx, ITracker* parent )$/;"	f	struct:Catch::Generators::GeneratorTracker
acquire	..\Catch2\extras\catch_amalgamated.cpp	/^            static GeneratorTracker& acquire( TrackerContext& ctx, TestCaseTracking::NameAndLocation const& nameAndLocation ) {$/;"	f	struct:Catch::Generators::GeneratorTracker
~GeneratorTracker	..\Catch2\extras\catch_amalgamated.cpp	/^        GeneratorTracker::~GeneratorTracker() {}$/;"	f	class:Catch::Generators::GeneratorTracker
RunContext	..\Catch2\extras\catch_amalgamated.cpp	/^    RunContext::RunContext(IConfig const* _config, IStreamingReporterPtr&& reporter)$/;"	f	class:Catch::RunContext
~RunContext	..\Catch2\extras\catch_amalgamated.cpp	/^    RunContext::~RunContext() {$/;"	f	class:Catch::RunContext
testGroupStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::testGroupStarting(std::string const& testSpec, std::size_t groupIndex, std::size_t groupsCount) {$/;"	f	class:Catch::RunContext
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::testGroupEnded(std::string const& testSpec, Totals const& totals, std::size_t groupIndex, std::size_t groupsCount) {$/;"	f	class:Catch::RunContext
runTest	..\Catch2\extras\catch_amalgamated.cpp	/^    Totals RunContext::runTest(TestCaseHandle const& testCase) {$/;"	f	class:Catch::RunContext
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::assertionEnded(AssertionResult const & result) {$/;"	f	class:Catch::RunContext
resetAssertionInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::resetAssertionInfo() {$/;"	f	class:Catch::RunContext
sectionStarted	..\Catch2\extras\catch_amalgamated.cpp	/^    bool RunContext::sectionStarted(SectionInfo const & sectionInfo, Counts & assertions) {$/;"	f	class:Catch::RunContext
testForMissingAssertions	..\Catch2\extras\catch_amalgamated.cpp	/^    bool RunContext::testForMissingAssertions(Counts& assertions) {$/;"	f	class:Catch::RunContext
sectionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::sectionEnded(SectionEndInfo const & endInfo) {$/;"	f	class:Catch::RunContext
sectionEndedEarly	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::sectionEndedEarly(SectionEndInfo const & endInfo) {$/;"	f	class:Catch::RunContext
benchmarkPreparing	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::RunContext
benchmarkStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::benchmarkStarting( BenchmarkInfo const& info ) {$/;"	f	class:Catch::RunContext
benchmarkEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::benchmarkEnded( BenchmarkStats<> const& stats ) {$/;"	f	class:Catch::RunContext
benchmarkFailed	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::benchmarkFailed(std::string const & error) {$/;"	f	class:Catch::RunContext
pushScopedMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::pushScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
popScopedMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::popScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
emplaceUnscopedMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::emplaceUnscopedMessage( MessageBuilder const& builder ) {$/;"	f	class:Catch::RunContext
getCurrentTestName	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string RunContext::getCurrentTestName() const {$/;"	f	class:Catch::RunContext
getLastResult	..\Catch2\extras\catch_amalgamated.cpp	/^    const AssertionResult * RunContext::getLastResult() const {$/;"	f	class:Catch::RunContext
exceptionEarlyReported	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::exceptionEarlyReported() {$/;"	f	class:Catch::RunContext
handleFatalErrorCondition	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleFatalErrorCondition( StringRef message ) {$/;"	f	class:Catch::RunContext
lastAssertionPassed	..\Catch2\extras\catch_amalgamated.cpp	/^    bool RunContext::lastAssertionPassed() {$/;"	f	class:Catch::RunContext
assertionPassed	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::assertionPassed() {$/;"	f	class:Catch::RunContext
aborting	..\Catch2\extras\catch_amalgamated.cpp	/^    bool RunContext::aborting() const {$/;"	f	class:Catch::RunContext
runCurrentTest	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::runCurrentTest(std::string & redirectedCout, std::string & redirectedCerr) {$/;"	f	class:Catch::RunContext
invokeActiveTestCase	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::invokeActiveTestCase() {$/;"	f	class:Catch::RunContext
handleUnfinishedSections	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleUnfinishedSections() {$/;"	f	class:Catch::RunContext
handleExpr	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleExpr($/;"	f	class:Catch::RunContext
reportExpr	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::reportExpr($/;"	f	class:Catch::RunContext
handleMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleMessage($/;"	f	class:Catch::RunContext
handleUnexpectedExceptionNotThrown	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleUnexpectedExceptionNotThrown($/;"	f	class:Catch::RunContext
handleUnexpectedInflightException	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleUnexpectedInflightException($/;"	f	class:Catch::RunContext
populateReaction	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::populateReaction( AssertionReaction& reaction ) {$/;"	f	class:Catch::RunContext
handleIncomplete	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleIncomplete($/;"	f	class:Catch::RunContext
handleNonExpr	..\Catch2\extras\catch_amalgamated.cpp	/^    void RunContext::handleNonExpr($/;"	f	class:Catch::RunContext
getResultCapture	..\Catch2\extras\catch_amalgamated.cpp	/^    IResultCapture& getResultCapture() {$/;"	f	namespace:Catch
seedRng	..\Catch2\extras\catch_amalgamated.cpp	/^    void seedRng(IConfig const& config) {$/;"	f	namespace:Catch
rngSeed	..\Catch2\extras\catch_amalgamated.cpp	/^    unsigned int rngSeed() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Section	..\Catch2\extras\catch_amalgamated.cpp	/^    Section::Section( SectionInfo&& info ):$/;"	f	class:Catch::Section
~Section	..\Catch2\extras\catch_amalgamated.cpp	/^    Section::~Section() {$/;"	f	class:Catch::Section
operator bool	..\Catch2\extras\catch_amalgamated.cpp	/^    Section::operator bool() const {$/;"	f	class:Catch::Section
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
~ISingleton	..\Catch2\extras\catch_amalgamated.cpp	/^    ISingleton::~ISingleton() {}$/;"	f	class:Catch::ISingleton
addSingleton	..\Catch2\extras\catch_amalgamated.cpp	/^    void addSingleton(ISingleton* singleton ) {$/;"	f	namespace:Catch
cleanupSingletons	..\Catch2\extras\catch_amalgamated.cpp	/^    void cleanupSingletons() {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
StreamBufImpl	..\Catch2\extras\catch_amalgamated.cpp	/^        class StreamBufImpl : public std::streambuf {$/;"	c	namespace:Catch::Detail::__anon20	file:
data	..\Catch2\extras\catch_amalgamated.cpp	/^            char data[bufferSize];$/;"	m	class:Catch::Detail::__anon20::StreamBufImpl	file:
m_writer	..\Catch2\extras\catch_amalgamated.cpp	/^            WriterF m_writer;$/;"	m	class:Catch::Detail::__anon20::StreamBufImpl	file:
StreamBufImpl	..\Catch2\extras\catch_amalgamated.cpp	/^            StreamBufImpl() {$/;"	f	class:Catch::Detail::__anon20::StreamBufImpl
OutputDebugWriter	..\Catch2\extras\catch_amalgamated.cpp	/^        struct OutputDebugWriter {$/;"	s	namespace:Catch::Detail::__anon20	file:
operator ()	..\Catch2\extras\catch_amalgamated.cpp	/^            void operator()( std::string const&str ) {$/;"	f	struct:Catch::Detail::__anon20::OutputDebugWriter
FileStream	..\Catch2\extras\catch_amalgamated.cpp	/^        class FileStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon20	file:
m_ofs	..\Catch2\extras\catch_amalgamated.cpp	/^            mutable std::ofstream m_ofs;$/;"	m	class:Catch::Detail::__anon20::FileStream	file:
FileStream	..\Catch2\extras\catch_amalgamated.cpp	/^            FileStream( StringRef filename ) {$/;"	f	class:Catch::Detail::__anon20::FileStream
override	..\Catch2\extras\catch_amalgamated.cpp	/^            ~FileStream() override = default;$/;"	m	class:Catch::Detail::__anon20::FileStream	file:
CoutStream	..\Catch2\extras\catch_amalgamated.cpp	/^        class CoutStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon20	file:
m_os	..\Catch2\extras\catch_amalgamated.cpp	/^            mutable std::ostream m_os;$/;"	m	class:Catch::Detail::__anon20::CoutStream	file:
CoutStream	..\Catch2\extras\catch_amalgamated.cpp	/^            CoutStream() : m_os( Catch::cout().rdbuf() ) {}$/;"	f	class:Catch::Detail::__anon20::CoutStream
override	..\Catch2\extras\catch_amalgamated.cpp	/^            ~CoutStream() override = default;$/;"	m	class:Catch::Detail::__anon20::CoutStream	file:
DebugOutStream	..\Catch2\extras\catch_amalgamated.cpp	/^        class DebugOutStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon20	file:
m_streamBuf	..\Catch2\extras\catch_amalgamated.cpp	/^            Detail::unique_ptr<StreamBufImpl<OutputDebugWriter>> m_streamBuf;$/;"	m	class:Catch::Detail::__anon20::DebugOutStream	file:
m_os	..\Catch2\extras\catch_amalgamated.cpp	/^            mutable std::ostream m_os;$/;"	m	class:Catch::Detail::__anon20::DebugOutStream	file:
DebugOutStream	..\Catch2\extras\catch_amalgamated.cpp	/^            DebugOutStream()$/;"	f	class:Catch::Detail::__anon20::DebugOutStream
override	..\Catch2\extras\catch_amalgamated.cpp	/^            ~DebugOutStream() override = default;$/;"	m	class:Catch::Detail::__anon20::DebugOutStream	file:
StringStreams	..\Catch2\extras\catch_amalgamated.cpp	/^    struct StringStreams {$/;"	s	namespace:Catch	file:
m_streams	..\Catch2\extras\catch_amalgamated.cpp	/^        std::vector<Detail::unique_ptr<std::ostringstream>> m_streams;$/;"	m	struct:Catch::StringStreams	file:
m_unused	..\Catch2\extras\catch_amalgamated.cpp	/^        std::vector<std::size_t> m_unused;$/;"	m	struct:Catch::StringStreams	file:
m_referenceStream	..\Catch2\extras\catch_amalgamated.cpp	/^        std::ostringstream m_referenceStream; \/\/ Used for copy state\/ flags from$/;"	m	struct:Catch::StringStreams	file:
release	..\Catch2\extras\catch_amalgamated.cpp	/^        void release( std::size_t index ) {$/;"	f	struct:Catch::StringStreams
ReusableStringStream	..\Catch2\extras\catch_amalgamated.cpp	/^    ReusableStringStream::ReusableStringStream()$/;"	f	class:Catch::ReusableStringStream
~ReusableStringStream	..\Catch2\extras\catch_amalgamated.cpp	/^    ReusableStringStream::~ReusableStringStream() {$/;"	f	class:Catch::ReusableStringStream
str	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string ReusableStringStream::str() const {$/;"	f	class:Catch::ReusableStringStream
str	..\Catch2\extras\catch_amalgamated.cpp	/^    void ReusableStringStream::str( std::string const& str ) {$/;"	f	class:Catch::ReusableStringStream
cout	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& cout() { return std::cout; }$/;"	f	namespace:Catch
cerr	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& cerr() { return std::cerr; }$/;"	f	namespace:Catch
clog	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& clog() { return std::clog; }$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
toLowerCh	..\Catch2\extras\catch_amalgamated.cpp	/^        char toLowerCh(char c) {$/;"	f	namespace:Catch::__anon21
startsWith	..\Catch2\extras\catch_amalgamated.cpp	/^    bool startsWith( std::string const& s, std::string const& prefix ) {$/;"	f	namespace:Catch
startsWith	..\Catch2\extras\catch_amalgamated.cpp	/^    bool startsWith( std::string const& s, char prefix ) {$/;"	f	namespace:Catch
endsWith	..\Catch2\extras\catch_amalgamated.cpp	/^    bool endsWith( std::string const& s, std::string const& suffix ) {$/;"	f	namespace:Catch
endsWith	..\Catch2\extras\catch_amalgamated.cpp	/^    bool endsWith( std::string const& s, char suffix ) {$/;"	f	namespace:Catch
contains	..\Catch2\extras\catch_amalgamated.cpp	/^    bool contains( std::string const& s, std::string const& infix ) {$/;"	f	namespace:Catch
toLowerInPlace	..\Catch2\extras\catch_amalgamated.cpp	/^    void toLowerInPlace( std::string& s ) {$/;"	f	namespace:Catch
toLower	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string toLower( std::string const& s ) {$/;"	f	namespace:Catch
trim	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string trim( std::string const& str ) {$/;"	f	namespace:Catch
trim	..\Catch2\extras\catch_amalgamated.cpp	/^    StringRef trim(StringRef ref) {$/;"	f	namespace:Catch
replaceInPlace	..\Catch2\extras\catch_amalgamated.cpp	/^    bool replaceInPlace( std::string& str, std::string const& replaceThis, std::string const& withThis ) {$/;"	f	namespace:Catch
splitStringRef	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<StringRef> splitStringRef( StringRef str, char delimiter ) {$/;"	f	namespace:Catch
pluralise	..\Catch2\extras\catch_amalgamated.cpp	/^    pluralise::pluralise( std::size_t count, std::string const& label )$/;"	f	class:Catch::pluralise
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, pluralise const& pluraliser ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
StringRef	..\Catch2\extras\catch_amalgamated.cpp	/^    : StringRef( rawChars, static_cast<StringRef::size_type>(std::strlen(rawChars) ) )$/;"	f	namespace:Catch
operator +	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string operator+(StringRef lhs, StringRef rhs) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
~TagAliasRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^    TagAliasRegistry::~TagAliasRegistry() {}$/;"	f	class:Catch::TagAliasRegistry
find	..\Catch2\extras\catch_amalgamated.cpp	/^    TagAlias const* TagAliasRegistry::find( std::string const& alias ) const {$/;"	f	class:Catch::TagAliasRegistry
expandAliases	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string TagAliasRegistry::expandAliases( std::string const& unexpandedTestSpec ) const {$/;"	f	class:Catch::TagAliasRegistry
add	..\Catch2\extras\catch_amalgamated.cpp	/^    void TagAliasRegistry::add( std::string const& alias, std::string const& tag, SourceLineInfo const& lineInfo ) {$/;"	f	class:Catch::TagAliasRegistry
~ITagAliasRegistry	..\Catch2\extras\catch_amalgamated.cpp	/^    ITagAliasRegistry::~ITagAliasRegistry() {}$/;"	f	class:Catch::ITagAliasRegistry
get	..\Catch2\extras\catch_amalgamated.cpp	/^    ITagAliasRegistry const& ITagAliasRegistry::get() {$/;"	f	class:Catch::ITagAliasRegistry
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
HashTest	..\Catch2\extras\catch_amalgamated.cpp	/^    struct HashTest {$/;"	s	namespace:Catch::__anon22	file:
HashTest	..\Catch2\extras\catch_amalgamated.cpp	/^        explicit HashTest(SimplePcg32& rng_inst) {$/;"	f	struct:Catch::__anon22::HashTest
basis	..\Catch2\extras\catch_amalgamated.cpp	/^        uint64_t basis;$/;"	m	struct:Catch::__anon22::HashTest	file:
operator ()	..\Catch2\extras\catch_amalgamated.cpp	/^        uint64_t operator()(TestCaseInfo const& t) const {$/;"	f	struct:Catch::__anon22::HashTest
sortTests	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> sortTests( IConfig const& config, std::vector<TestCaseHandle> const& unsortedTestCases ) {$/;"	f	namespace:Catch
isThrowSafe	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isThrowSafe( TestCaseHandle const& testCase, IConfig const& config ) {$/;"	f	namespace:Catch
matchTest	..\Catch2\extras\catch_amalgamated.cpp	/^    bool matchTest( TestCaseHandle const& testCase, TestSpec const& testSpec, IConfig const& config ) {$/;"	f	namespace:Catch
enforceNoDuplicateTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^    void enforceNoDuplicateTestCases( std::vector<TestCaseHandle> const& functions ) {$/;"	f	namespace:Catch
filterTests	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> filterTests( std::vector<TestCaseHandle> const& testCases, TestSpec const& testSpec, IConfig const& config ) {$/;"	f	namespace:Catch
getAllTestCasesSorted	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> const& getAllTestCasesSorted( IConfig const& config ) {$/;"	f	class:Catch::std
registerTest	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestRegistry::registerTest(Detail::unique_ptr<TestCaseInfo> testInfo, Detail::unique_ptr<ITestInvoker> testInvoker) {$/;"	f	class:Catch::TestRegistry
getAllInfos	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<TestCaseInfo*> const& TestRegistry::getAllInfos() const {$/;"	f	class:Catch::std::TestRegistry
getAllTests	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTests() const {$/;"	f	class:Catch::std::TestRegistry
getAllTestsSorted	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTestsSorted( IConfig const& config ) const {$/;"	f	class:Catch::std::TestRegistry
invoke	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestInvokerAsFunction::invoke() const {$/;"	f	class:Catch::TestInvokerAsFunction
extractClassName	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string extractClassName( StringRef const& classOrQualifiedMethodName ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
TestCaseTracking	..\Catch2\extras\catch_amalgamated.cpp	/^namespace TestCaseTracking {$/;"	n	namespace:Catch	file:
NameAndLocation	..\Catch2\extras\catch_amalgamated.cpp	/^    NameAndLocation::NameAndLocation( std::string const& _name, SourceLineInfo const& _location )$/;"	f	class:Catch::TestCaseTracking::NameAndLocation
addChild	..\Catch2\extras\catch_amalgamated.cpp	/^    void ITracker::addChild( ITrackerPtr const& child ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
findChild	..\Catch2\extras\catch_amalgamated.cpp	/^    ITrackerPtr ITracker::findChild( NameAndLocation const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
startRun	..\Catch2\extras\catch_amalgamated.cpp	/^    ITracker& TrackerContext::startRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
endRun	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerContext::endRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
startCycle	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerContext::startCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
completeCycle	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerContext::completeCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
completedCycle	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TrackerContext::completedCycle() const {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
currentTracker	..\Catch2\extras\catch_amalgamated.cpp	/^    ITracker& TrackerContext::currentTracker() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
setCurrentTracker	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerContext::setCurrentTracker( ITracker* tracker ) {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
TrackerBase	..\Catch2\extras\catch_amalgamated.cpp	/^    TrackerBase::TrackerBase( NameAndLocation const& nameAndLocation, TrackerContext& ctx, ITracker* parent ):$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isComplete	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TrackerBase::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isSuccessfullyCompleted	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TrackerBase::isSuccessfullyCompleted() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isOpen	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TrackerBase::isOpen() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
parent	..\Catch2\extras\catch_amalgamated.cpp	/^    ITracker& TrackerBase::parent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
openChild	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerBase::openChild() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isSectionTracker	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TrackerBase::isSectionTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isGeneratorTracker	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TrackerBase::isGeneratorTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::TrackerBase
open	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerBase::open() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
close	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerBase::close() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
fail	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerBase::fail() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
markAsNeedingAnotherRun	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerBase::markAsNeedingAnotherRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
moveToParent	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerBase::moveToParent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
moveToThis	..\Catch2\extras\catch_amalgamated.cpp	/^    void TrackerBase::moveToThis() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
SectionTracker	..\Catch2\extras\catch_amalgamated.cpp	/^    SectionTracker::SectionTracker( NameAndLocation const& nameAndLocation, TrackerContext& ctx, ITracker* parent )$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isComplete	..\Catch2\extras\catch_amalgamated.cpp	/^    bool SectionTracker::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isSectionTracker	..\Catch2\extras\catch_amalgamated.cpp	/^    bool SectionTracker::isSectionTracker() const { return true; }$/;"	f	class:Catch::TestCaseTracking::SectionTracker
acquire	..\Catch2\extras\catch_amalgamated.cpp	/^    SectionTracker& SectionTracker::acquire( TrackerContext& ctx, NameAndLocation const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
tryOpen	..\Catch2\extras\catch_amalgamated.cpp	/^    void SectionTracker::tryOpen() {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addInitialFilters	..\Catch2\extras\catch_amalgamated.cpp	/^    void SectionTracker::addInitialFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addNextFilters	..\Catch2\extras\catch_amalgamated.cpp	/^    void SectionTracker::addNextFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
makeTestInvoker	..\Catch2\extras\catch_amalgamated.cpp	/^    Detail::unique_ptr<ITestInvoker> makeTestInvoker( void(*testAsFunction)() ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
TestSpecParser	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpecParser::TestSpecParser( ITagAliasRegistry const& tagAliases ) : m_tagAliases( &tagAliases ) {}$/;"	f	class:Catch::TestSpecParser
parse	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpecParser& TestSpecParser::parse( std::string const& arg ) {$/;"	f	class:Catch::TestSpecParser
testSpec	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpec TestSpecParser::testSpec() {$/;"	f	class:Catch::TestSpecParser
visitChar	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpecParser::visitChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processNoneChar	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpecParser::processNoneChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processNameChar	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::processNameChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processOtherChar	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpecParser::processOtherChar( char c ) {$/;"	f	class:Catch::TestSpecParser
startNewMode	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::startNewMode( Mode mode ) {$/;"	f	class:Catch::TestSpecParser
endMode	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::endMode() {$/;"	f	class:Catch::TestSpecParser
escape	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::escape() {$/;"	f	class:Catch::TestSpecParser
isControlChar	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpecParser::isControlChar( char c ) const {$/;"	f	class:Catch::TestSpecParser
addFilter	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::addFilter() {$/;"	f	class:Catch::TestSpecParser
saveLastMode	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::saveLastMode() {$/;"	f	class:Catch::TestSpecParser
revertBackToLastMode	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::revertBackToLastMode() {$/;"	f	class:Catch::TestSpecParser
separate	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TestSpecParser::separate() {$/;"	f	class:Catch::TestSpecParser
preprocessPattern	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string TestSpecParser::preprocessPattern() {$/;"	f	class:Catch::TestSpecParser
addNamePattern	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::addNamePattern() {$/;"	f	class:Catch::TestSpecParser
addTagPattern	..\Catch2\extras\catch_amalgamated.cpp	/^    void TestSpecParser::addTagPattern() {$/;"	f	class:Catch::TestSpecParser
parseTestSpec	..\Catch2\extras\catch_amalgamated.cpp	/^    TestSpec parseTestSpec( std::string const& arg ) {$/;"	f	namespace:Catch
isWhitespace	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isWhitespace( char c ) {$/;"	f	namespace:__anon23
isBreakableBefore	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isBreakableBefore( char c ) {$/;"	f	namespace:__anon23
isBreakableAfter	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isBreakableAfter( char c ) {$/;"	f	namespace:__anon23
isBoundary	..\Catch2\extras\catch_amalgamated.cpp	/^    bool isBoundary( std::string const& line, size_t at ) {$/;"	f	namespace:__anon23
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
TextFlow	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace TextFlow {$/;"	n	namespace:Catch	file:
calcLength	..\Catch2\extras\catch_amalgamated.cpp	/^        void Column::iterator::calcLength() {$/;"	f	class:Catch::TextFlow::Column::iterator
indent	..\Catch2\extras\catch_amalgamated.cpp	/^        size_t Column::iterator::indent() const {$/;"	f	class:Catch::TextFlow::Column::iterator
addIndentAndSuffix	..\Catch2\extras\catch_amalgamated.cpp	/^        Column::iterator::addIndentAndSuffix( size_t position,$/;"	f	class:Catch::TextFlow::Column::iterator
iterator	..\Catch2\extras\catch_amalgamated.cpp	/^        Column::iterator::iterator( Column const& column ): m_column( column ) {$/;"	f	class:Catch::TextFlow::Column::iterator
operator *	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string Column::iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Column::iterator
operator ++	..\Catch2\extras\catch_amalgamated.cpp	/^        Column::iterator& Column::iterator::operator++() {$/;"	f	class:Catch::TextFlow::Column::iterator
operator ++	..\Catch2\extras\catch_amalgamated.cpp	/^        Column::iterator Column::iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Column::iterator
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^        std::ostream& operator<<( std::ostream& os, Column const& col ) {$/;"	f	namespace:Catch::TextFlow
Spacer	..\Catch2\extras\catch_amalgamated.cpp	/^        Column Spacer( size_t spaceWidth ) {$/;"	f	namespace:Catch::TextFlow
iterator	..\Catch2\extras\catch_amalgamated.cpp	/^        Columns::iterator::iterator( Columns const& columns, EndTag ):$/;"	f	class:Catch::TextFlow::Columns::iterator
iterator	..\Catch2\extras\catch_amalgamated.cpp	/^        Columns::iterator::iterator( Columns const& columns ):$/;"	f	class:Catch::TextFlow::Columns::iterator
operator *	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string Columns::iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	..\Catch2\extras\catch_amalgamated.cpp	/^        Columns::iterator& Columns::iterator::operator++() {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	..\Catch2\extras\catch_amalgamated.cpp	/^        Columns::iterator Columns::iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^        std::ostream& operator<<( std::ostream& os, Columns const& cols ) {$/;"	f	namespace:Catch::TextFlow
operator +	..\Catch2\extras\catch_amalgamated.cpp	/^        Columns Column::operator+( Column const& other ) {$/;"	f	class:Catch::TextFlow::Column
operator +=	..\Catch2\extras\catch_amalgamated.cpp	/^        Columns& Columns::operator+=( Column const& col ) {$/;"	f	class:Catch::TextFlow::Columns
operator +	..\Catch2\extras\catch_amalgamated.cpp	/^        Columns Columns::operator+( Column const& col ) {$/;"	f	class:Catch::TextFlow::Columns
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
WildcardPattern	..\Catch2\extras\catch_amalgamated.cpp	/^    WildcardPattern::WildcardPattern( std::string const& pattern,$/;"	f	class:Catch::WildcardPattern
matches	..\Catch2\extras\catch_amalgamated.cpp	/^    bool WildcardPattern::matches( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
normaliseString	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string WildcardPattern::normaliseString( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
trailingBytes	..\Catch2\extras\catch_amalgamated.cpp	/^    size_t trailingBytes(unsigned char c) {$/;"	f	namespace:Catch::__anon24
headerValue	..\Catch2\extras\catch_amalgamated.cpp	/^    uint32_t headerValue(unsigned char c) {$/;"	f	namespace:Catch::__anon24
hexEscapeChar	..\Catch2\extras\catch_amalgamated.cpp	/^    void hexEscapeChar(std::ostream& os, unsigned char c) {$/;"	f	namespace:Catch::__anon24
shouldNewline	..\Catch2\extras\catch_amalgamated.cpp	/^    bool shouldNewline(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon24
shouldIndent	..\Catch2\extras\catch_amalgamated.cpp	/^    bool shouldIndent(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon24
operator |	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlFormatting operator | (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
operator &	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlFormatting operator & (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
XmlEncode	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlEncode::XmlEncode( std::string const& str, ForWhat forWhat )$/;"	f	class:Catch::XmlEncode
encodeTo	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlEncode::encodeTo( std::ostream& os ) const {$/;"	f	class:Catch::XmlEncode
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, XmlEncode const& xmlEncode ) {$/;"	f	namespace:Catch
ScopedElement	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter::ScopedElement::ScopedElement( XmlWriter* writer, XmlFormatting fmt )$/;"	f	class:Catch::XmlWriter::ScopedElement
m_fmt	..\Catch2\extras\catch_amalgamated.cpp	/^        m_fmt(other.m_fmt)$/;"	f	namespace:Catch
~ScopedElement	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter::ScopedElement::~ScopedElement() {$/;"	f	class:Catch::XmlWriter::ScopedElement
writeText	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter::ScopedElement& XmlWriter::ScopedElement::writeText( std::string const& text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter::ScopedElement
XmlWriter	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter::XmlWriter( std::ostream& os ) : m_os( os )$/;"	f	class:Catch::XmlWriter
~XmlWriter	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter::~XmlWriter() {$/;"	f	class:Catch::XmlWriter
startElement	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::startElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
scopedElement	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter::ScopedElement XmlWriter::scopedElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
endElement	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::endElement(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeAttribute	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, std::string const& attribute ) {$/;"	f	class:Catch::XmlWriter
writeAttribute	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, bool attribute ) {$/;"	f	class:Catch::XmlWriter
writeText	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeText( std::string const& text, XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeComment	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeComment( std::string const& text, XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeStylesheetRef	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlWriter::writeStylesheetRef( std::string const& url ) {$/;"	f	class:Catch::XmlWriter
writeBlankLine	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeBlankLine() {$/;"	f	class:Catch::XmlWriter
ensureTagClosed	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlWriter::ensureTagClosed() {$/;"	f	class:Catch::XmlWriter
applyFormatting	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlWriter::applyFormatting(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeDeclaration	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlWriter::writeDeclaration() {$/;"	f	class:Catch::XmlWriter
newlineIfNecessary	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlWriter::newlineIfNecessary() {$/;"	f	class:Catch::XmlWriter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
convert	..\Catch2\extras\catch_amalgamated.cpp	/^    int32_t convert(float f) {$/;"	f	namespace:Catch::__anon25
convert	..\Catch2\extras\catch_amalgamated.cpp	/^    int64_t convert(double d) {$/;"	f	namespace:Catch::__anon25
almostEqualUlps	..\Catch2\extras\catch_amalgamated.cpp	/^    bool almostEqualUlps(FP lhs, FP rhs, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::__anon25
nextafter	..\Catch2\extras\catch_amalgamated.cpp	/^    float nextafter(float x, float y) {$/;"	f	namespace:Catch::__anon25
nextafter	..\Catch2\extras\catch_amalgamated.cpp	/^    double nextafter(double x, double y) {$/;"	f	namespace:Catch::__anon25
step	..\Catch2\extras\catch_amalgamated.cpp	/^FP step(FP start, FP direction, uint64_t steps) {$/;"	f	namespace:Catch::__anon25
marginComparison	..\Catch2\extras\catch_amalgamated.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:Catch::__anon25
write	..\Catch2\extras\catch_amalgamated.cpp	/^void write(std::ostream& out, FloatingPoint num) {$/;"	f	namespace:Catch::__anon25
Matchers	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
FloatingPointKind	..\Catch2\extras\catch_amalgamated.cpp	/^    enum class FloatingPointKind : uint8_t {$/;"	c	namespace:Catch::Matchers::Detail	file:
Float	..\Catch2\extras\catch_amalgamated.cpp	/^        Float,$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind	file:
WithinAbsMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    WithinAbsMatcher::WithinAbsMatcher(double target, double margin)$/;"	f	class:Catch::Matchers::WithinAbsMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool WithinAbsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
describe	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string WithinAbsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
WithinUlpsMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    WithinUlpsMatcher::WithinUlpsMatcher(double target, uint64_t ulps, Detail::FloatingPointKind baseType)$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool WithinUlpsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
describe	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string WithinUlpsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
WithinRelMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    WithinRelMatcher::WithinRelMatcher(double target, double epsilon):$/;"	f	class:Catch::Matchers::WithinRelMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool WithinRelMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
describe	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string WithinRelMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
WithinULP	..\Catch2\extras\catch_amalgamated.cpp	/^WithinUlpsMatcher WithinULP(double target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinULP	..\Catch2\extras\catch_amalgamated.cpp	/^WithinUlpsMatcher WithinULP(float target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinAbs	..\Catch2\extras\catch_amalgamated.cpp	/^WithinAbsMatcher WithinAbs(double target, double margin) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\extras\catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(double target, double eps) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\extras\catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(double target) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\extras\catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(float target, float eps) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\extras\catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(float target) {$/;"	f	namespace:Catch::Matchers
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
CasedString	..\Catch2\extras\catch_amalgamated.cpp	/^    CasedString::CasedString( std::string const& str, CaseSensitive caseSensitivity )$/;"	f	class:Catch::Matchers::CasedString
adjustString	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string CasedString::adjustString( std::string const& str ) const {$/;"	f	class:Catch::Matchers::CasedString
caseSensitivitySuffix	..\Catch2\extras\catch_amalgamated.cpp	/^    StringRef CasedString::caseSensitivitySuffix() const {$/;"	f	class:Catch::Matchers::CasedString
StringMatcherBase	..\Catch2\extras\catch_amalgamated.cpp	/^    StringMatcherBase::StringMatcherBase( std::string const& operation, CasedString const& comparator )$/;"	f	class:Catch::Matchers::StringMatcherBase
describe	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string StringMatcherBase::describe() const {$/;"	f	class:Catch::Matchers::StringMatcherBase
StringEqualsMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    StringEqualsMatcher::StringEqualsMatcher( CasedString const& comparator ) : StringMatcherBase( "equals", comparator ) {}$/;"	f	class:Catch::Matchers::StringEqualsMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool StringEqualsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringEqualsMatcher
StringContainsMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    StringContainsMatcher::StringContainsMatcher( CasedString const& comparator ) : StringMatcherBase( "contains", comparator ) {}$/;"	f	class:Catch::Matchers::StringContainsMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool StringContainsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringContainsMatcher
StartsWithMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    StartsWithMatcher::StartsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "starts with", comparator ) {}$/;"	f	class:Catch::Matchers::StartsWithMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool StartsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StartsWithMatcher
EndsWithMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    EndsWithMatcher::EndsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "ends with", comparator ) {}$/;"	f	class:Catch::Matchers::EndsWithMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool EndsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::EndsWithMatcher
RegexMatcher	..\Catch2\extras\catch_amalgamated.cpp	/^    RegexMatcher::RegexMatcher(std::string regex, CaseSensitive caseSensitivity): m_regex(std::move(regex)), m_caseSensitivity(caseSensitivity) {}$/;"	f	class:Catch::Matchers::RegexMatcher
match	..\Catch2\extras\catch_amalgamated.cpp	/^    bool RegexMatcher::match(std::string const& matchee) const {$/;"	f	class:Catch::Matchers::RegexMatcher
describe	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string RegexMatcher::describe() const {$/;"	f	class:Catch::Matchers::RegexMatcher
Equals	..\Catch2\extras\catch_amalgamated.cpp	/^    StringEqualsMatcher Equals( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
Contains	..\Catch2\extras\catch_amalgamated.cpp	/^    StringContainsMatcher Contains( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
EndsWith	..\Catch2\extras\catch_amalgamated.cpp	/^    EndsWithMatcher EndsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
StartsWith	..\Catch2\extras\catch_amalgamated.cpp	/^    StartsWithMatcher StartsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
Matches	..\Catch2\extras\catch_amalgamated.cpp	/^    RegexMatcher Matches(std::string const& regex, CaseSensitive caseSensitivity) {$/;"	f	namespace:Catch::Matchers
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\extras\catch_amalgamated.cpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
describe_multi_matcher	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string describe_multi_matcher(StringRef combine, std::string const* descriptions_begin, std::string const* descriptions_end) {$/;"	f	namespace:Catch::Matchers::Detail
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
handleExceptionMatchExpr	..\Catch2\extras\catch_amalgamated.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, StringMatcher const& matcher, StringRef const& matcherString  ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
describe	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string IsEmptyMatcher::describe() const {$/;"	f	class:Catch::Matchers::IsEmptyMatcher
describe	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string HasSizeMatcher::describe() const {$/;"	f	class:Catch::Matchers::HasSizeMatcher
IsEmpty	..\Catch2\extras\catch_amalgamated.cpp	/^    IsEmptyMatcher IsEmpty() {$/;"	f	namespace:Catch::Matchers
SizeIs	..\Catch2\extras\catch_amalgamated.cpp	/^    HasSizeMatcher SizeIs(std::size_t sz) {$/;"	f	namespace:Catch::Matchers
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
toString	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string MatcherUntypedBase::toString() const {$/;"	f	class:Catch::Matchers::MatcherUntypedBase
finalizeDescription	..\Catch2\extras\catch_amalgamated.cpp	/^std::string Catch::Matchers::Detail::finalizeDescription(const std::string& desc) {$/;"	f	class:Catch::Matchers::Detail
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
match	..\Catch2\extras\catch_amalgamated.cpp	/^bool ExceptionMessageMatcher::match(std::exception const& ex) const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
describe	..\Catch2\extras\catch_amalgamated.cpp	/^std::string ExceptionMessageMatcher::describe() const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
Message	..\Catch2\extras\catch_amalgamated.cpp	/^ExceptionMessageMatcher Message(std::string const& message) {$/;"	f	namespace:Catch::Matchers
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
~AutomakeReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    AutomakeReporter::~AutomakeReporter() {}$/;"	f	class:Catch::AutomakeReporter
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void AutomakeReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::AutomakeReporter
skipTest	..\Catch2\extras\catch_amalgamated.cpp	/^    void AutomakeReporter::skipTest(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::AutomakeReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
getFormattedDuration	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string getFormattedDuration( double duration ) {$/;"	f	namespace:Catch
shouldShowDuration	..\Catch2\extras\catch_amalgamated.cpp	/^    bool shouldShowDuration( IConfig const& config, double duration ) {$/;"	f	namespace:Catch
serializeFilters	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string serializeFilters( std::vector<std::string> const& filters ) {$/;"	f	namespace:Catch
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& operator<<( std::ostream& out, lineOfChars value ) {$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
assertionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::assertionStarting( AssertionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool EventListenerBase::assertionEnded( AssertionStats const& ) {$/;"	f	class:Catch::EventListenerBase
listReporters	..\Catch2\extras\catch_amalgamated.cpp	/^    EventListenerBase::listReporters( std::vector<ReporterDescription> const&,$/;"	f	class:Catch::EventListenerBase
listTests	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::listTests( std::vector<TestCaseHandle> const&,$/;"	f	class:Catch::EventListenerBase
listTags	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::listTags( std::vector<TagInfo> const&,$/;"	f	class:Catch::EventListenerBase
noMatchingTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::noMatchingTestCases( std::string const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::testRunStarting( TestRunInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testGroupStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::testGroupStarting( GroupInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::testCaseStarting( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::sectionStarting( SectionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::sectionEnded( SectionStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::testCaseEnded( TestCaseStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::testGroupEnded( TestGroupStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::testRunEnded( TestRunStats const& ) {}$/;"	f	class:Catch::EventListenerBase
skipTest	..\Catch2\extras\catch_amalgamated.cpp	/^    void EventListenerBase::skipTest( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
dimColour	..\Catch2\extras\catch_amalgamated.cpp	/^    Catch::Colour::Code dimColour() { return Catch::Colour::FileName; }$/;"	f	namespace:__anon26
bothOrAll	..\Catch2\extras\catch_amalgamated.cpp	/^    Catch::StringRef bothOrAll( std::size_t count ) {$/;"	f	namespace:__anon26
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
compactFailedString	..\Catch2\extras\catch_amalgamated.cpp	/^    static constexpr Catch::StringRef compactFailedString = "FAILED"_sr;$/;"	v	file:
compactPassedString	..\Catch2\extras\catch_amalgamated.cpp	/^    static constexpr Catch::StringRef compactPassedString = "PASSED"_sr;$/;"	v	file:
printTotals	..\Catch2\extras\catch_amalgamated.cpp	/^void printTotals(std::ostream& out, const Totals& totals) {$/;"	f	namespace:Catch::__anon27
AssertionPrinter	..\Catch2\extras\catch_amalgamated.cpp	/^class AssertionPrinter {$/;"	c	namespace:Catch::__anon27	file:
AssertionPrinter	..\Catch2\extras\catch_amalgamated.cpp	/^    AssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfoMessages)$/;"	f	class:Catch::__anon27::AssertionPrinter
print	..\Catch2\extras\catch_amalgamated.cpp	/^    void print() {$/;"	f	class:Catch::__anon27::AssertionPrinter
printSourceInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
printResultType	..\Catch2\extras\catch_amalgamated.cpp	/^    void printResultType(Colour::Code colour, StringRef passOrFail) const {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
printIssue	..\Catch2\extras\catch_amalgamated.cpp	/^    void printIssue(char const* issue) const {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
printExpressionWas	..\Catch2\extras\catch_amalgamated.cpp	/^    void printExpressionWas() {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
printOriginalExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
printReconstructedExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
printMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    void printMessage() {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
printRemainingMessages	..\Catch2\extras\catch_amalgamated.cpp	/^    void printRemainingMessages(Colour::Code colour = dimColour()) {$/;"	f	class:Catch::__anon27::AssertionPrinter	file:
stream	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon27::AssertionPrinter	file:
result	..\Catch2\extras\catch_amalgamated.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon27::AssertionPrinter	file:
messages	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon27::AssertionPrinter	file:
itMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon27::AssertionPrinter	file:
printInfoMessages	..\Catch2\extras\catch_amalgamated.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon27::AssertionPrinter	file:
getDescription	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string CompactReporter::getDescription() {$/;"	f	class:Catch::CompactReporter
noMatchingTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^        void CompactReporter::noMatchingTestCases( std::string const& spec ) {$/;"	f	class:Catch::CompactReporter
assertionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^        void CompactReporter::assertionStarting( AssertionInfo const& ) {}$/;"	f	class:Catch::CompactReporter
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^        bool CompactReporter::assertionEnded( AssertionStats const& _assertionStats ) {$/;"	f	class:Catch::CompactReporter
sectionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^        void CompactReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::CompactReporter
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^        void CompactReporter::testRunEnded( TestRunStats const& _testRunStats ) {$/;"	f	class:Catch::CompactReporter
~CompactReporter	..\Catch2\extras\catch_amalgamated.cpp	/^        CompactReporter::~CompactReporter() {}$/;"	f	class:Catch::CompactReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
ConsoleAssertionPrinter	..\Catch2\extras\catch_amalgamated.cpp	/^class ConsoleAssertionPrinter {$/;"	c	namespace:Catch::__anon28	file:
ConsoleAssertionPrinter	..\Catch2\extras\catch_amalgamated.cpp	/^    ConsoleAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfoMessages)$/;"	f	class:Catch::__anon28::ConsoleAssertionPrinter
print	..\Catch2\extras\catch_amalgamated.cpp	/^    void print() const {$/;"	f	class:Catch::__anon28::ConsoleAssertionPrinter
printResultType	..\Catch2\extras\catch_amalgamated.cpp	/^    void printResultType() const {$/;"	f	class:Catch::__anon28::ConsoleAssertionPrinter	file:
printOriginalExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon28::ConsoleAssertionPrinter	file:
printReconstructedExpression	..\Catch2\extras\catch_amalgamated.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon28::ConsoleAssertionPrinter	file:
printMessage	..\Catch2\extras\catch_amalgamated.cpp	/^    void printMessage() const {$/;"	f	class:Catch::__anon28::ConsoleAssertionPrinter	file:
printSourceInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon28::ConsoleAssertionPrinter	file:
stream	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
stats	..\Catch2\extras\catch_amalgamated.cpp	/^    AssertionStats const& stats;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
result	..\Catch2\extras\catch_amalgamated.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
colour	..\Catch2\extras\catch_amalgamated.cpp	/^    Colour::Code colour;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
passOrFail	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string passOrFail;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
messageLabel	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string messageLabel;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
message	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string message;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
messages	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
printInfoMessages	..\Catch2\extras\catch_amalgamated.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon28::ConsoleAssertionPrinter	file:
makeRatio	..\Catch2\extras\catch_amalgamated.cpp	/^std::size_t makeRatio(std::size_t number, std::size_t total) {$/;"	f	namespace:Catch::__anon28
findMax	..\Catch2\extras\catch_amalgamated.cpp	/^std::size_t& findMax(std::size_t& i, std::size_t& j, std::size_t& k) {$/;"	f	namespace:Catch::__anon28
Justification	..\Catch2\extras\catch_amalgamated.cpp	/^enum class Justification { Left, Right };$/;"	c	namespace:Catch::__anon28	file:
Left	..\Catch2\extras\catch_amalgamated.cpp	/^enum class Justification { Left, Right };$/;"	m	class:Catch::__anon28::Justification	file:
ColumnInfo	..\Catch2\extras\catch_amalgamated.cpp	/^struct ColumnInfo {$/;"	s	namespace:Catch::__anon28	file:
name	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string name;$/;"	m	struct:Catch::__anon28::ColumnInfo	file:
width	..\Catch2\extras\catch_amalgamated.cpp	/^    int width;$/;"	m	struct:Catch::__anon28::ColumnInfo	file:
justification	..\Catch2\extras\catch_amalgamated.cpp	/^    Justification justification;$/;"	m	struct:Catch::__anon28::ColumnInfo	file:
ColumnBreak	..\Catch2\extras\catch_amalgamated.cpp	/^struct ColumnBreak {};$/;"	s	namespace:Catch::__anon28	file:
RowBreak	..\Catch2\extras\catch_amalgamated.cpp	/^struct RowBreak {};$/;"	s	namespace:Catch::__anon28	file:
Duration	..\Catch2\extras\catch_amalgamated.cpp	/^class Duration {$/;"	c	namespace:Catch::__anon28	file:
Unit	..\Catch2\extras\catch_amalgamated.cpp	/^    enum class Unit {$/;"	c	class:Catch::__anon28::Duration	file:
Auto	..\Catch2\extras\catch_amalgamated.cpp	/^        Auto,$/;"	m	class:Catch::__anon28::Duration::Unit	file:
Nanoseconds	..\Catch2\extras\catch_amalgamated.cpp	/^        Nanoseconds,$/;"	m	class:Catch::__anon28::Duration::Unit	file:
Microseconds	..\Catch2\extras\catch_amalgamated.cpp	/^        Microseconds,$/;"	m	class:Catch::__anon28::Duration::Unit	file:
Milliseconds	..\Catch2\extras\catch_amalgamated.cpp	/^        Milliseconds,$/;"	m	class:Catch::__anon28::Duration::Unit	file:
Seconds	..\Catch2\extras\catch_amalgamated.cpp	/^        Seconds,$/;"	m	class:Catch::__anon28::Duration::Unit	file:
s_nanosecondsInAMicrosecond	..\Catch2\extras\catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInAMicrosecond = 1000;$/;"	m	class:Catch::__anon28::Duration	file:
s_nanosecondsInAMillisecond	..\Catch2\extras\catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInAMillisecond = 1000 * s_nanosecondsInAMicrosecond;$/;"	m	class:Catch::__anon28::Duration	file:
s_nanosecondsInASecond	..\Catch2\extras\catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInASecond = 1000 * s_nanosecondsInAMillisecond;$/;"	m	class:Catch::__anon28::Duration	file:
s_nanosecondsInAMinute	..\Catch2\extras\catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInAMinute = 60 * s_nanosecondsInASecond;$/;"	m	class:Catch::__anon28::Duration	file:
m_inNanoseconds	..\Catch2\extras\catch_amalgamated.cpp	/^    double m_inNanoseconds;$/;"	m	class:Catch::__anon28::Duration	file:
m_units	..\Catch2\extras\catch_amalgamated.cpp	/^    Unit m_units;$/;"	m	class:Catch::__anon28::Duration	file:
Duration	..\Catch2\extras\catch_amalgamated.cpp	/^    explicit Duration(double inNanoseconds, Unit units = Unit::Auto)$/;"	f	class:Catch::__anon28::Duration
unitsAsString	..\Catch2\extras\catch_amalgamated.cpp	/^    StringRef unitsAsString() const {$/;"	f	class:Catch::__anon28::Duration
TablePrinter	..\Catch2\extras\catch_amalgamated.cpp	/^class TablePrinter {$/;"	c	namespace:Catch	file:
m_os	..\Catch2\extras\catch_amalgamated.cpp	/^    std::ostream& m_os;$/;"	m	class:Catch::TablePrinter	file:
m_columnInfos	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<ColumnInfo> m_columnInfos;$/;"	m	class:Catch::TablePrinter	file:
m_oss	..\Catch2\extras\catch_amalgamated.cpp	/^    ReusableStringStream m_oss;$/;"	m	class:Catch::TablePrinter	file:
m_currentColumn	..\Catch2\extras\catch_amalgamated.cpp	/^    int m_currentColumn = -1;$/;"	m	class:Catch::TablePrinter	file:
m_isOpen	..\Catch2\extras\catch_amalgamated.cpp	/^    bool m_isOpen = false;$/;"	m	class:Catch::TablePrinter	file:
TablePrinter	..\Catch2\extras\catch_amalgamated.cpp	/^    TablePrinter( std::ostream& os, std::vector<ColumnInfo> columnInfos )$/;"	f	class:Catch::TablePrinter
open	..\Catch2\extras\catch_amalgamated.cpp	/^    void open() {$/;"	f	class:Catch::TablePrinter
close	..\Catch2\extras\catch_amalgamated.cpp	/^    void close() {$/;"	f	class:Catch::TablePrinter
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, T const& value) {$/;"	f	class:Catch::TablePrinter
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, ColumnBreak) {$/;"	f	class:Catch::TablePrinter
operator <<	..\Catch2\extras\catch_amalgamated.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, RowBreak) {$/;"	f	class:Catch::TablePrinter
ConsoleReporter	..\Catch2\extras\catch_amalgamated.cpp	/^ConsoleReporter::ConsoleReporter(ReporterConfig const& config)$/;"	f	class:Catch::ConsoleReporter
getDescription	..\Catch2\extras\catch_amalgamated.cpp	/^std::string ConsoleReporter::getDescription() {$/;"	f	class:Catch::ConsoleReporter
noMatchingTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::noMatchingTestCases(std::string const& spec) {$/;"	f	class:Catch::ConsoleReporter
reportInvalidArguments	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::reportInvalidArguments(std::string const&arg){$/;"	f	class:Catch::ConsoleReporter
assertionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::assertionStarting(AssertionInfo const&) {}$/;"	f	class:Catch::ConsoleReporter
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^bool ConsoleReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::ConsoleReporter
sectionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::sectionStarting(SectionInfo const& _sectionInfo) {$/;"	f	class:Catch::ConsoleReporter
sectionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::ConsoleReporter
benchmarkPreparing	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::ConsoleReporter
benchmarkStarting	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkStarting(BenchmarkInfo const& info) {$/;"	f	class:Catch::ConsoleReporter
benchmarkEnded	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkEnded(BenchmarkStats<> const& stats) {$/;"	f	class:Catch::ConsoleReporter
benchmarkFailed	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkFailed(std::string const& error) {$/;"	f	class:Catch::ConsoleReporter
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::ConsoleReporter
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::testGroupEnded(TestGroupStats const& _testGroupStats) {$/;"	f	class:Catch::ConsoleReporter
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::ConsoleReporter
testRunStarting	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::testRunStarting(TestRunInfo const& _testInfo) {$/;"	f	class:Catch::ConsoleReporter
lazyPrint	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::lazyPrint() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintWithoutClosingBenchmarkTable	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::lazyPrintWithoutClosingBenchmarkTable() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintRunInfo	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::lazyPrintRunInfo() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintGroupInfo	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::lazyPrintGroupInfo() {$/;"	f	class:Catch::ConsoleReporter
printTestCaseAndSectionHeader	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printTestCaseAndSectionHeader() {$/;"	f	class:Catch::ConsoleReporter
printClosedHeader	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printClosedHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printOpenHeader	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printOpenHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printHeaderString	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printHeaderString(std::string const& _string, std::size_t indent) {$/;"	f	class:Catch::ConsoleReporter
SummaryColumn	..\Catch2\extras\catch_amalgamated.cpp	/^struct SummaryColumn {$/;"	s	namespace:Catch	file:
SummaryColumn	..\Catch2\extras\catch_amalgamated.cpp	/^    SummaryColumn( std::string _label, Colour::Code _colour )$/;"	f	struct:Catch::SummaryColumn
addRow	..\Catch2\extras\catch_amalgamated.cpp	/^    SummaryColumn addRow( std::size_t count ) {$/;"	f	struct:Catch::SummaryColumn
label	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string label;$/;"	m	struct:Catch::SummaryColumn	file:
colour	..\Catch2\extras\catch_amalgamated.cpp	/^    Colour::Code colour;$/;"	m	struct:Catch::SummaryColumn	file:
rows	..\Catch2\extras\catch_amalgamated.cpp	/^    std::vector<std::string> rows;$/;"	m	struct:Catch::SummaryColumn	file:
printTotals	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printTotals( Totals const& totals ) {$/;"	f	class:Catch::ConsoleReporter
printSummaryRow	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printSummaryRow(std::string const& label, std::vector<SummaryColumn> const& cols, std::size_t row) {$/;"	f	class:Catch::ConsoleReporter
printTotalsDivider	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printTotalsDivider(Totals const& totals) {$/;"	f	class:Catch::ConsoleReporter
printSummaryDivider	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printSummaryDivider() {$/;"	f	class:Catch::ConsoleReporter
printTestFilters	..\Catch2\extras\catch_amalgamated.cpp	/^void ConsoleReporter::printTestFilters() {$/;"	f	class:Catch::ConsoleReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
BySectionInfo	..\Catch2\extras\catch_amalgamated.cpp	/^        struct BySectionInfo {$/;"	s	namespace:Catch::__anon29	file:
BySectionInfo	..\Catch2\extras\catch_amalgamated.cpp	/^            BySectionInfo( SectionInfo const& other ): m_other( other ) {}$/;"	f	struct:Catch::__anon29::BySectionInfo
BySectionInfo	..\Catch2\extras\catch_amalgamated.cpp	/^            BySectionInfo( BySectionInfo const& other ):$/;"	f	struct:Catch::__anon29::BySectionInfo
operator ()	..\Catch2\extras\catch_amalgamated.cpp	/^            bool operator()($/;"	f	struct:Catch::__anon29::BySectionInfo
m_other	..\Catch2\extras\catch_amalgamated.cpp	/^            SectionInfo const& m_other;$/;"	m	struct:Catch::__anon29::BySectionInfo	file:
prepareExpandedExpression	..\Catch2\extras\catch_amalgamated.cpp	/^        void prepareExpandedExpression( AssertionResult& result ) {$/;"	f	namespace:Catch::__anon29
sectionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    CumulativeReporterBase::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::CumulativeReporterBase
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool CumulativeReporterBase::assertionEnded($/;"	f	class:Catch::CumulativeReporterBase
sectionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void CumulativeReporterBase::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::CumulativeReporterBase
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void CumulativeReporterBase::testCaseEnded($/;"	f	class:Catch::CumulativeReporterBase
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void CumulativeReporterBase::testGroupEnded($/;"	f	class:Catch::CumulativeReporterBase
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void CumulativeReporterBase::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::CumulativeReporterBase
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
getCurrentTimestamp	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string getCurrentTimestamp() {$/;"	f	namespace:Catch::__anon30
fileNameTag	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string fileNameTag(std::vector<Tag> const& tags) {$/;"	f	namespace:Catch::__anon30
JunitReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    JunitReporter::JunitReporter( ReporterConfig const& _config )$/;"	f	class:Catch::JunitReporter
~JunitReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    JunitReporter::~JunitReporter() {}$/;"	f	class:Catch::JunitReporter
getDescription	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string JunitReporter::getDescription() {$/;"	f	class:Catch::JunitReporter
noMatchingTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::noMatchingTestCases( std::string const& \/*spec*\/ ) {}$/;"	f	class:Catch::JunitReporter
testRunStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::testRunStarting( TestRunInfo const& runInfo )  {$/;"	f	class:Catch::JunitReporter
testGroupStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::JunitReporter
testCaseStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::testCaseStarting( TestCaseInfo const& testCaseInfo ) {$/;"	f	class:Catch::JunitReporter
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool JunitReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::JunitReporter
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::JunitReporter
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::JunitReporter
testRunEndedCumulative	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::testRunEndedCumulative() {$/;"	f	class:Catch::JunitReporter
writeGroup	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::writeGroup( TestGroupNode const& groupNode, double suiteTime ) {$/;"	f	class:Catch::JunitReporter
writeTestCase	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::writeTestCase( TestCaseNode const& testCaseNode ) {$/;"	f	class:Catch::JunitReporter
writeSection	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::writeSection(  std::string const& className,$/;"	f	class:Catch::JunitReporter
writeAssertions	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::writeAssertions( SectionNode const& sectionNode ) {$/;"	f	class:Catch::JunitReporter
writeAssertion	..\Catch2\extras\catch_amalgamated.cpp	/^    void JunitReporter::writeAssertion( AssertionStats const& stats ) {$/;"	f	class:Catch::JunitReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
ListeningReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    ListeningReporter::ListeningReporter() {$/;"	f	class:Catch::ListeningReporter
addListener	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::addListener( IStreamingReporterPtr&& listener ) {$/;"	f	class:Catch::ListeningReporter
addReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::addReporter(IStreamingReporterPtr&& reporter) {$/;"	f	class:Catch::ListeningReporter
noMatchingTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::noMatchingTestCases( std::string const& spec ) {$/;"	f	class:Catch::ListeningReporter
reportInvalidArguments	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::reportInvalidArguments(std::string const&arg){$/;"	f	class:Catch::ListeningReporter
benchmarkPreparing	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::benchmarkPreparing( std::string const& name ) {$/;"	f	class:Catch::ListeningReporter
benchmarkStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) {$/;"	f	class:Catch::ListeningReporter
benchmarkEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) {$/;"	f	class:Catch::ListeningReporter
benchmarkFailed	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::benchmarkFailed( std::string const& error ) {$/;"	f	class:Catch::ListeningReporter
testRunStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::testRunStarting( TestRunInfo const& testRunInfo ) {$/;"	f	class:Catch::ListeningReporter
testGroupStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::ListeningReporter
testCaseStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::ListeningReporter
sectionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::ListeningReporter
assertionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::assertionStarting( AssertionInfo const& assertionInfo ) {$/;"	f	class:Catch::ListeningReporter
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool ListeningReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::ListeningReporter
sectionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::ListeningReporter
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::ListeningReporter
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::ListeningReporter
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::ListeningReporter
skipTest	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::skipTest( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::ListeningReporter
listReporters	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::listReporters(std::vector<ReporterDescription> const& descriptions, IConfig const& config) {$/;"	f	class:Catch::ListeningReporter
listTests	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::listTests(std::vector<TestCaseHandle> const& tests, IConfig const& config) {$/;"	f	class:Catch::ListeningReporter
listTags	..\Catch2\extras\catch_amalgamated.cpp	/^    void ListeningReporter::listTags(std::vector<TagInfo> const& tags, IConfig const& config) {$/;"	f	class:Catch::ListeningReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
~SonarQubeReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    SonarQubeReporter::~SonarQubeReporter() {}$/;"	f	class:Catch::SonarQubeReporter
testRunStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::testRunStarting(TestRunInfo const& testRunInfo) {$/;"	f	class:Catch::SonarQubeReporter
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::testGroupEnded(TestGroupStats const& testGroupStats) {$/;"	f	class:Catch::SonarQubeReporter
writeGroup	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::writeGroup(TestGroupNode const& groupNode) {$/;"	f	class:Catch::SonarQubeReporter
writeTestFile	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::writeTestFile(std::string const& filename, TestGroupNode::ChildNodes const& testCaseNodes) {$/;"	f	class:Catch::SonarQubeReporter
writeTestCase	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::writeTestCase(TestCaseNode const& testCaseNode) {$/;"	f	class:Catch::SonarQubeReporter
writeSection	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::writeSection(std::string const& rootName, SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAssertions	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::writeAssertions(SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAssertion	..\Catch2\extras\catch_amalgamated.cpp	/^    void SonarQubeReporter::writeAssertion(AssertionStats const& stats, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
testRunStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    StreamingReporterBase::testRunStarting( TestRunInfo const& _testRunInfo ) {$/;"	f	class:Catch::StreamingReporterBase
testGroupStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    StreamingReporterBase::testGroupStarting( GroupInfo const& _groupInfo ) {$/;"	f	class:Catch::StreamingReporterBase
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void StreamingReporterBase::testGroupEnded( TestGroupStats const& ) {$/;"	f	class:Catch::StreamingReporterBase
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void StreamingReporterBase::testRunEnded( TestRunStats const& ) {$/;"	f	class:Catch::StreamingReporterBase
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
tapFailedString	..\Catch2\extras\catch_amalgamated.cpp	/^        static constexpr StringRef tapFailedString = "not ok"_sr;$/;"	v	file:
tapPassedString	..\Catch2\extras\catch_amalgamated.cpp	/^        static constexpr StringRef tapPassedString = "ok"_sr;$/;"	v	file:
TapAssertionPrinter	..\Catch2\extras\catch_amalgamated.cpp	/^        class TapAssertionPrinter {$/;"	c	namespace:Catch::__anon31	file:
TapAssertionPrinter	..\Catch2\extras\catch_amalgamated.cpp	/^            TapAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, std::size_t _counter)$/;"	f	class:Catch::__anon31::TapAssertionPrinter
print	..\Catch2\extras\catch_amalgamated.cpp	/^            void print() {$/;"	f	class:Catch::__anon31::TapAssertionPrinter
dimColour	..\Catch2\extras\catch_amalgamated.cpp	/^            static Colour::Code dimColour() { return Colour::FileName; }$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printSourceInfo	..\Catch2\extras\catch_amalgamated.cpp	/^            void printSourceInfo() const {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printResultType	..\Catch2\extras\catch_amalgamated.cpp	/^            void printResultType(StringRef passOrFail) const {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printIssue	..\Catch2\extras\catch_amalgamated.cpp	/^            void printIssue(StringRef issue) const {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printExpressionWas	..\Catch2\extras\catch_amalgamated.cpp	/^            void printExpressionWas() {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printOriginalExpression	..\Catch2\extras\catch_amalgamated.cpp	/^            void printOriginalExpression() const {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printReconstructedExpression	..\Catch2\extras\catch_amalgamated.cpp	/^            void printReconstructedExpression() const {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printMessage	..\Catch2\extras\catch_amalgamated.cpp	/^            void printMessage() {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
printRemainingMessages	..\Catch2\extras\catch_amalgamated.cpp	/^            void printRemainingMessages(Colour::Code colour = dimColour()) {$/;"	f	class:Catch::__anon31::TapAssertionPrinter	file:
stream	..\Catch2\extras\catch_amalgamated.cpp	/^            std::ostream& stream;$/;"	m	class:Catch::__anon31::TapAssertionPrinter	file:
result	..\Catch2\extras\catch_amalgamated.cpp	/^            AssertionResult const& result;$/;"	m	class:Catch::__anon31::TapAssertionPrinter	file:
messages	..\Catch2\extras\catch_amalgamated.cpp	/^            std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon31::TapAssertionPrinter	file:
itMessage	..\Catch2\extras\catch_amalgamated.cpp	/^            std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon31::TapAssertionPrinter	file:
printInfoMessages	..\Catch2\extras\catch_amalgamated.cpp	/^            bool printInfoMessages;$/;"	m	class:Catch::__anon31::TapAssertionPrinter	file:
counter	..\Catch2\extras\catch_amalgamated.cpp	/^            std::size_t counter;$/;"	m	class:Catch::__anon31::TapAssertionPrinter	file:
~TAPReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    TAPReporter::~TAPReporter() {}$/;"	f	class:Catch::TAPReporter
noMatchingTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^    void TAPReporter::noMatchingTestCases(std::string const& spec) {$/;"	f	class:Catch::TAPReporter
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TAPReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::TAPReporter
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void TAPReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::TAPReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
printHeaderString	..\Catch2\extras\catch_amalgamated.cpp	/^        void printHeaderString(std::ostream& os, std::string const& _string, std::size_t indent = 0) {$/;"	f	namespace:Catch::__anon32
escape	..\Catch2\extras\catch_amalgamated.cpp	/^        std::string escape(std::string const& str) {$/;"	f	namespace:Catch::__anon32
~TeamCityReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    TeamCityReporter::~TeamCityReporter() {}$/;"	f	class:Catch::TeamCityReporter
testGroupStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void TeamCityReporter::testGroupStarting(GroupInfo const& groupInfo) {$/;"	f	class:Catch::TeamCityReporter
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void TeamCityReporter::testGroupEnded(TestGroupStats const& testGroupStats) {$/;"	f	class:Catch::TeamCityReporter
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool TeamCityReporter::assertionEnded(AssertionStats const& assertionStats) {$/;"	f	class:Catch::TeamCityReporter
testCaseStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void TeamCityReporter::testCaseStarting(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::TeamCityReporter
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void TeamCityReporter::testCaseEnded(TestCaseStats const& testCaseStats) {$/;"	f	class:Catch::TeamCityReporter
printSectionHeader	..\Catch2\extras\catch_amalgamated.cpp	/^    void TeamCityReporter::printSectionHeader(std::ostream& os) {$/;"	f	class:Catch::TeamCityReporter
Catch	..\Catch2\extras\catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
XmlReporter	..\Catch2\extras\catch_amalgamated.cpp	/^    XmlReporter::XmlReporter( ReporterConfig const& _config )$/;"	f	class:Catch::XmlReporter
getDescription	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string XmlReporter::getDescription() {$/;"	f	class:Catch::XmlReporter
getStylesheetRef	..\Catch2\extras\catch_amalgamated.cpp	/^    std::string XmlReporter::getStylesheetRef() const {$/;"	f	class:Catch::XmlReporter
writeSourceInfo	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::writeSourceInfo( SourceLineInfo const& sourceInfo ) {$/;"	f	class:Catch::XmlReporter
noMatchingTestCases	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::noMatchingTestCases( std::string const& s ) {$/;"	f	class:Catch::XmlReporter
testRunStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::testRunStarting( TestRunInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
testGroupStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::XmlReporter
testCaseStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
sectionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::XmlReporter
assertionStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::assertionStarting( AssertionInfo const& ) { }$/;"	f	class:Catch::XmlReporter
assertionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    bool XmlReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::XmlReporter
sectionEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::XmlReporter
testCaseEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::XmlReporter
testGroupEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::XmlReporter
testRunEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::XmlReporter
benchmarkPreparing	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::XmlReporter
benchmarkStarting	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::benchmarkStarting(BenchmarkInfo const &info) {$/;"	f	class:Catch::XmlReporter
benchmarkEnded	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::benchmarkEnded(BenchmarkStats<> const& benchmarkStats) {$/;"	f	class:Catch::XmlReporter
benchmarkFailed	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::benchmarkFailed(std::string const &error) {$/;"	f	class:Catch::XmlReporter
listReporters	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::listReporters(std::vector<ReporterDescription> const& descriptions, IConfig const&) {$/;"	f	class:Catch::XmlReporter
listTests	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::listTests(std::vector<TestCaseHandle> const& tests, IConfig const&) {$/;"	f	class:Catch::XmlReporter
listTags	..\Catch2\extras\catch_amalgamated.cpp	/^    void XmlReporter::listTags(std::vector<TagInfo> const& tags, IConfig const&) {$/;"	f	class:Catch::XmlReporter
CATCH_AMALGAMATED_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	15;"	d
CATCH_ALL_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	33;"	d
CATCH_BENCHMARK_ALL_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	51;"	d
CATCH_BENCHMARK_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	58;"	d
CATCH_INTERFACES_CONFIG_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	63;"	d
CATCH_NONCOPYABLE_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	68;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
NonCopyable	..\Catch2\extras\catch_amalgamated.hpp	/^        class NonCopyable {$/;"	c	namespace:Catch::Detail
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^            NonCopyable() noexcept = default;$/;"	m	class:Catch::Detail::NonCopyable
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Verbosity	..\Catch2\extras\catch_amalgamated.hpp	/^    enum class Verbosity {$/;"	c	namespace:Catch
Quiet	..\Catch2\extras\catch_amalgamated.hpp	/^        Quiet = 0,$/;"	m	class:Catch::Verbosity
Normal	..\Catch2\extras\catch_amalgamated.hpp	/^        Normal,$/;"	m	class:Catch::Verbosity
WarnAbout	..\Catch2\extras\catch_amalgamated.hpp	/^    struct WarnAbout { enum What {$/;"	s	namespace:Catch
What	..\Catch2\extras\catch_amalgamated.hpp	/^    struct WarnAbout { enum What {$/;"	g	struct:Catch::WarnAbout
Nothing	..\Catch2\extras\catch_amalgamated.hpp	/^        Nothing = 0x00,$/;"	e	enum:Catch::WarnAbout::What
NoAssertions	..\Catch2\extras\catch_amalgamated.hpp	/^        NoAssertions = 0x01,$/;"	e	enum:Catch::WarnAbout::What
NoTests	..\Catch2\extras\catch_amalgamated.hpp	/^        NoTests = 0x02$/;"	e	enum:Catch::WarnAbout::What
ShowDurations	..\Catch2\extras\catch_amalgamated.hpp	/^    enum class ShowDurations {$/;"	c	namespace:Catch
DefaultForReporter	..\Catch2\extras\catch_amalgamated.hpp	/^        DefaultForReporter,$/;"	m	class:Catch::ShowDurations
Always	..\Catch2\extras\catch_amalgamated.hpp	/^        Always,$/;"	m	class:Catch::ShowDurations
TestRunOrder	..\Catch2\extras\catch_amalgamated.hpp	/^    enum class TestRunOrder {$/;"	c	namespace:Catch
Declared	..\Catch2\extras\catch_amalgamated.hpp	/^        Declared,$/;"	m	class:Catch::TestRunOrder
LexicographicallySorted	..\Catch2\extras\catch_amalgamated.hpp	/^        LexicographicallySorted,$/;"	m	class:Catch::TestRunOrder
UseColour	..\Catch2\extras\catch_amalgamated.hpp	/^    enum class UseColour {$/;"	c	namespace:Catch
Auto	..\Catch2\extras\catch_amalgamated.hpp	/^        Auto,$/;"	m	class:Catch::UseColour
Yes	..\Catch2\extras\catch_amalgamated.hpp	/^        Yes,$/;"	m	class:Catch::UseColour
WaitForKeypress	..\Catch2\extras\catch_amalgamated.hpp	/^    struct WaitForKeypress { enum When {$/;"	s	namespace:Catch
When	..\Catch2\extras\catch_amalgamated.hpp	/^    struct WaitForKeypress { enum When {$/;"	g	struct:Catch::WaitForKeypress
Never	..\Catch2\extras\catch_amalgamated.hpp	/^        Never,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStart	..\Catch2\extras\catch_amalgamated.hpp	/^        BeforeStart = 1,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeExit	..\Catch2\extras\catch_amalgamated.hpp	/^        BeforeExit = 2,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStartAndExit	..\Catch2\extras\catch_amalgamated.hpp	/^        BeforeStartAndExit = BeforeStart | BeforeExit$/;"	e	enum:Catch::WaitForKeypress::When
IConfig	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IConfig : Detail::NonCopyable {$/;"	s	namespace:Catch
CATCH_CONTEXT_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	168;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
IContext	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IContext$/;"	s	namespace:Catch
IMutableContext	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
currentContext	..\Catch2\extras\catch_amalgamated.hpp	/^        static IMutableContext *currentContext;$/;"	m	struct:Catch::IMutableContext
getCurrentMutableContext	..\Catch2\extras\catch_amalgamated.hpp	/^    inline IMutableContext& getCurrentMutableContext()$/;"	f	namespace:Catch
getCurrentContext	..\Catch2\extras\catch_amalgamated.hpp	/^    inline IContext& getCurrentContext()$/;"	f	namespace:Catch
CATCH_INTERFACES_REPORTER_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	222;"	d
CATCH_SECTION_INFO_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	227;"	d
CATCH_COMMON_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	232;"	d
CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	237;"	d
CATCH_PLATFORM_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	259;"	d
CATCH_PLATFORM_MAC	..\Catch2\extras\catch_amalgamated.hpp	264;"	d
CATCH_PLATFORM_IPHONE	..\Catch2\extras\catch_amalgamated.hpp	266;"	d
CATCH_PLATFORM_LINUX	..\Catch2\extras\catch_amalgamated.hpp	270;"	d
CATCH_PLATFORM_WINDOWS	..\Catch2\extras\catch_amalgamated.hpp	273;"	d
CATCH_CPP14_OR_GREATER	..\Catch2\extras\catch_amalgamated.hpp	281;"	d
CATCH_CPP17_OR_GREATER	..\Catch2\extras\catch_amalgamated.hpp	285;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	293;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	294;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	298;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	301;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	..\Catch2\extras\catch_amalgamated.hpp	304;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	310;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	311;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	..\Catch2\extras\catch_amalgamated.hpp	325;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	329;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	333;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	336;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	339;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	342;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	..\Catch2\extras\catch_amalgamated.hpp	351;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	..\Catch2\extras\catch_amalgamated.hpp	357;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	..\Catch2\extras\catch_amalgamated.hpp	361;"	d
CATCH_CONFIG_COLOUR_NONE	..\Catch2\extras\catch_amalgamated.hpp	362;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	..\Catch2\extras\catch_amalgamated.hpp	368;"	d
CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE	..\Catch2\extras\catch_amalgamated.hpp	369;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	..\Catch2\extras\catch_amalgamated.hpp	375;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	..\Catch2\extras\catch_amalgamated.hpp	381;"	d
_BSD_SOURCE	..\Catch2\extras\catch_amalgamated.hpp	390;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	..\Catch2\extras\catch_amalgamated.hpp	396;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	405;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	406;"	d
CATCH_CONFIG_COLOUR_NONE	..\Catch2\extras\catch_amalgamated.hpp	411;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	..\Catch2\extras\catch_amalgamated.hpp	413;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	..\Catch2\extras\catch_amalgamated.hpp	421;"	d
CATCH_INTERNAL_CONFIG_USE_ASYNC	..\Catch2\extras\catch_amalgamated.hpp	429;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	..\Catch2\extras\catch_amalgamated.hpp	435;"	d
CATCH_INTERNAL_CONFIG_NO_WCHAR	..\Catch2\extras\catch_amalgamated.hpp	441;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	..\Catch2\extras\catch_amalgamated.hpp	447;"	d
CATCH_INTERNAL_CONFIG_COUNTER	..\Catch2\extras\catch_amalgamated.hpp	458;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	..\Catch2\extras\catch_amalgamated.hpp	468;"	d
CATCH_INTERNAL_CONFIG_NO_ASYNC	..\Catch2\extras\catch_amalgamated.hpp	469;"	d
CATCH_CONFIG_COLOUR_NONE	..\Catch2\extras\catch_amalgamated.hpp	470;"	d
CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER	..\Catch2\extras\catch_amalgamated.hpp	474;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	..\Catch2\extras\catch_amalgamated.hpp	481;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	..\Catch2\extras\catch_amalgamated.hpp	486;"	d
CATCH_INTERNAL_CONFIG_CPP17_BYTE	..\Catch2\extras\catch_amalgamated.hpp	493;"	d
CATCH_CONFIG_NO_CPP17_VARIANT	..\Catch2\extras\catch_amalgamated.hpp	504;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	..\Catch2\extras\catch_amalgamated.hpp	506;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	..\Catch2\extras\catch_amalgamated.hpp	509;"	d
CATCH_CONFIG_COUNTER	..\Catch2\extras\catch_amalgamated.hpp	516;"	d
CATCH_CONFIG_WINDOWS_SEH	..\Catch2\extras\catch_amalgamated.hpp	519;"	d
CATCH_CONFIG_POSIX_SIGNALS	..\Catch2\extras\catch_amalgamated.hpp	523;"	d
CATCH_CONFIG_WCHAR	..\Catch2\extras\catch_amalgamated.hpp	527;"	d
CATCH_CONFIG_CPP11_TO_STRING	..\Catch2\extras\catch_amalgamated.hpp	531;"	d
CATCH_CONFIG_CPP17_OPTIONAL	..\Catch2\extras\catch_amalgamated.hpp	535;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	..\Catch2\extras\catch_amalgamated.hpp	539;"	d
CATCH_CONFIG_CPP17_VARIANT	..\Catch2\extras\catch_amalgamated.hpp	543;"	d
CATCH_CONFIG_CPP17_BYTE	..\Catch2\extras\catch_amalgamated.hpp	547;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	..\Catch2\extras\catch_amalgamated.hpp	552;"	d
CATCH_CONFIG_NEW_CAPTURE	..\Catch2\extras\catch_amalgamated.hpp	556;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	..\Catch2\extras\catch_amalgamated.hpp	560;"	d
CATCH_CONFIG_POLYFILL_ISNAN	..\Catch2\extras\catch_amalgamated.hpp	564;"	d
CATCH_CONFIG_USE_ASYNC	..\Catch2\extras\catch_amalgamated.hpp	568;"	d
CATCH_CONFIG_ANDROID_LOGWRITE	..\Catch2\extras\catch_amalgamated.hpp	572;"	d
CATCH_CONFIG_GLOBAL_NEXTAFTER	..\Catch2\extras\catch_amalgamated.hpp	576;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	583;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\extras\catch_amalgamated.hpp	586;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	589;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	592;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	595;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	598;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	..\Catch2\extras\catch_amalgamated.hpp	604;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	608;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	610;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\extras\catch_amalgamated.hpp	614;"	d
CATCH_TRY	..\Catch2\extras\catch_amalgamated.hpp	618;"	d
CATCH_CATCH_ALL	..\Catch2\extras\catch_amalgamated.hpp	619;"	d
CATCH_CATCH_ANON	..\Catch2\extras\catch_amalgamated.hpp	620;"	d
CATCH_TRY	..\Catch2\extras\catch_amalgamated.hpp	622;"	d
CATCH_CATCH_ALL	..\Catch2\extras\catch_amalgamated.hpp	623;"	d
CATCH_CATCH_ANON	..\Catch2\extras\catch_amalgamated.hpp	624;"	d
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	..\Catch2\extras\catch_amalgamated.hpp	628;"	d
CATCH_STRINGREF_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	635;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
StringRef	..\Catch2\extras\catch_amalgamated.hpp	/^    class StringRef {$/;"	c	namespace:Catch
s_empty	..\Catch2\extras\catch_amalgamated.hpp	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef
m_start	..\Catch2\extras\catch_amalgamated.hpp	/^        char const* m_start = s_empty;$/;"	m	class:Catch::StringRef
m_size	..\Catch2\extras\catch_amalgamated.hpp	/^        size_type m_size = 0;$/;"	m	class:Catch::StringRef
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^        constexpr StringRef() noexcept = default;$/;"	m	class:Catch::StringRef
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^        StringRef( char const* rawChars ) noexcept;$/;"	m	class:Catch::StringRef
m_size	..\Catch2\extras\catch_amalgamated.hpp	/^            m_size( size )$/;"	f	class:Catch::StringRef
m_size	..\Catch2\extras\catch_amalgamated.hpp	/^            m_size( stdString.size() )$/;"	f	class:Catch::StringRef
operator std::string	..\Catch2\extras\catch_amalgamated.hpp	/^        explicit operator std::string() const {$/;"	f	class:Catch::StringRef
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^        bool operator<(StringRef const& rhs) const noexcept;$/;"	m	class:Catch::StringRef
begin	..\Catch2\extras\catch_amalgamated.hpp	/^        constexpr const_iterator begin() const { return m_start; }$/;"	f	class:Catch::StringRef
end	..\Catch2\extras\catch_amalgamated.hpp	/^        constexpr const_iterator end() const { return m_start + m_size; }$/;"	f	class:Catch::StringRef
INTERNAL_CATCH_UNIQUE_NAME_LINE2	..\Catch2\extras\catch_amalgamated.hpp	746;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	..\Catch2\extras\catch_amalgamated.hpp	747;"	d
INTERNAL_CATCH_UNIQUE_NAME	..\Catch2\extras\catch_amalgamated.hpp	749;"	d
INTERNAL_CATCH_UNIQUE_NAME	..\Catch2\extras\catch_amalgamated.hpp	751;"	d
Catch_global_namespace_dummy	..\Catch2\extras\catch_amalgamated.hpp	/^struct Catch_global_namespace_dummy {};$/;"	s
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
SourceLineInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^        constexpr SourceLineInfo( char const* _file, std::size_t _line ) noexcept:$/;"	m	struct:Catch::SourceLineInfo
line	..\Catch2\extras\catch_amalgamated.hpp	/^            line( _line )$/;"	f	struct:Catch::SourceLineInfo
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^        bool operator == ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^        bool operator < ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
file	..\Catch2\extras\catch_amalgamated.hpp	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo
line	..\Catch2\extras\catch_amalgamated.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
StreamEndStop	..\Catch2\extras\catch_amalgamated.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
operator +	..\Catch2\extras\catch_amalgamated.hpp	/^        StringRef operator+() const {$/;"	f	struct:Catch::StreamEndStop
operator +	..\Catch2\extras\catch_amalgamated.hpp	/^        friend T const& operator + ( T const& value, StreamEndStop ) {$/;"	f	struct:Catch::StreamEndStop
CATCH_INTERNAL_LINEINFO	..\Catch2\extras\catch_amalgamated.hpp	801;"	d
CATCH_TOTALS_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	808;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Counts	..\Catch2\extras\catch_amalgamated.hpp	/^    struct Counts {$/;"	s	namespace:Catch
passed	..\Catch2\extras\catch_amalgamated.hpp	/^        std::size_t passed = 0;$/;"	m	struct:Catch::Counts
failed	..\Catch2\extras\catch_amalgamated.hpp	/^        std::size_t failed = 0;$/;"	m	struct:Catch::Counts
failedButOk	..\Catch2\extras\catch_amalgamated.hpp	/^        std::size_t failedButOk = 0;$/;"	m	struct:Catch::Counts
Totals	..\Catch2\extras\catch_amalgamated.hpp	/^    struct Totals {$/;"	s	namespace:Catch
error	..\Catch2\extras\catch_amalgamated.hpp	/^        int error = 0;$/;"	m	struct:Catch::Totals
assertions	..\Catch2\extras\catch_amalgamated.hpp	/^        Counts assertions;$/;"	m	struct:Catch::Totals
testCases	..\Catch2\extras\catch_amalgamated.hpp	/^        Counts testCases;$/;"	m	struct:Catch::Totals
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
SectionInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct SectionInfo {$/;"	s	namespace:Catch
SectionInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        SectionInfo( SourceLineInfo const& _lineInfo, std::string _name,$/;"	f	struct:Catch::SectionInfo
name	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string name;$/;"	m	struct:Catch::SectionInfo
lineInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::SectionInfo
SectionEndInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct SectionEndInfo {$/;"	s	namespace:Catch
sectionInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionEndInfo
prevAssertions	..\Catch2\extras\catch_amalgamated.hpp	/^        Counts prevAssertions;$/;"	m	struct:Catch::SectionEndInfo
durationInSeconds	..\Catch2\extras\catch_amalgamated.hpp	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionEndInfo
CATCH_ASSERTION_RESULT_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	872;"	d
CATCH_ASSERTION_INFO_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	878;"	d
CATCH_RESULT_TYPE_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	883;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
ResultWas	..\Catch2\extras\catch_amalgamated.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
OfType	..\Catch2\extras\catch_amalgamated.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Unknown	..\Catch2\extras\catch_amalgamated.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Ok	..\Catch2\extras\catch_amalgamated.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Info	..\Catch2\extras\catch_amalgamated.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Warning	..\Catch2\extras\catch_amalgamated.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	..\Catch2\extras\catch_amalgamated.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	..\Catch2\extras\catch_amalgamated.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	..\Catch2\extras\catch_amalgamated.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
Exception	..\Catch2\extras\catch_amalgamated.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	..\Catch2\extras\catch_amalgamated.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	..\Catch2\extras\catch_amalgamated.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	..\Catch2\extras\catch_amalgamated.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
ResultDisposition	..\Catch2\extras\catch_amalgamated.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
Flags	..\Catch2\extras\catch_amalgamated.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Normal	..\Catch2\extras\catch_amalgamated.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	..\Catch2\extras\catch_amalgamated.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	..\Catch2\extras\catch_amalgamated.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	..\Catch2\extras\catch_amalgamated.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
isFalseTest	..\Catch2\extras\catch_amalgamated.hpp	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
AssertionInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct AssertionInfo {$/;"	s	namespace:Catch
macroName	..\Catch2\extras\catch_amalgamated.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::AssertionInfo
lineInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	..\Catch2\extras\catch_amalgamated.hpp	/^        StringRef capturedExpression;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	..\Catch2\extras\catch_amalgamated.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
CATCH_LAZY_EXPR_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	948;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
LazyExpression	..\Catch2\extras\catch_amalgamated.hpp	/^    class LazyExpression {$/;"	c	namespace:Catch
m_transientExpression	..\Catch2\extras\catch_amalgamated.hpp	/^        ITransientExpression const* m_transientExpression = nullptr;$/;"	m	class:Catch::LazyExpression
m_isNegated	..\Catch2\extras\catch_amalgamated.hpp	/^        bool m_isNegated;$/;"	m	class:Catch::LazyExpression
LazyExpression	..\Catch2\extras\catch_amalgamated.hpp	/^        LazyExpression( bool isNegated ):$/;"	f	class:Catch::LazyExpression
other	..\Catch2\extras\catch_amalgamated.hpp	/^        LazyExpression(LazyExpression const& other) = default;$/;"	m	class:Catch::LazyExpression
operator bool	..\Catch2\extras\catch_amalgamated.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::LazyExpression
ostream	..\Catch2\extras\catch_amalgamated.hpp	/^        friend auto operator << ( std::ostream& os, LazyExpression const& lazyExpr ) -> std::ostream&;$/;"	m	class:Catch::LazyExpression::std
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
AssertionResultData	..\Catch2\extras\catch_amalgamated.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
message	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	..\Catch2\extras\catch_amalgamated.hpp	/^        mutable std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
lazyExpression	..\Catch2\extras\catch_amalgamated.hpp	/^        LazyExpression lazyExpression;$/;"	m	struct:Catch::AssertionResultData
resultType	..\Catch2\extras\catch_amalgamated.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
AssertionResult	..\Catch2\extras\catch_amalgamated.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
m_info	..\Catch2\extras\catch_amalgamated.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_resultData	..\Catch2\extras\catch_amalgamated.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
CATCH_MESSAGE_INFO_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1026;"	d
CATCH_INTERFACES_CAPTURE_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1031;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
IResultCapture	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IResultCapture {$/;"	s	namespace:Catch
IGeneratorTracker	..\Catch2\extras\catch_amalgamated.hpp	/^        virtual auto acquireGeneratorTracker( StringRef generatorName, SourceLineInfo const& lineInfo ) -> IGeneratorTracker& = 0;$/;"	m	struct:Catch::IResultCapture
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
MessageInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct MessageInfo {$/;"	s	namespace:Catch
macroName	..\Catch2\extras\catch_amalgamated.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::MessageInfo
message	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string message;$/;"	m	struct:Catch::MessageInfo
lineInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::MessageInfo
type	..\Catch2\extras\catch_amalgamated.hpp	/^        ResultWas::OfType type;$/;"	m	struct:Catch::MessageInfo
sequence	..\Catch2\extras\catch_amalgamated.hpp	/^        unsigned int sequence;$/;"	m	struct:Catch::MessageInfo
operator ==	..\Catch2\extras\catch_amalgamated.hpp	/^        bool operator == (MessageInfo const& other) const {$/;"	f	struct:Catch::MessageInfo
operator <	..\Catch2\extras\catch_amalgamated.hpp	/^        bool operator < (MessageInfo const& other) const {$/;"	f	struct:Catch::MessageInfo
globalCount	..\Catch2\extras\catch_amalgamated.hpp	/^        static unsigned int globalCount;$/;"	m	struct:Catch::MessageInfo
CATCH_UNIQUE_PTR_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1149;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Detail {$/;"	n	namespace:Catch
unique_ptr	..\Catch2\extras\catch_amalgamated.hpp	/^    class unique_ptr {$/;"	c	namespace:Catch::Detail
m_ptr	..\Catch2\extras\catch_amalgamated.hpp	/^        T* m_ptr;$/;"	m	class:Catch::Detail::unique_ptr
unique_ptr	..\Catch2\extras\catch_amalgamated.hpp	/^        constexpr unique_ptr(std::nullptr_t = nullptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	..\Catch2\extras\catch_amalgamated.hpp	/^        explicit constexpr unique_ptr(T* ptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	..\Catch2\extras\catch_amalgamated.hpp	/^        unique_ptr(unique_ptr<U>&& from):$/;"	f	class:Catch::Detail::unique_ptr
operator =	..\Catch2\extras\catch_amalgamated.hpp	/^        unique_ptr& operator=(unique_ptr<U>&& from) {$/;"	f	class:Catch::Detail::unique_ptr
m_ptr	..\Catch2\extras\catch_amalgamated.hpp	/^            m_ptr(rhs.m_ptr) {$/;"	f	class:Catch::Detail::unique_ptr
~unique_ptr	..\Catch2\extras\catch_amalgamated.hpp	/^        ~unique_ptr() {$/;"	f	class:Catch::Detail::unique_ptr
operator *	..\Catch2\extras\catch_amalgamated.hpp	/^        T& operator*() {$/;"	f	class:Catch::Detail::unique_ptr
operator *	..\Catch2\extras\catch_amalgamated.hpp	/^        T const& operator*() const {$/;"	f	class:Catch::Detail::unique_ptr
get	..\Catch2\extras\catch_amalgamated.hpp	/^        T* get() { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
get	..\Catch2\extras\catch_amalgamated.hpp	/^        T const* get() const { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
reset	..\Catch2\extras\catch_amalgamated.hpp	/^        void reset(T* ptr = nullptr) {$/;"	f	class:Catch::Detail::unique_ptr
release	..\Catch2\extras\catch_amalgamated.hpp	/^        T* release() {$/;"	f	class:Catch::Detail::unique_ptr
operator bool	..\Catch2\extras\catch_amalgamated.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::Detail::unique_ptr
swap	..\Catch2\extras\catch_amalgamated.hpp	/^        friend void swap(unique_ptr& lhs, unique_ptr& rhs) {$/;"	f	class:Catch::Detail::unique_ptr
make_unique	..\Catch2\extras\catch_amalgamated.hpp	/^    unique_ptr<T> make_unique(Args&&... args) {$/;"	f	namespace:Catch::Detail
CATCH_ESTIMATE_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1264;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Estimate	..\Catch2\extras\catch_amalgamated.hpp	/^        struct Estimate {$/;"	s	namespace:Catch::Benchmark
point	..\Catch2\extras\catch_amalgamated.hpp	/^            Duration point;$/;"	m	struct:Catch::Benchmark::Estimate
lower_bound	..\Catch2\extras\catch_amalgamated.hpp	/^            Duration lower_bound;$/;"	m	struct:Catch::Benchmark::Estimate
upper_bound	..\Catch2\extras\catch_amalgamated.hpp	/^            Duration upper_bound;$/;"	m	struct:Catch::Benchmark::Estimate
confidence_interval	..\Catch2\extras\catch_amalgamated.hpp	/^            double confidence_interval;$/;"	m	struct:Catch::Benchmark::Estimate
operator Estimate<Duration2>	..\Catch2\extras\catch_amalgamated.hpp	/^            operator Estimate<Duration2>() const {$/;"	f	struct:Catch::Benchmark::Estimate
CATCH_OUTLIER_CLASSIFICATION_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1289;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
OutlierClassification	..\Catch2\extras\catch_amalgamated.hpp	/^        struct OutlierClassification {$/;"	s	namespace:Catch::Benchmark
samples_seen	..\Catch2\extras\catch_amalgamated.hpp	/^            int samples_seen = 0;$/;"	m	struct:Catch::Benchmark::OutlierClassification
low_severe	..\Catch2\extras\catch_amalgamated.hpp	/^            int low_severe = 0;     \/\/ more than 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
low_mild	..\Catch2\extras\catch_amalgamated.hpp	/^            int low_mild = 0;       \/\/ 1.5 to 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
high_mild	..\Catch2\extras\catch_amalgamated.hpp	/^            int high_mild = 0;      \/\/ 1.5 to 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
high_severe	..\Catch2\extras\catch_amalgamated.hpp	/^            int high_severe = 0;    \/\/ more than 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
total	..\Catch2\extras\catch_amalgamated.hpp	/^            int total() const {$/;"	f	struct:Catch::Benchmark::OutlierClassification
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
ReporterConfig	..\Catch2\extras\catch_amalgamated.hpp	/^    struct ReporterConfig {$/;"	s	namespace:Catch
m_stream	..\Catch2\extras\catch_amalgamated.hpp	/^        std::ostream* m_stream;$/;"	m	struct:Catch::ReporterConfig
m_fullConfig	..\Catch2\extras\catch_amalgamated.hpp	/^        IConfig const* m_fullConfig;$/;"	m	struct:Catch::ReporterConfig
TestRunInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct TestRunInfo {$/;"	s	namespace:Catch
name	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string name;$/;"	m	struct:Catch::TestRunInfo
GroupInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct GroupInfo {$/;"	s	namespace:Catch
name	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string name;$/;"	m	struct:Catch::GroupInfo
groupIndex	..\Catch2\extras\catch_amalgamated.hpp	/^        std::size_t groupIndex;$/;"	m	struct:Catch::GroupInfo
groupsCounts	..\Catch2\extras\catch_amalgamated.hpp	/^        std::size_t groupsCounts;$/;"	m	struct:Catch::GroupInfo
AssertionStats	..\Catch2\extras\catch_amalgamated.hpp	/^    struct AssertionStats {$/;"	s	namespace:Catch
assertionResult	..\Catch2\extras\catch_amalgamated.hpp	/^        AssertionResult assertionResult;$/;"	m	struct:Catch::AssertionStats
infoMessages	..\Catch2\extras\catch_amalgamated.hpp	/^        std::vector<MessageInfo> infoMessages;$/;"	m	struct:Catch::AssertionStats
totals	..\Catch2\extras\catch_amalgamated.hpp	/^        Totals totals;$/;"	m	struct:Catch::AssertionStats
SectionStats	..\Catch2\extras\catch_amalgamated.hpp	/^    struct SectionStats {$/;"	s	namespace:Catch
sectionInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionStats
assertions	..\Catch2\extras\catch_amalgamated.hpp	/^        Counts assertions;$/;"	m	struct:Catch::SectionStats
durationInSeconds	..\Catch2\extras\catch_amalgamated.hpp	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionStats
missingAssertions	..\Catch2\extras\catch_amalgamated.hpp	/^        bool missingAssertions;$/;"	m	struct:Catch::SectionStats
TestCaseStats	..\Catch2\extras\catch_amalgamated.hpp	/^    struct TestCaseStats {$/;"	s	namespace:Catch
testInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        TestCaseInfo const * testInfo;$/;"	m	struct:Catch::TestCaseStats
totals	..\Catch2\extras\catch_amalgamated.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestCaseStats
stdOut	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string stdOut;$/;"	m	struct:Catch::TestCaseStats
stdErr	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string stdErr;$/;"	m	struct:Catch::TestCaseStats
aborting	..\Catch2\extras\catch_amalgamated.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestCaseStats
TestGroupStats	..\Catch2\extras\catch_amalgamated.hpp	/^    struct TestGroupStats {$/;"	s	namespace:Catch
groupInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        GroupInfo groupInfo;$/;"	m	struct:Catch::TestGroupStats
totals	..\Catch2\extras\catch_amalgamated.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestGroupStats
aborting	..\Catch2\extras\catch_amalgamated.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestGroupStats
TestRunStats	..\Catch2\extras\catch_amalgamated.hpp	/^    struct TestRunStats {$/;"	s	namespace:Catch
runInfo	..\Catch2\extras\catch_amalgamated.hpp	/^        TestRunInfo runInfo;$/;"	m	struct:Catch::TestRunStats
totals	..\Catch2\extras\catch_amalgamated.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestRunStats
aborting	..\Catch2\extras\catch_amalgamated.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestRunStats
BenchmarkInfo	..\Catch2\extras\catch_amalgamated.hpp	/^    struct BenchmarkInfo {$/;"	s	namespace:Catch
name	..\Catch2\extras\catch_amalgamated.hpp	/^        std::string name;$/;"	m	struct:Catch::BenchmarkInfo
estimatedDuration	..\Catch2\extras\catch_amalgamated.hpp	/^        double estimatedDuration;$/;"	m	struct:Catch::BenchmarkInfo
iterations	..\Catch2\extras\catch_amalgamated.hpp	/^        int iterations;$/;"	m	struct:Catch::BenchmarkInfo
samples	..\Catch2\extras\catch_amalgamated.hpp	/^        int samples;$/;"	m	struct:Catch::BenchmarkInfo
resamples	..\Catch2\extras\catch_amalgamated.hpp	/^        unsigned int resamples;$/;"	m	struct:Catch::BenchmarkInfo
clockResolution	..\Catch2\extras\catch_amalgamated.hpp	/^        double clockResolution;$/;"	m	struct:Catch::BenchmarkInfo
clockCost	..\Catch2\extras\catch_amalgamated.hpp	/^        double clockCost;$/;"	m	struct:Catch::BenchmarkInfo
BenchmarkStats	..\Catch2\extras\catch_amalgamated.hpp	/^    struct BenchmarkStats {$/;"	s	namespace:Catch
info	..\Catch2\extras\catch_amalgamated.hpp	/^        BenchmarkInfo info;$/;"	m	struct:Catch::BenchmarkStats
samples	..\Catch2\extras\catch_amalgamated.hpp	/^        std::vector<Duration> samples;$/;"	m	struct:Catch::BenchmarkStats
mean	..\Catch2\extras\catch_amalgamated.hpp	/^        Benchmark::Estimate<Duration> mean;$/;"	m	struct:Catch::BenchmarkStats
standardDeviation	..\Catch2\extras\catch_amalgamated.hpp	/^        Benchmark::Estimate<Duration> standardDeviation;$/;"	m	struct:Catch::BenchmarkStats
outliers	..\Catch2\extras\catch_amalgamated.hpp	/^        Benchmark::OutlierClassification outliers;$/;"	m	struct:Catch::BenchmarkStats
outlierVariance	..\Catch2\extras\catch_amalgamated.hpp	/^        double outlierVariance;$/;"	m	struct:Catch::BenchmarkStats
operator BenchmarkStats<Duration2>	..\Catch2\extras\catch_amalgamated.hpp	/^        operator BenchmarkStats<Duration2>() const {$/;"	f	struct:Catch::BenchmarkStats
ReporterPreferences	..\Catch2\extras\catch_amalgamated.hpp	/^    struct ReporterPreferences {$/;"	s	namespace:Catch
shouldRedirectStdOut	..\Catch2\extras\catch_amalgamated.hpp	/^        bool shouldRedirectStdOut = false;$/;"	m	struct:Catch::ReporterPreferences
shouldReportAllAssertions	..\Catch2\extras\catch_amalgamated.hpp	/^        bool shouldReportAllAssertions = false;$/;"	m	struct:Catch::ReporterPreferences
IStreamingReporter	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IStreamingReporter {$/;"	s	namespace:Catch
m_preferences	..\Catch2\extras\catch_amalgamated.hpp	/^        ReporterPreferences m_preferences;$/;"	m	struct:Catch::IStreamingReporter
getPreferences	..\Catch2\extras\catch_amalgamated.hpp	/^        ReporterPreferences const& getPreferences() const {$/;"	f	struct:Catch::IStreamingReporter
reportInvalidArguments	..\Catch2\extras\catch_amalgamated.hpp	/^        virtual void reportInvalidArguments(std::string const&) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkPreparing	..\Catch2\extras\catch_amalgamated.hpp	/^        virtual void benchmarkPreparing( std::string const& ) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkStarting	..\Catch2\extras\catch_amalgamated.hpp	/^        virtual void benchmarkStarting( BenchmarkInfo const& ) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkEnded	..\Catch2\extras\catch_amalgamated.hpp	/^        virtual void benchmarkEnded( BenchmarkStats<> const& ) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkFailed	..\Catch2\extras\catch_amalgamated.hpp	/^        virtual void benchmarkFailed( std::string const& ) {}$/;"	f	struct:Catch::IStreamingReporter
CATCH_CHRONOMETER_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1526;"	d
CATCH_CLOCK_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1533;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
now	..\Catch2\extras\catch_amalgamated.hpp	/^        struct now {$/;"	s	namespace:Catch::Benchmark
operator ()	..\Catch2\extras\catch_amalgamated.hpp	/^            TimePoint<Clock> operator()() const {$/;"	f	struct:Catch::Benchmark::now
CATCH_OPTIMIZER_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1567;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
keep_memory	..\Catch2\extras\catch_amalgamated.hpp	/^        inline void keep_memory(T* p) {$/;"	f	namespace:Catch::Benchmark
keep_memory	..\Catch2\extras\catch_amalgamated.hpp	/^        inline void keep_memory() {$/;"	f	namespace:Catch::Benchmark
Detail	..\Catch2\extras\catch_amalgamated.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
optimizer_barrier	..\Catch2\extras\catch_amalgamated.hpp	/^            inline void optimizer_barrier() { keep_memory(); }$/;"	f	namespace:Catch::Benchmark::Detail
deoptimize_value	..\Catch2\extras\catch_amalgamated.hpp	/^        inline void deoptimize_value(T&& x) {$/;"	f	namespace:Catch::Benchmark
CATCH_COMPLETE_INVOKE_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1632;"	d
CATCH_ENFORCE_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1637;"	d
CATCH_STREAM_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1642;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
IStream	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IStream {$/;"	s	namespace:Catch
ReusableStringStream	..\Catch2\extras\catch_amalgamated.hpp	/^    class ReusableStringStream : Detail::NonCopyable {$/;"	c	namespace:Catch
m_index	..\Catch2\extras\catch_amalgamated.hpp	/^        std::size_t m_index;$/;"	m	class:Catch::ReusableStringStream
m_oss	..\Catch2\extras\catch_amalgamated.hpp	/^        std::ostream* m_oss;$/;"	m	class:Catch::ReusableStringStream
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
throw_exception	..\Catch2\extras\catch_amalgamated.hpp	/^    void throw_exception(Ex const& e) {$/;"	f	namespace:Catch
CATCH_MAKE_MSG	..\Catch2\extras\catch_amalgamated.hpp	1726;"	d
CATCH_INTERNAL_ERROR	..\Catch2\extras\catch_amalgamated.hpp	1729;"	d
CATCH_ERROR	..\Catch2\extras\catch_amalgamated.hpp	1732;"	d
CATCH_RUNTIME_ERROR	..\Catch2\extras\catch_amalgamated.hpp	1735;"	d
CATCH_ENFORCE	..\Catch2\extras\catch_amalgamated.hpp	1738;"	d
CATCH_META_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1746;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
always_false	..\Catch2\extras\catch_amalgamated.hpp	/^    struct always_false : std::false_type {};$/;"	s	namespace:Catch
true_given	..\Catch2\extras\catch_amalgamated.hpp	/^    template <typename> struct true_given : std::true_type {};$/;"	s	namespace:Catch
is_callable_tester	..\Catch2\extras\catch_amalgamated.hpp	/^    struct is_callable_tester {$/;"	s	namespace:Catch
is_callable	..\Catch2\extras\catch_amalgamated.hpp	/^    struct is_callable<Fun(Args...)> : decltype(is_callable_tester::test<Fun, Args...>(0)) {};$/;"	s	namespace:Catch
mpl_	..\Catch2\extras\catch_amalgamated.hpp	/^namespace mpl_{$/;"	n
CATCH_INTERFACES_REGISTRY_HUB_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1789;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
IRegistryHub	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IRegistryHub {$/;"	s	namespace:Catch
IMutableRegistryHub	..\Catch2\extras\catch_amalgamated.hpp	/^    struct IMutableRegistryHub {$/;"	s	namespace:Catch
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^        virtual void registerStartupException() noexcept = 0;$/;"	m	struct:Catch::IMutableRegistryHub
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\extras\catch_amalgamated.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
CompleteType	..\Catch2\extras\catch_amalgamated.hpp	/^            struct CompleteType { using type = T; };$/;"	s	namespace:Catch::Benchmark::Detail
CompleteType	..\Catch2\extras\catch_amalgamated.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	namespace:Catch::Benchmark::Detail
type	..\Catch2\extras\catch_amalgamated.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	struct:Catch::Benchmark::Detail::CompleteType
CompleteInvoker	..\Catch2\extras\catch_amalgamated.hpp	/^            struct CompleteInvoker {$/;"	s	namespace:Catch::Benchmark::Detail
invoke	..\Catch2\extras\catch_amalgamated.hpp	/^                static Result invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker
CompleteInvoker	..\Catch2\extras\catch_amalgamated.hpp	/^            struct CompleteInvoker<void> {$/;"	s	namespace:Catch::Benchmark::Detail
invoke	..\Catch2\extras\catch_amalgamated.hpp	/^                static CompleteType_t<void> invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker
complete_invoke	..\Catch2\extras\catch_amalgamated.hpp	/^            CompleteType_t<FunctionReturnType<Fun, Args...>> complete_invoke(Fun&& fun, Args&&... args) {$/;"	f	namespace:Catch::Benchmark::Detail
user_code	..\Catch2\extras\catch_amalgamated.hpp	/^        Detail::CompleteType_t<FunctionReturnType<Fun>> user_code(Fun&& fun) {$/;"	f	namespace:Catch::Benchmark
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\extras\catch_amalgamated.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
ChronometerConcept	..\Catch2\extras\catch_amalgamated.hpp	/^            struct ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
final	..\Catch2\extras\catch_amalgamated.hpp	/^            struct ChronometerModel final : public ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
elapsed	..\Catch2\extras\catch_amalgamated.hpp	/^                ClockDuration<Clock> elapsed() const { return finished - started; }$/;"	f	struct:Catch::Benchmark::Detail::final
started	..\Catch2\extras\catch_amalgamated.hpp	/^                TimePoint<Clock> started;$/;"	m	struct:Catch::Benchmark::Detail::final
finished	..\Catch2\extras\catch_amalgamated.hpp	/^                TimePoint<Clock> finished;$/;"	m	struct:Catch::Benchmark::Detail::final
Chronometer	..\Catch2\extras\catch_amalgamated.hpp	/^        struct Chronometer {$/;"	s	namespace:Catch::Benchmark
measure	..\Catch2\extras\catch_amalgamated.hpp	/^            void measure(Fun&& fun) { measure(std::forward<Fun>(fun), is_callable<Fun(int)>()); }$/;"	f	struct:Catch::Benchmark::Chronometer
runs	..\Catch2\extras\catch_amalgamated.hpp	/^            int runs() const { return repeats; }$/;"	f	struct:Catch::Benchmark::Chronometer
Chronometer	..\Catch2\extras\catch_amalgamated.hpp	/^            Chronometer(Detail::ChronometerConcept& meter, int repeats_)$/;"	f	struct:Catch::Benchmark::Chronometer
measure	..\Catch2\extras\catch_amalgamated.hpp	/^            void measure(Fun&& fun, std::false_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
measure	..\Catch2\extras\catch_amalgamated.hpp	/^            void measure(Fun&& fun, std::true_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
impl	..\Catch2\extras\catch_amalgamated.hpp	/^            Detail::ChronometerConcept* impl;$/;"	m	struct:Catch::Benchmark::Chronometer
repeats	..\Catch2\extras\catch_amalgamated.hpp	/^            int repeats;$/;"	m	struct:Catch::Benchmark::Chronometer
CATCH_ENVIRONMENT_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1959;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
EnvironmentEstimate	..\Catch2\extras\catch_amalgamated.hpp	/^        struct EnvironmentEstimate {$/;"	s	namespace:Catch::Benchmark
mean	..\Catch2\extras\catch_amalgamated.hpp	/^            Duration mean;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
outliers	..\Catch2\extras\catch_amalgamated.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
operator EnvironmentEstimate<Duration2>	..\Catch2\extras\catch_amalgamated.hpp	/^            operator EnvironmentEstimate<Duration2>() const {$/;"	f	struct:Catch::Benchmark::EnvironmentEstimate
Environment	..\Catch2\extras\catch_amalgamated.hpp	/^        struct Environment {$/;"	s	namespace:Catch::Benchmark
clock_cost	..\Catch2\extras\catch_amalgamated.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> clock_cost;$/;"	m	struct:Catch::Benchmark::Environment
CATCH_EXECUTION_PLAN_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1989;"	d
CATCH_BENCHMARK_FUNCTION_HPP_INCLUDED	..\Catch2\extras\catch_amalgamated.hpp	1996;"	d
Catch	..\Catch2\extras\catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\extras\catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\extras\catch_amalgamated.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
is_related	..\Catch2\extras\catch_amalgamated.hpp	/^            struct is_related$/;"	s	namespace:Catch::Benchmark::Detail
BenchmarkFunction	..\Catch2\extras\catch_amalgamated.hpp	/^            struct BenchmarkFunction {$/;"	s	namespace:Catch::Benchmark::Detail
callable	..\Catch2\extras\catch_amalgamated.hpp	/^                struct callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
model	..\Catch2\extras\catch_amalgamated.hpp	/^                struct model : public callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
model	..\Catch2\extras\catch_amalgamated.hpp	/^                    model(Fun&& fun_) : fun(std::move(fun_)) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	..\Catch2\extras\catch_amalgamated.hpp	/^                    model(Fun const& fun_) : fun(fun_) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call	..\Catch2\extras\catch_amalgamated.hpp	/^                    void call(Chronometer meter, std::true_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call	..\Catch2\extras\catch_amalgamated.hpp	/^                    void call(Chronometer meter, std::false_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
fun	..\Catch2\extras\catch_amalgamated.hpp	/^                    Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
do_nothing	..\Catch2\extras\catch_amalgamated.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
operator ()	..\Catch2\extras\catch_amalgamated.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::do_nothing
BenchmarkFunction	..\Catch2\extras\catch_amalgamated.hpp	/^                BenchmarkFunction(model<T>* c) : f(c) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	..\Catch2\extras\catch_amalgamated.hpp	/^                BenchmarkFunction()$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	..\Catch2\extras\catch_amalgamated.hpp	/^                    BenchmarkFunction(Fun&& fun)$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
noexcept	..\Catch2\extras\catch_amalgamated.hpp	/^                BenchmarkFunction( BenchmarkFunction&& that ) noexcept:$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction
operator =	..\Catch2\extras\catch_amalgamated.hpp	/^                BenchmarkFunction& operator=(BenchmarkFunction const& that) {$/;"	f	namespace:Catch::Benchmark::Detail
operator ()	..\Catch2\extras\catch_amalgamated.hpp	/^                void operator()(Chronometer meter) const { f->call(meter); }$/;"	f	namespace:Catch::Benchmark::Detail
f	..\Catch2\extras\catch_amalgamated.hpp	/^                Catch::Detail::unique_ptr<callable> f;$/;"	v
LLVMFuzzerTestOneInput	..\Catch2\fuzzing\fuzz_TestSpecParser.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
split	..\Catch2\fuzzing\fuzz_textflow.cpp	/^void split(const char *Data, size_t Size, Callback callback) {$/;"	f
LLVMFuzzerTestOneInput	..\Catch2\fuzzing\fuzz_textflow.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	..\Catch2\fuzzing\fuzz_XmlWriter.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
avoidOutOfLineVirtualCompilerWarning	..\Catch2\fuzzing\NullOStream.cpp	/^void NullOStream::avoidOutOfLineVirtualCompilerWarning()$/;"	f	class:NullOStream
overflow	..\Catch2\fuzzing\NullOStream.cpp	/^int NullStreambuf::overflow(int c){$/;"	f	class:NullStreambuf
NullStreambuf	..\Catch2\fuzzing\NullOStream.h	/^class NullStreambuf : public std::streambuf {$/;"	c
dummyBuffer	..\Catch2\fuzzing\NullOStream.h	/^  char dummyBuffer[64];$/;"	m	class:NullStreambuf
final	..\Catch2\fuzzing\NullOStream.h	/^  virtual int overflow(int c) override final;$/;"	m	class:NullStreambuf
final	..\Catch2\fuzzing\NullOStream.h	/^class NullOStream final : private NullStreambuf, public std::ostream {$/;"	c
NullOStream	..\Catch2\fuzzing\NullOStream.h	/^  NullOStream() : std::ostream(this) {}$/;"	f	class:final
rdbuf	..\Catch2\fuzzing\NullOStream.h	/^  NullStreambuf *rdbuf() { return this; }$/;"	f	class:final
CATCH_BENCHMARK_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^        struct Benchmark {$/;"	s	namespace:Catch::Benchmark
Benchmark	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^            Benchmark(std::string&& benchmarkName)$/;"	f	struct:Catch::Benchmark::Benchmark
Benchmark	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^            Benchmark(std::string&& benchmarkName , FUN &&func)$/;"	f	struct:Catch::Benchmark::Benchmark
prepare	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^            ExecutionPlan<FloatDuration<Clock>> prepare(const IConfig &cfg, Environment<FloatDuration<Clock>> env) const {$/;"	f	struct:Catch::Benchmark::Benchmark
run	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^            void run() {$/;"	f	struct:Catch::Benchmark::Benchmark
operator =	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^                Benchmark & operator=(Fun func) {$/;"	f	struct:Catch::Benchmark::Benchmark
operator bool	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^            explicit operator bool() {$/;"	f	struct:Catch::Benchmark::Benchmark
fun	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^            Detail::BenchmarkFunction fun;$/;"	m	struct:Catch::Benchmark::Benchmark
name	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	/^            std::string name;$/;"	m	struct:Catch::Benchmark::Benchmark
INTERNAL_CATCH_GET_1_ARG	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	111;"	d
INTERNAL_CATCH_GET_2_ARG	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	112;"	d
INTERNAL_CATCH_BENCHMARK	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	114;"	d
INTERNAL_CATCH_BENCHMARK_ADVANCED	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	118;"	d
CATCH_BENCHMARK	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	124;"	d
CATCH_BENCHMARK_ADVANCED	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	126;"	d
BENCHMARK	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	131;"	d
BENCHMARK_ADVANCED	..\Catch2\src\catch2\benchmark\catch_benchmark.hpp	133;"	d
CATCH_BENCHMARK_ALL_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_benchmark_all.hpp	22;"	d
CATCH_CHRONOMETER_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
ChronometerConcept	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            struct ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
final	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            struct ChronometerModel final : public ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
elapsed	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^                ClockDuration<Clock> elapsed() const { return finished - started; }$/;"	f	struct:Catch::Benchmark::Detail::final
started	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^                TimePoint<Clock> started;$/;"	m	struct:Catch::Benchmark::Detail::final
finished	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^                TimePoint<Clock> finished;$/;"	m	struct:Catch::Benchmark::Detail::final
Chronometer	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^        struct Chronometer {$/;"	s	namespace:Catch::Benchmark
measure	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            void measure(Fun&& fun) { measure(std::forward<Fun>(fun), is_callable<Fun(int)>()); }$/;"	f	struct:Catch::Benchmark::Chronometer
runs	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            int runs() const { return repeats; }$/;"	f	struct:Catch::Benchmark::Chronometer
Chronometer	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            Chronometer(Detail::ChronometerConcept& meter, int repeats_)$/;"	f	struct:Catch::Benchmark::Chronometer
measure	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            void measure(Fun&& fun, std::false_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
measure	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            void measure(Fun&& fun, std::true_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
impl	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            Detail::ChronometerConcept* impl;$/;"	m	struct:Catch::Benchmark::Chronometer
repeats	..\Catch2\src\catch2\benchmark\catch_chronometer.hpp	/^            int repeats;$/;"	m	struct:Catch::Benchmark::Chronometer
CATCH_CLOCK_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_clock.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_clock.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_clock.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
now	..\Catch2\src\catch2\benchmark\catch_clock.hpp	/^        struct now {$/;"	s	namespace:Catch::Benchmark
operator ()	..\Catch2\src\catch2\benchmark\catch_clock.hpp	/^            TimePoint<Clock> operator()() const {$/;"	f	struct:Catch::Benchmark::now
CATCH_CONSTRUCTOR_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
ObjectStorage	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^            struct ObjectStorage$/;"	s	namespace:Catch::Benchmark::Detail
ObjectStorage	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                ObjectStorage() : data() {}$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
ObjectStorage	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                ObjectStorage(const ObjectStorage& other)$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
ObjectStorage	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                ObjectStorage(ObjectStorage&& other)$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
~ObjectStorage	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                ~ObjectStorage() { destruct_on_exit<T>(); }$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
construct	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                void construct(Args&&... args)$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
destruct	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                typename std::enable_if<AllowManualDestruction>::type destruct()$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
destruct_on_exit	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                void destruct_on_exit(typename std::enable_if<Destruct, U>::type* = 0) { destruct<true>(); }$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
destruct_on_exit	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                void destruct_on_exit(typename std::enable_if<!Destruct, U>::type* = 0) { }$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
stored_object	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                T& stored_object() {$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
stored_object	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                T const& stored_object() const {$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
data	..\Catch2\src\catch2\benchmark\catch_constructor.hpp	/^                TStorage data;$/;"	m	struct:Catch::Benchmark::Detail::ObjectStorage
CATCH_ENVIRONMENT_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_environment.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
EnvironmentEstimate	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^        struct EnvironmentEstimate {$/;"	s	namespace:Catch::Benchmark
mean	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^            Duration mean;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
outliers	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
operator EnvironmentEstimate<Duration2>	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^            operator EnvironmentEstimate<Duration2>() const {$/;"	f	struct:Catch::Benchmark::EnvironmentEstimate
Environment	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^        struct Environment {$/;"	s	namespace:Catch::Benchmark
clock_cost	..\Catch2\src\catch2\benchmark\catch_environment.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> clock_cost;$/;"	m	struct:Catch::Benchmark::Environment
CATCH_ESTIMATE_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Estimate	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^        struct Estimate {$/;"	s	namespace:Catch::Benchmark
point	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^            Duration point;$/;"	m	struct:Catch::Benchmark::Estimate
lower_bound	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^            Duration lower_bound;$/;"	m	struct:Catch::Benchmark::Estimate
upper_bound	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^            Duration upper_bound;$/;"	m	struct:Catch::Benchmark::Estimate
confidence_interval	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^            double confidence_interval;$/;"	m	struct:Catch::Benchmark::Estimate
operator Estimate<Duration2>	..\Catch2\src\catch2\benchmark\catch_estimate.hpp	/^            operator Estimate<Duration2>() const {$/;"	f	struct:Catch::Benchmark::Estimate
CATCH_EXECUTION_PLAN_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
ExecutionPlan	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^        struct ExecutionPlan {$/;"	s	namespace:Catch::Benchmark
iterations_per_sample	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^            int iterations_per_sample;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
estimated_duration	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^            Duration estimated_duration;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
benchmark	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^            Detail::BenchmarkFunction benchmark;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
warmup_time	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^            Duration warmup_time;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
warmup_iterations	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^            int warmup_iterations;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
operator ExecutionPlan<Duration2>	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^            operator ExecutionPlan<Duration2>() const {$/;"	f	struct:Catch::Benchmark::ExecutionPlan
run	..\Catch2\src\catch2\benchmark\catch_execution_plan.hpp	/^            std::vector<FloatDuration<Clock>> run(const IConfig &cfg, Environment<FloatDuration<Clock>> env) const {$/;"	f	struct:Catch::Benchmark::ExecutionPlan
CATCH_OPTIMIZER_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
keep_memory	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	/^        inline void keep_memory(T* p) {$/;"	f	namespace:Catch::Benchmark
keep_memory	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	/^        inline void keep_memory() {$/;"	f	namespace:Catch::Benchmark
Detail	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
optimizer_barrier	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	/^            inline void optimizer_barrier() { keep_memory(); }$/;"	f	namespace:Catch::Benchmark::Detail
deoptimize_value	..\Catch2\src\catch2\benchmark\catch_optimizer.hpp	/^        inline void deoptimize_value(T&& x) {$/;"	f	namespace:Catch::Benchmark
CATCH_OUTLIER_CLASSIFICATION_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
OutlierClassification	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^        struct OutlierClassification {$/;"	s	namespace:Catch::Benchmark
samples_seen	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^            int samples_seen = 0;$/;"	m	struct:Catch::Benchmark::OutlierClassification
low_severe	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^            int low_severe = 0;     \/\/ more than 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
low_mild	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^            int low_mild = 0;       \/\/ 1.5 to 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
high_mild	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^            int high_mild = 0;      \/\/ 1.5 to 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
high_severe	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^            int high_severe = 0;    \/\/ more than 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
total	..\Catch2\src\catch2\benchmark\catch_outlier_classification.hpp	/^            int total() const {$/;"	f	struct:Catch::Benchmark::OutlierClassification
CATCH_SAMPLE_ANALYSIS_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
SampleAnalysis	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^        struct SampleAnalysis {$/;"	s	namespace:Catch::Benchmark
samples	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^            std::vector<Duration> samples;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
mean	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^            Estimate<Duration> mean;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
standard_deviation	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^            Estimate<Duration> standard_deviation;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
outliers	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
outlier_variance	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^            double outlier_variance;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
operator SampleAnalysis<Duration2>	..\Catch2\src\catch2\benchmark\catch_sample_analysis.hpp	/^            operator SampleAnalysis<Duration2>() const {$/;"	f	struct:Catch::Benchmark::SampleAnalysis
CATCH_ANALYSE_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_analyse.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_analyse.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_analyse.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_analyse.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
analyse	..\Catch2\src\catch2\benchmark\detail\catch_analyse.hpp	/^            SampleAnalysis<Duration> analyse(const IConfig &cfg, Environment<Duration>, Iterator first, Iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
CATCH_BENCHMARK_FUNCTION_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
is_related	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^            struct is_related$/;"	s	namespace:Catch::Benchmark::Detail
BenchmarkFunction	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^            struct BenchmarkFunction {$/;"	s	namespace:Catch::Benchmark::Detail
callable	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                struct callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
model	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                struct model : public callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
model	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                    model(Fun&& fun_) : fun(std::move(fun_)) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                    model(Fun const& fun_) : fun(fun_) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                    void call(Chronometer meter, std::true_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                    void call(Chronometer meter, std::false_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
fun	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                    Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
do_nothing	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
operator ()	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::do_nothing
BenchmarkFunction	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                BenchmarkFunction(model<T>* c) : f(c) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                BenchmarkFunction()$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                    BenchmarkFunction(Fun&& fun)$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
noexcept	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                BenchmarkFunction( BenchmarkFunction&& that ) noexcept:$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction
operator =	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                BenchmarkFunction& operator=(BenchmarkFunction const& that) {$/;"	f	namespace:Catch::Benchmark::Detail
operator ()	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                void operator()(Chronometer meter) const { f->call(meter); }$/;"	f	namespace:Catch::Benchmark::Detail
f	..\Catch2\src\catch2\benchmark\detail\catch_benchmark_function.hpp	/^                Catch::Detail::unique_ptr<callable> f;$/;"	v
CATCH_COMPLETE_INVOKE_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
CompleteType	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^            struct CompleteType { using type = T; };$/;"	s	namespace:Catch::Benchmark::Detail
CompleteType	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	namespace:Catch::Benchmark::Detail
type	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	struct:Catch::Benchmark::Detail::CompleteType
CompleteInvoker	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^            struct CompleteInvoker {$/;"	s	namespace:Catch::Benchmark::Detail
invoke	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^                static Result invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker
CompleteInvoker	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^            struct CompleteInvoker<void> {$/;"	s	namespace:Catch::Benchmark::Detail
invoke	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^                static CompleteType_t<void> invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker
complete_invoke	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^            CompleteType_t<FunctionReturnType<Fun, Args...>> complete_invoke(Fun&& fun, Args&&... args) {$/;"	f	namespace:Catch::Benchmark::Detail
user_code	..\Catch2\src\catch2\benchmark\detail\catch_complete_invoke.hpp	/^        Detail::CompleteType_t<FunctionReturnType<Fun>> user_code(Fun&& fun) {$/;"	f	namespace:Catch::Benchmark
CATCH_ESTIMATE_CLOCK_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
resolution	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            std::vector<double> resolution(int k) {$/;"	f	namespace:Catch::Benchmark::Detail
warmup_iterations	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto warmup_iterations = 10000;$/;"	v
warmup_time	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto warmup_time = std::chrono::milliseconds(100);$/;"	v
minimum_ticks	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto minimum_ticks = 1000;$/;"	v
warmup_seed	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto warmup_seed = 10000;$/;"	v
clock_resolution_estimation_time	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto clock_resolution_estimation_time = std::chrono::milliseconds(500);$/;"	v
clock_cost_estimation_time_limit	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_time_limit = std::chrono::seconds(1);$/;"	v
clock_cost_estimation_tick_limit	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_tick_limit = 100000;$/;"	v
clock_cost_estimation_time	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_time = std::chrono::milliseconds(10);$/;"	v
clock_cost_estimation_iterations	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            const auto clock_cost_estimation_iterations = 10000;$/;"	v
warmup	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            int warmup() {$/;"	f	namespace:Catch::Benchmark::Detail
estimate_clock_resolution	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> estimate_clock_resolution(int iterations) {$/;"	f	namespace:Catch::Benchmark::Detail
estimate_clock_cost	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            EnvironmentEstimate<FloatDuration<Clock>> estimate_clock_cost(FloatDuration<Clock> resolution) {$/;"	f	namespace:Catch::Benchmark::Detail
measure_environment	..\Catch2\src\catch2\benchmark\detail\catch_estimate_clock.hpp	/^            Environment<FloatDuration<Clock>> measure_environment() {$/;"	f	namespace:Catch::Benchmark::Detail
CATCH_MEASURE_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_measure.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_measure.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_measure.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_measure.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
measure	..\Catch2\src\catch2\benchmark\detail\catch_measure.hpp	/^            TimingOf<Clock, Fun, Args...> measure(Fun&& fun, Args&&... args) {$/;"	f	namespace:Catch::Benchmark::Detail
CATCH_REPEAT_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
repeater	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	/^            struct repeater {$/;"	s	namespace:Catch::Benchmark::Detail
operator ()	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	/^                void operator()(int k) const {$/;"	f	struct:Catch::Benchmark::Detail::repeater
fun	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	/^                Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::repeater
repeat	..\Catch2\src\catch2\benchmark\detail\catch_repeat.hpp	/^            repeater<typename std::decay<Fun>::type> repeat(Fun&& fun) {$/;"	f	namespace:Catch::Benchmark::Detail
CATCH_RUN_FOR_AT_LEAST_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_run_for_at_least.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_run_for_at_least.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_run_for_at_least.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_run_for_at_least.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
measure_one	..\Catch2\src\catch2\benchmark\detail\catch_run_for_at_least.hpp	/^            TimingOf<Clock, Fun, int> measure_one(Fun&& fun, int iters, std::false_type) {$/;"	f	namespace:Catch::Benchmark::Detail
measure_one	..\Catch2\src\catch2\benchmark\detail\catch_run_for_at_least.hpp	/^            TimingOf<Clock, Fun, Chronometer> measure_one(Fun&& fun, int iters, std::true_type) {$/;"	f	namespace:Catch::Benchmark::Detail
run_for_at_least	..\Catch2\src\catch2\benchmark\detail\catch_run_for_at_least.hpp	/^            TimingOf<Clock, Fun, run_for_at_least_argument_t<Clock, Fun>> run_for_at_least(ClockDuration<Clock> how_long, int seed, Fun&& fun) {$/;"	f	namespace:Catch::Benchmark::Detail
resample	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^     sample resample(URng& rng, int resamples, std::vector<double>::iterator first, std::vector<double>::iterator last, Estimator& estimator) {$/;"	f	namespace:__anon33
erf_inv	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^    double erf_inv(double x) {$/;"	f	namespace:__anon33
standard_deviation	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^    double standard_deviation(std::vector<double>::iterator first, std::vector<double>::iterator last) {$/;"	f	namespace:__anon33
Catch	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
weighted_average_quantile	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^            double weighted_average_quantile(int k, int q, std::vector<double>::iterator first, std::vector<double>::iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
erfc_inv	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^            double erfc_inv(double x) {$/;"	f	namespace:Catch::Benchmark::Detail
normal_quantile	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^            double normal_quantile(double p) {$/;"	f	namespace:Catch::Benchmark::Detail
outlier_variance	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^            double outlier_variance(Estimate<double> mean, Estimate<double> stddev, int n) {$/;"	f	namespace:Catch::Benchmark::Detail
analyse_samples	..\Catch2\src\catch2\benchmark\detail\catch_stats.cpp	/^            bootstrap_analysis analyse_samples(double confidence_level, int n_resamples, std::vector<double>::iterator first, std::vector<double>::iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
CATCH_STATS_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
classify_outliers	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^            OutlierClassification classify_outliers(Iterator first, Iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
mean	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^            double mean(Iterator first, Iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
jackknife	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^            sample jackknife(Estimator&& estimator, Iterator first, Iterator last) {$/;"	f	namespace:Catch::Benchmark::Detail
normal_cdf	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^            inline double normal_cdf(double x) {$/;"	f	namespace:Catch::Benchmark::Detail
bootstrap	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^            Estimate<double> bootstrap(double confidence_level, Iterator first, Iterator last, sample const& resample, Estimator&& estimator) {$/;"	f	namespace:Catch::Benchmark::Detail
bootstrap_analysis	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^            struct bootstrap_analysis {$/;"	s	namespace:Catch::Benchmark::Detail
mean	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^                Estimate<double> mean;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis
standard_deviation	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^                Estimate<double> standard_deviation;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis
outlier_variance	..\Catch2\src\catch2\benchmark\detail\catch_stats.hpp	/^                double outlier_variance;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis
CATCH_TIMING_HPP_INCLUDED	..\Catch2\src\catch2\benchmark\detail\catch_timing.hpp	11;"	d
Catch	..\Catch2\src\catch2\benchmark\detail\catch_timing.hpp	/^namespace Catch {$/;"	n
Benchmark	..\Catch2\src\catch2\benchmark\detail\catch_timing.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Timing	..\Catch2\src\catch2\benchmark\detail\catch_timing.hpp	/^        struct Timing {$/;"	s	namespace:Catch::Benchmark
elapsed	..\Catch2\src\catch2\benchmark\detail\catch_timing.hpp	/^            Duration elapsed;$/;"	m	struct:Catch::Benchmark::Timing
result	..\Catch2\src\catch2\benchmark\detail\catch_timing.hpp	/^            Result result;$/;"	m	struct:Catch::Benchmark::Timing
iterations	..\Catch2\src\catch2\benchmark\detail\catch_timing.hpp	/^            int iterations;$/;"	m	struct:Catch::Benchmark::Timing
Catch	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Catch	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Catch	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
benchmarkErrorMsg	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^            const std::string benchmarkErrorMsg = "a benchmark failed to run successfully";$/;"	v
Catch	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Benchmark	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
optimized_away_error	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^            struct optimized_away_error : std::exception {$/;"	s	namespace:Catch::Benchmark::Detail	file:
override	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^                const char* what() const noexcept override;$/;"	m	struct:Catch::Benchmark::Detail::optimized_away_error	file:
throw_optimized_away_error	..\Catch2\src\catch2\benchmark\internal\catch_benchmark_combined_tu.cpp	/^            void throw_optimized_away_error() {$/;"	f	namespace:Catch::Benchmark::Detail
CATCH_ALL_HPP_INCLUDED	..\Catch2\src\catch2\catch_all.hpp	23;"	d
marginComparison	..\Catch2\src\catch2\catch_approx.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:__anon34
Catch	..\Catch2\src\catch2\catch_approx.cpp	/^namespace Catch {$/;"	n	file:
Approx	..\Catch2\src\catch2\catch_approx.cpp	/^    Approx::Approx ( double value )$/;"	f	class:Catch::Approx
custom	..\Catch2\src\catch2\catch_approx.cpp	/^    Approx Approx::custom() {$/;"	f	class:Catch::Approx
operator -	..\Catch2\src\catch2\catch_approx.cpp	/^    Approx Approx::operator-() const {$/;"	f	class:Catch::Approx
toString	..\Catch2\src\catch2\catch_approx.cpp	/^    std::string Approx::toString() const {$/;"	f	class:Catch::Approx
equalityComparisonImpl	..\Catch2\src\catch2\catch_approx.cpp	/^    bool Approx::equalityComparisonImpl(const double other) const {$/;"	f	class:Catch::Approx
setMargin	..\Catch2\src\catch2\catch_approx.cpp	/^    void Approx::setMargin(double newMargin) {$/;"	f	class:Catch::Approx
setEpsilon	..\Catch2\src\catch2\catch_approx.cpp	/^    void Approx::setEpsilon(double newEpsilon) {$/;"	f	class:Catch::Approx
literals	..\Catch2\src\catch2\catch_approx.cpp	/^namespace literals {$/;"	n	namespace:Catch	file:
_a	..\Catch2\src\catch2\catch_approx.cpp	/^    Approx operator "" _a(long double val) {$/;"	f	namespace:Catch::literals
_a	..\Catch2\src\catch2\catch_approx.cpp	/^    Approx operator "" _a(unsigned long long val) {$/;"	f	namespace:Catch::literals
convert	..\Catch2\src\catch2\catch_approx.cpp	/^std::string StringMaker<Catch::Approx>::convert(Catch::Approx const& value) {$/;"	f	class:Catch::StringMaker
CATCH_APPROX_HPP_INCLUDED	..\Catch2\src\catch2\catch_approx.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_approx.hpp	/^namespace Catch {$/;"	n
Approx	..\Catch2\src\catch2\catch_approx.hpp	/^    class Approx {$/;"	c	namespace:Catch
operator ()	..\Catch2\src\catch2\catch_approx.hpp	/^        Approx operator()( T const& value ) {$/;"	f	class:Catch::Approx
Approx	..\Catch2\src\catch2\catch_approx.hpp	/^        explicit Approx( T const& value ): Approx(static_cast<double>(value))$/;"	f	class:Catch::Approx
operator ==	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator == ( const T& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator ==	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator == ( Approx const& lhs, const T& rhs ) {$/;"	f	class:Catch::Approx
operator !=	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator != ( T const& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator !=	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator != ( Approx const& lhs, T const& rhs ) {$/;"	f	class:Catch::Approx
operator <=	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator <= ( T const& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator <=	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator <= ( Approx const& lhs, T const& rhs ) {$/;"	f	class:Catch::Approx
operator >=	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator >= ( T const& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator >=	..\Catch2\src\catch2\catch_approx.hpp	/^        friend bool operator >= ( Approx const& lhs, T const& rhs ) {$/;"	f	class:Catch::Approx
epsilon	..\Catch2\src\catch2\catch_approx.hpp	/^        Approx& epsilon( T const& newEpsilon ) {$/;"	f	class:Catch::Approx
margin	..\Catch2\src\catch2\catch_approx.hpp	/^        Approx& margin( T const& newMargin ) {$/;"	f	class:Catch::Approx
scale	..\Catch2\src\catch2\catch_approx.hpp	/^        Approx& scale( T const& newScale ) {$/;"	f	class:Catch::Approx
m_epsilon	..\Catch2\src\catch2\catch_approx.hpp	/^        double m_epsilon;$/;"	m	class:Catch::Approx
m_margin	..\Catch2\src\catch2\catch_approx.hpp	/^        double m_margin;$/;"	m	class:Catch::Approx
m_scale	..\Catch2\src\catch2\catch_approx.hpp	/^        double m_scale;$/;"	m	class:Catch::Approx
m_value	..\Catch2\src\catch2\catch_approx.hpp	/^        double m_value;$/;"	m	class:Catch::Approx
literals	..\Catch2\src\catch2\catch_approx.hpp	/^namespace literals {$/;"	n	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_approx.hpp	/^struct StringMaker<Catch::Approx> {$/;"	s	namespace:Catch
CATCH_ASSERTION_INFO_HPP_INCLUDED	..\Catch2\src\catch2\catch_assertion_info.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_assertion_info.hpp	/^namespace Catch {$/;"	n
AssertionInfo	..\Catch2\src\catch2\catch_assertion_info.hpp	/^    struct AssertionInfo {$/;"	s	namespace:Catch
macroName	..\Catch2\src\catch2\catch_assertion_info.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::AssertionInfo
lineInfo	..\Catch2\src\catch2\catch_assertion_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
capturedExpression	..\Catch2\src\catch2\catch_assertion_info.hpp	/^        StringRef capturedExpression;$/;"	m	struct:Catch::AssertionInfo
resultDisposition	..\Catch2\src\catch2\catch_assertion_info.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
Catch	..\Catch2\src\catch2\catch_assertion_result.cpp	/^namespace Catch {$/;"	n	file:
AssertionResultData	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    AssertionResultData::AssertionResultData(ResultWas::OfType _resultType, LazyExpression const & _lazyExpression):$/;"	f	class:Catch::AssertionResultData
reconstructExpression	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    std::string AssertionResultData::reconstructExpression() const {$/;"	f	class:Catch::AssertionResultData
AssertionResult	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    AssertionResult::AssertionResult( AssertionInfo const& info, AssertionResultData const& data )$/;"	f	class:Catch::AssertionResult
succeeded	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    bool AssertionResult::succeeded() const {$/;"	f	class:Catch::AssertionResult
isOk	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    bool AssertionResult::isOk() const {$/;"	f	class:Catch::AssertionResult
getResultType	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    ResultWas::OfType AssertionResult::getResultType() const {$/;"	f	class:Catch::AssertionResult
hasExpression	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    bool AssertionResult::hasExpression() const {$/;"	f	class:Catch::AssertionResult
hasMessage	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    bool AssertionResult::hasMessage() const {$/;"	f	class:Catch::AssertionResult
getExpression	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    std::string AssertionResult::getExpression() const {$/;"	f	class:Catch::AssertionResult
getExpressionInMacro	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    std::string AssertionResult::getExpressionInMacro() const {$/;"	f	class:Catch::AssertionResult
hasExpandedExpression	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    bool AssertionResult::hasExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
getExpandedExpression	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    std::string AssertionResult::getExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
getMessage	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    std::string AssertionResult::getMessage() const {$/;"	f	class:Catch::AssertionResult
getSourceInfo	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    SourceLineInfo AssertionResult::getSourceInfo() const {$/;"	f	class:Catch::AssertionResult
getTestMacroName	..\Catch2\src\catch2\catch_assertion_result.cpp	/^    StringRef AssertionResult::getTestMacroName() const {$/;"	f	class:Catch::AssertionResult
CATCH_ASSERTION_RESULT_HPP_INCLUDED	..\Catch2\src\catch2\catch_assertion_result.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_assertion_result.hpp	/^namespace Catch {$/;"	n
AssertionResultData	..\Catch2\src\catch2\catch_assertion_result.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
message	..\Catch2\src\catch2\catch_assertion_result.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
reconstructedExpression	..\Catch2\src\catch2\catch_assertion_result.hpp	/^        mutable std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
lazyExpression	..\Catch2\src\catch2\catch_assertion_result.hpp	/^        LazyExpression lazyExpression;$/;"	m	struct:Catch::AssertionResultData
resultType	..\Catch2\src\catch2\catch_assertion_result.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
AssertionResult	..\Catch2\src\catch2\catch_assertion_result.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
m_info	..\Catch2\src\catch2\catch_assertion_result.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_resultData	..\Catch2\src\catch2\catch_assertion_result.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
Catch	..\Catch2\src\catch2\catch_config.cpp	/^namespace Catch {$/;"	n	file:
Config	..\Catch2\src\catch2\catch_config.cpp	/^    Config::Config( ConfigData const& data )$/;"	f	class:Catch::Config
getFilename	..\Catch2\src\catch2\catch_config.cpp	/^    std::string const& Config::getFilename() const {$/;"	f	class:Catch::std::Config
listTests	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::listTests() const          { return m_data.listTests; }$/;"	f	class:Catch::Config
listTags	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::listTags() const           { return m_data.listTags; }$/;"	f	class:Catch::Config
listReporters	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::listReporters() const      { return m_data.listReporters; }$/;"	f	class:Catch::Config
getProcessName	..\Catch2\src\catch2\catch_config.cpp	/^    std::string Config::getProcessName() const { return m_data.processName; }$/;"	f	class:Catch::Config
getReporterName	..\Catch2\src\catch2\catch_config.cpp	/^    std::string const& Config::getReporterName() const { return m_data.reporterName; }$/;"	f	class:Catch::std::Config
getTestsOrTags	..\Catch2\src\catch2\catch_config.cpp	/^    std::vector<std::string> const& Config::getTestsOrTags() const { return m_data.testsOrTags; }$/;"	f	class:Catch::std::Config
getSectionsToRun	..\Catch2\src\catch2\catch_config.cpp	/^    std::vector<std::string> const& Config::getSectionsToRun() const { return m_data.sectionsToRun; }$/;"	f	class:Catch::std::Config
testSpec	..\Catch2\src\catch2\catch_config.cpp	/^    TestSpec const& Config::testSpec() const { return m_testSpec; }$/;"	f	class:Catch::Config
hasTestFilters	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::hasTestFilters() const { return m_hasTestFilters; }$/;"	f	class:Catch::Config
showHelp	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::showHelp() const { return m_data.showHelp; }$/;"	f	class:Catch::Config
allowThrows	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::allowThrows() const                   { return !m_data.noThrow; }$/;"	f	class:Catch::Config
stream	..\Catch2\src\catch2\catch_config.cpp	/^    std::ostream& Config::stream() const               { return m_stream->stream(); }$/;"	f	class:Catch::Config
name	..\Catch2\src\catch2\catch_config.cpp	/^    std::string Config::name() const                   { return m_data.name.empty() ? m_data.processName : m_data.name; }$/;"	f	class:Catch::Config
includeSuccessfulResults	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::includeSuccessfulResults() const      { return m_data.showSuccessfulTests; }$/;"	f	class:Catch::Config
warnAboutMissingAssertions	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::warnAboutMissingAssertions() const    { return !!(m_data.warnings & WarnAbout::NoAssertions); }$/;"	f	class:Catch::Config
warnAboutNoTests	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::warnAboutNoTests() const              { return !!(m_data.warnings & WarnAbout::NoTests); }$/;"	f	class:Catch::Config
showDurations	..\Catch2\src\catch2\catch_config.cpp	/^    ShowDurations Config::showDurations() const        { return m_data.showDurations; }$/;"	f	class:Catch::Config
minDuration	..\Catch2\src\catch2\catch_config.cpp	/^    double Config::minDuration() const                 { return m_data.minDuration; }$/;"	f	class:Catch::Config
runOrder	..\Catch2\src\catch2\catch_config.cpp	/^    TestRunOrder Config::runOrder() const              { return m_data.runOrder; }$/;"	f	class:Catch::Config
rngSeed	..\Catch2\src\catch2\catch_config.cpp	/^    unsigned int Config::rngSeed() const               { return m_data.rngSeed; }$/;"	f	class:Catch::Config
useColour	..\Catch2\src\catch2\catch_config.cpp	/^    UseColour Config::useColour() const                { return m_data.useColour; }$/;"	f	class:Catch::Config
shouldDebugBreak	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::shouldDebugBreak() const              { return m_data.shouldDebugBreak; }$/;"	f	class:Catch::Config
abortAfter	..\Catch2\src\catch2\catch_config.cpp	/^    int Config::abortAfter() const                     { return m_data.abortAfter; }$/;"	f	class:Catch::Config
showInvisibles	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::showInvisibles() const                { return m_data.showInvisibles; }$/;"	f	class:Catch::Config
verbosity	..\Catch2\src\catch2\catch_config.cpp	/^    Verbosity Config::verbosity() const                { return m_data.verbosity; }$/;"	f	class:Catch::Config
benchmarkNoAnalysis	..\Catch2\src\catch2\catch_config.cpp	/^    bool Config::benchmarkNoAnalysis() const                      { return m_data.benchmarkNoAnalysis; }$/;"	f	class:Catch::Config
benchmarkSamples	..\Catch2\src\catch2\catch_config.cpp	/^    int Config::benchmarkSamples() const                          { return m_data.benchmarkSamples; }$/;"	f	class:Catch::Config
benchmarkConfidenceInterval	..\Catch2\src\catch2\catch_config.cpp	/^    double Config::benchmarkConfidenceInterval() const            { return m_data.benchmarkConfidenceInterval; }$/;"	f	class:Catch::Config
benchmarkResamples	..\Catch2\src\catch2\catch_config.cpp	/^    unsigned int Config::benchmarkResamples() const               { return m_data.benchmarkResamples; }$/;"	f	class:Catch::Config
benchmarkWarmupTime	..\Catch2\src\catch2\catch_config.cpp	/^    std::chrono::milliseconds Config::benchmarkWarmupTime() const { return std::chrono::milliseconds(m_data.benchmarkWarmupTime); }$/;"	f	class:Catch::Config
openStream	..\Catch2\src\catch2\catch_config.cpp	/^    IStream const* Config::openStream() {$/;"	f	class:Catch::Config
CATCH_CONFIG_HPP_INCLUDED	..\Catch2\src\catch2\catch_config.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_config.hpp	/^namespace Catch {$/;"	n
ConfigData	..\Catch2\src\catch2\catch_config.hpp	/^    struct ConfigData {$/;"	s	namespace:Catch
listTests	..\Catch2\src\catch2\catch_config.hpp	/^        bool listTests = false;$/;"	m	struct:Catch::ConfigData
listTags	..\Catch2\src\catch2\catch_config.hpp	/^        bool listTags = false;$/;"	m	struct:Catch::ConfigData
listReporters	..\Catch2\src\catch2\catch_config.hpp	/^        bool listReporters = false;$/;"	m	struct:Catch::ConfigData
showSuccessfulTests	..\Catch2\src\catch2\catch_config.hpp	/^        bool showSuccessfulTests = false;$/;"	m	struct:Catch::ConfigData
shouldDebugBreak	..\Catch2\src\catch2\catch_config.hpp	/^        bool shouldDebugBreak = false;$/;"	m	struct:Catch::ConfigData
noThrow	..\Catch2\src\catch2\catch_config.hpp	/^        bool noThrow = false;$/;"	m	struct:Catch::ConfigData
showHelp	..\Catch2\src\catch2\catch_config.hpp	/^        bool showHelp = false;$/;"	m	struct:Catch::ConfigData
showInvisibles	..\Catch2\src\catch2\catch_config.hpp	/^        bool showInvisibles = false;$/;"	m	struct:Catch::ConfigData
filenamesAsTags	..\Catch2\src\catch2\catch_config.hpp	/^        bool filenamesAsTags = false;$/;"	m	struct:Catch::ConfigData
libIdentify	..\Catch2\src\catch2\catch_config.hpp	/^        bool libIdentify = false;$/;"	m	struct:Catch::ConfigData
abortAfter	..\Catch2\src\catch2\catch_config.hpp	/^        int abortAfter = -1;$/;"	m	struct:Catch::ConfigData
rngSeed	..\Catch2\src\catch2\catch_config.hpp	/^        unsigned int rngSeed = 0;$/;"	m	struct:Catch::ConfigData
benchmarkNoAnalysis	..\Catch2\src\catch2\catch_config.hpp	/^        bool benchmarkNoAnalysis = false;$/;"	m	struct:Catch::ConfigData
benchmarkSamples	..\Catch2\src\catch2\catch_config.hpp	/^        unsigned int benchmarkSamples = 100;$/;"	m	struct:Catch::ConfigData
benchmarkConfidenceInterval	..\Catch2\src\catch2\catch_config.hpp	/^        double benchmarkConfidenceInterval = 0.95;$/;"	m	struct:Catch::ConfigData
benchmarkResamples	..\Catch2\src\catch2\catch_config.hpp	/^        unsigned int benchmarkResamples = 100000;$/;"	m	struct:Catch::ConfigData
benchmarkWarmupTime	..\Catch2\src\catch2\catch_config.hpp	/^        std::chrono::milliseconds::rep benchmarkWarmupTime = 100;$/;"	m	struct:Catch::ConfigData
verbosity	..\Catch2\src\catch2\catch_config.hpp	/^        Verbosity verbosity = Verbosity::Normal;$/;"	m	struct:Catch::ConfigData
warnings	..\Catch2\src\catch2\catch_config.hpp	/^        WarnAbout::What warnings = WarnAbout::Nothing;$/;"	m	struct:Catch::ConfigData
showDurations	..\Catch2\src\catch2\catch_config.hpp	/^        ShowDurations showDurations = ShowDurations::DefaultForReporter;$/;"	m	struct:Catch::ConfigData
minDuration	..\Catch2\src\catch2\catch_config.hpp	/^        double minDuration = -1;$/;"	m	struct:Catch::ConfigData
runOrder	..\Catch2\src\catch2\catch_config.hpp	/^        TestRunOrder runOrder = TestRunOrder::Declared;$/;"	m	struct:Catch::ConfigData
useColour	..\Catch2\src\catch2\catch_config.hpp	/^        UseColour useColour = UseColour::Auto;$/;"	m	struct:Catch::ConfigData
waitForKeypress	..\Catch2\src\catch2\catch_config.hpp	/^        WaitForKeypress::When waitForKeypress = WaitForKeypress::Never;$/;"	m	struct:Catch::ConfigData
outputFilename	..\Catch2\src\catch2\catch_config.hpp	/^        std::string outputFilename;$/;"	m	struct:Catch::ConfigData
name	..\Catch2\src\catch2\catch_config.hpp	/^        std::string name;$/;"	m	struct:Catch::ConfigData
processName	..\Catch2\src\catch2\catch_config.hpp	/^        std::string processName;$/;"	m	struct:Catch::ConfigData
CATCH_CONFIG_DEFAULT_REPORTER	..\Catch2\src\catch2\catch_config.hpp	56;"	d
reporterName	..\Catch2\src\catch2\catch_config.hpp	/^        std::string reporterName = CATCH_CONFIG_DEFAULT_REPORTER;$/;"	m	struct:Catch::ConfigData
CATCH_CONFIG_DEFAULT_REPORTER	..\Catch2\src\catch2\catch_config.hpp	59;"	d
testsOrTags	..\Catch2\src\catch2\catch_config.hpp	/^        std::vector<std::string> testsOrTags;$/;"	m	struct:Catch::ConfigData
sectionsToRun	..\Catch2\src\catch2\catch_config.hpp	/^        std::vector<std::string> sectionsToRun;$/;"	m	struct:Catch::ConfigData
Config	..\Catch2\src\catch2\catch_config.hpp	/^    class Config : public IConfig {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\catch_config.hpp	/^        ~Config() override; \/\/ = default in the cpp file$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        std::vector<std::string> const& getTestsOrTags() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        std::vector<std::string> const& getSectionsToRun() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        TestSpec const& testSpec() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool hasTestFilters() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool allowThrows() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        std::ostream& stream() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        std::string name() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool includeSuccessfulResults() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool warnAboutMissingAssertions() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool warnAboutNoTests() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        ShowDurations showDurations() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        double minDuration() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        TestRunOrder runOrder() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        unsigned int rngSeed() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        UseColour useColour() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool shouldDebugBreak() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        int abortAfter() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool showInvisibles() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        Verbosity verbosity() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        bool benchmarkNoAnalysis() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        int benchmarkSamples() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        double benchmarkConfidenceInterval() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        unsigned int benchmarkResamples() const override;$/;"	m	class:Catch::Config
override	..\Catch2\src\catch2\catch_config.hpp	/^        std::chrono::milliseconds benchmarkWarmupTime() const override;$/;"	m	class:Catch::Config
m_data	..\Catch2\src\catch2\catch_config.hpp	/^        ConfigData m_data;$/;"	m	class:Catch::Config
m_stream	..\Catch2\src\catch2\catch_config.hpp	/^        Detail::unique_ptr<IStream const> m_stream;$/;"	m	class:Catch::Config
m_testSpec	..\Catch2\src\catch2\catch_config.hpp	/^        TestSpec m_testSpec;$/;"	m	class:Catch::Config
m_hasTestFilters	..\Catch2\src\catch2\catch_config.hpp	/^        bool m_hasTestFilters = false;$/;"	m	class:Catch::Config
Catch	..\Catch2\src\catch2\catch_message.cpp	/^namespace Catch {$/;"	n	file:
MessageBuilder	..\Catch2\src\catch2\catch_message.cpp	/^    Catch::MessageBuilder::MessageBuilder( StringRef const& macroName,$/;"	f	class:Catch::Catch::MessageBuilder
ScopedMessage	..\Catch2\src\catch2\catch_message.cpp	/^    ScopedMessage::ScopedMessage( MessageBuilder const& builder ):$/;"	f	class:Catch::ScopedMessage
move	..\Catch2\src\catch2\catch_message.cpp	/^        m_info( std::move( old.m_info ) ) {$/;"	f	namespace:Catch
~ScopedMessage	..\Catch2\src\catch2\catch_message.cpp	/^    ScopedMessage::~ScopedMessage() {$/;"	f	class:Catch::ScopedMessage
Capturer	..\Catch2\src\catch2\catch_message.cpp	/^    Capturer::Capturer( StringRef macroName, SourceLineInfo const& lineInfo, ResultWas::OfType resultType, StringRef names ) {$/;"	f	class:Catch::Capturer
~Capturer	..\Catch2\src\catch2\catch_message.cpp	/^    Capturer::~Capturer() {$/;"	f	class:Catch::Capturer
captureValue	..\Catch2\src\catch2\catch_message.cpp	/^    void Capturer::captureValue( size_t index, std::string const& value ) {$/;"	f	class:Catch::Capturer
CATCH_MESSAGE_HPP_INCLUDED	..\Catch2\src\catch2\catch_message.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_message.hpp	/^namespace Catch {$/;"	n
MessageStream	..\Catch2\src\catch2\catch_message.hpp	/^    struct MessageStream {$/;"	s	namespace:Catch
operator <<	..\Catch2\src\catch2\catch_message.hpp	/^        MessageStream& operator << ( T const& value ) {$/;"	f	struct:Catch::MessageStream
m_stream	..\Catch2\src\catch2\catch_message.hpp	/^        ReusableStringStream m_stream;$/;"	m	struct:Catch::MessageStream
MessageBuilder	..\Catch2\src\catch2\catch_message.hpp	/^    struct MessageBuilder : MessageStream {$/;"	s	namespace:Catch
operator <<	..\Catch2\src\catch2\catch_message.hpp	/^        MessageBuilder& operator << ( T const& value ) {$/;"	f	struct:Catch::MessageBuilder
m_info	..\Catch2\src\catch2\catch_message.hpp	/^        MessageInfo m_info;$/;"	m	struct:Catch::MessageBuilder
ScopedMessage	..\Catch2\src\catch2\catch_message.hpp	/^    class ScopedMessage {$/;"	c	namespace:Catch
duplicate	..\Catch2\src\catch2\catch_message.hpp	/^        ScopedMessage( ScopedMessage& duplicate ) = delete;$/;"	m	class:Catch::ScopedMessage
noexcept	..\Catch2\src\catch2\catch_message.hpp	/^        ScopedMessage( ScopedMessage&& old ) noexcept;$/;"	m	class:Catch::ScopedMessage
m_info	..\Catch2\src\catch2\catch_message.hpp	/^        MessageInfo m_info;$/;"	m	class:Catch::ScopedMessage
m_moved	..\Catch2\src\catch2\catch_message.hpp	/^        bool m_moved = false;$/;"	m	class:Catch::ScopedMessage
Capturer	..\Catch2\src\catch2\catch_message.hpp	/^    class Capturer {$/;"	c	namespace:Catch
m_messages	..\Catch2\src\catch2\catch_message.hpp	/^        std::vector<MessageInfo> m_messages;$/;"	m	class:Catch::Capturer
m_resultCapture	..\Catch2\src\catch2\catch_message.hpp	/^        IResultCapture& m_resultCapture = getResultCapture();$/;"	m	class:Catch::Capturer
m_captured	..\Catch2\src\catch2\catch_message.hpp	/^        size_t m_captured = 0;$/;"	m	class:Catch::Capturer
captureValues	..\Catch2\src\catch2\catch_message.hpp	/^        void captureValues( size_t index, T const& value ) {$/;"	f	class:Catch::Capturer
captureValues	..\Catch2\src\catch2\catch_message.hpp	/^        void captureValues( size_t index, T const& value, Ts const&... values ) {$/;"	f	class:Catch::Capturer
INTERNAL_CATCH_MSG	..\Catch2\src\catch2\catch_message.hpp	90;"	d
INTERNAL_CATCH_CAPTURE	..\Catch2\src\catch2\catch_message.hpp	98;"	d
INTERNAL_CATCH_INFO	..\Catch2\src\catch2\catch_message.hpp	103;"	d
INTERNAL_CATCH_UNSCOPED_INFO	..\Catch2\src\catch2\catch_message.hpp	107;"	d
CATCH_INFO	..\Catch2\src\catch2\catch_message.hpp	113;"	d
CATCH_UNSCOPED_INFO	..\Catch2\src\catch2\catch_message.hpp	114;"	d
CATCH_WARN	..\Catch2\src\catch2\catch_message.hpp	115;"	d
CATCH_CAPTURE	..\Catch2\src\catch2\catch_message.hpp	116;"	d
CATCH_INFO	..\Catch2\src\catch2\catch_message.hpp	120;"	d
CATCH_UNSCOPED_INFO	..\Catch2\src\catch2\catch_message.hpp	121;"	d
CATCH_WARN	..\Catch2\src\catch2\catch_message.hpp	122;"	d
CATCH_CAPTURE	..\Catch2\src\catch2\catch_message.hpp	123;"	d
INFO	..\Catch2\src\catch2\catch_message.hpp	127;"	d
UNSCOPED_INFO	..\Catch2\src\catch2\catch_message.hpp	128;"	d
WARN	..\Catch2\src\catch2\catch_message.hpp	129;"	d
CAPTURE	..\Catch2\src\catch2\catch_message.hpp	130;"	d
INFO	..\Catch2\src\catch2\catch_message.hpp	134;"	d
UNSCOPED_INFO	..\Catch2\src\catch2\catch_message.hpp	135;"	d
WARN	..\Catch2\src\catch2\catch_message.hpp	136;"	d
CAPTURE	..\Catch2\src\catch2\catch_message.hpp	137;"	d
Catch	..\Catch2\src\catch2\catch_registry_hub.cpp	/^namespace Catch {$/;"	n	file:
RegistryHub	..\Catch2\src\catch2\catch_registry_hub.cpp	/^        class RegistryHub : public IRegistryHub,$/;"	c	namespace:Catch::__anon35	file:
m_testCaseRegistry	..\Catch2\src\catch2\catch_registry_hub.cpp	/^            TestRegistry m_testCaseRegistry;$/;"	m	class:Catch::__anon35::RegistryHub	file:
m_reporterRegistry	..\Catch2\src\catch2\catch_registry_hub.cpp	/^            ReporterRegistry m_reporterRegistry;$/;"	m	class:Catch::__anon35::RegistryHub	file:
m_exceptionTranslatorRegistry	..\Catch2\src\catch2\catch_registry_hub.cpp	/^            ExceptionTranslatorRegistry m_exceptionTranslatorRegistry;$/;"	m	class:Catch::__anon35::RegistryHub	file:
m_tagAliasRegistry	..\Catch2\src\catch2\catch_registry_hub.cpp	/^            TagAliasRegistry m_tagAliasRegistry;$/;"	m	class:Catch::__anon35::RegistryHub	file:
m_exceptionRegistry	..\Catch2\src\catch2\catch_registry_hub.cpp	/^            StartupExceptionRegistry m_exceptionRegistry;$/;"	m	class:Catch::__anon35::RegistryHub	file:
m_enumValuesRegistry	..\Catch2\src\catch2\catch_registry_hub.cpp	/^            Detail::EnumValuesRegistry m_enumValuesRegistry;$/;"	m	class:Catch::__anon35::RegistryHub	file:
getRegistryHub	..\Catch2\src\catch2\catch_registry_hub.cpp	/^    IRegistryHub const& getRegistryHub() {$/;"	f	namespace:Catch
getMutableRegistryHub	..\Catch2\src\catch2\catch_registry_hub.cpp	/^    IMutableRegistryHub& getMutableRegistryHub() {$/;"	f	namespace:Catch
cleanUp	..\Catch2\src\catch2\catch_registry_hub.cpp	/^    void cleanUp() {$/;"	f	namespace:Catch
translateActiveException	..\Catch2\src\catch2\catch_registry_hub.cpp	/^    std::string translateActiveException() {$/;"	f	namespace:Catch
CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	..\Catch2\src\catch2\catch_reporter_registrars.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_reporter_registrars.hpp	/^namespace Catch {$/;"	n
ReporterFactory	..\Catch2\src\catch2\catch_reporter_registrars.hpp	/^    class ReporterFactory : public IReporterFactory {$/;"	c	namespace:Catch
ReporterRegistrar	..\Catch2\src\catch2\catch_reporter_registrars.hpp	/^    class ReporterRegistrar {$/;"	c	namespace:Catch
ReporterRegistrar	..\Catch2\src\catch2\catch_reporter_registrars.hpp	/^        explicit ReporterRegistrar( std::string const& name ) {$/;"	f	class:Catch::ReporterRegistrar
ListenerRegistrar	..\Catch2\src\catch2\catch_reporter_registrars.hpp	/^    class ListenerRegistrar {$/;"	c	namespace:Catch
ListenerFactory	..\Catch2\src\catch2\catch_reporter_registrars.hpp	/^        class ListenerFactory : public IReporterFactory {$/;"	c	class:Catch::ListenerRegistrar
ListenerRegistrar	..\Catch2\src\catch2\catch_reporter_registrars.hpp	/^        ListenerRegistrar() {$/;"	f	class:Catch::ListenerRegistrar
CATCH_REGISTER_REPORTER	..\Catch2\src\catch2\catch_reporter_registrars.hpp	65;"	d
CATCH_REGISTER_LISTENER	..\Catch2\src\catch2\catch_reporter_registrars.hpp	71;"	d
CATCH_REGISTER_REPORTER	..\Catch2\src\catch2\catch_reporter_registrars.hpp	78;"	d
CATCH_REGISTER_LISTENER	..\Catch2\src\catch2\catch_reporter_registrars.hpp	79;"	d
CATCH_SECTION_INFO_HPP_INCLUDED	..\Catch2\src\catch2\catch_section_info.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_section_info.hpp	/^namespace Catch {$/;"	n
SectionInfo	..\Catch2\src\catch2\catch_section_info.hpp	/^    struct SectionInfo {$/;"	s	namespace:Catch
SectionInfo	..\Catch2\src\catch2\catch_section_info.hpp	/^        SectionInfo( SourceLineInfo const& _lineInfo, std::string _name,$/;"	f	struct:Catch::SectionInfo
name	..\Catch2\src\catch2\catch_section_info.hpp	/^        std::string name;$/;"	m	struct:Catch::SectionInfo
lineInfo	..\Catch2\src\catch2\catch_section_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::SectionInfo
SectionEndInfo	..\Catch2\src\catch2\catch_section_info.hpp	/^    struct SectionEndInfo {$/;"	s	namespace:Catch
sectionInfo	..\Catch2\src\catch2\catch_section_info.hpp	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionEndInfo
prevAssertions	..\Catch2\src\catch2\catch_section_info.hpp	/^        Counts prevAssertions;$/;"	m	struct:Catch::SectionEndInfo
durationInSeconds	..\Catch2\src\catch2\catch_section_info.hpp	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionEndInfo
Catch	..\Catch2\src\catch2\catch_session.cpp	/^namespace Catch {$/;"	n	file:
MaxExitCode	..\Catch2\src\catch2\catch_session.cpp	/^        const int MaxExitCode = 255;$/;"	v
createReporter	..\Catch2\src\catch2\catch_session.cpp	/^        IStreamingReporterPtr createReporter(std::string const& reporterName, IConfig const* config) {$/;"	f	namespace:Catch::__anon36
makeReporter	..\Catch2\src\catch2\catch_session.cpp	/^        IStreamingReporterPtr makeReporter(Config const* config) {$/;"	f	namespace:Catch::__anon36
TestGroup	..\Catch2\src\catch2\catch_session.cpp	/^        class TestGroup {$/;"	c	namespace:Catch::__anon36	file:
TestGroup	..\Catch2\src\catch2\catch_session.cpp	/^            explicit TestGroup(IStreamingReporterPtr&& reporter, Config const* config):$/;"	f	class:Catch::__anon36::TestGroup
execute	..\Catch2\src\catch2\catch_session.cpp	/^            Totals execute() {$/;"	f	class:Catch::__anon36::TestGroup
m_config	..\Catch2\src\catch2\catch_session.cpp	/^            Config const* m_config;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_context	..\Catch2\src\catch2\catch_session.cpp	/^            RunContext m_context;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_tests	..\Catch2\src\catch2\catch_session.cpp	/^            Tests m_tests;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_matches	..\Catch2\src\catch2\catch_session.cpp	/^            TestSpec::Matches m_matches;$/;"	m	class:Catch::__anon36::TestGroup	file:
applyFilenamesAsTags	..\Catch2\src\catch2\catch_session.cpp	/^        void applyFilenamesAsTags() {$/;"	f	namespace:Catch::__anon36
Session	..\Catch2\src\catch2\catch_session.cpp	/^    Session::Session() {$/;"	f	class:Catch::Session
~Session	..\Catch2\src\catch2\catch_session.cpp	/^    Session::~Session() {$/;"	f	class:Catch::Session
showHelp	..\Catch2\src\catch2\catch_session.cpp	/^    void Session::showHelp() const {$/;"	f	class:Catch::Session
libIdentify	..\Catch2\src\catch2\catch_session.cpp	/^    void Session::libIdentify() {$/;"	f	class:Catch::Session
applyCommandLine	..\Catch2\src\catch2\catch_session.cpp	/^    int Session::applyCommandLine( int argc, char const * const * argv ) {$/;"	f	class:Catch::Session
applyCommandLine	..\Catch2\src\catch2\catch_session.cpp	/^    int Session::applyCommandLine( int argc, wchar_t const * const * argv ) {$/;"	f	class:Catch::Session
useConfigData	..\Catch2\src\catch2\catch_session.cpp	/^    void Session::useConfigData( ConfigData const& configData ) {$/;"	f	class:Catch::Session
run	..\Catch2\src\catch2\catch_session.cpp	/^    int Session::run() {$/;"	f	class:Catch::Session
cli	..\Catch2\src\catch2\catch_session.cpp	/^    Clara::Parser const& Session::cli() const {$/;"	f	class:Catch::Clara::Session
cli	..\Catch2\src\catch2\catch_session.cpp	/^    void Session::cli( Clara::Parser const& newParser ) {$/;"	f	class:Catch::Session
configData	..\Catch2\src\catch2\catch_session.cpp	/^    ConfigData& Session::configData() {$/;"	f	class:Catch::Session
config	..\Catch2\src\catch2\catch_session.cpp	/^    Config& Session::config() {$/;"	f	class:Catch::Session
runInternal	..\Catch2\src\catch2\catch_session.cpp	/^    int Session::runInternal() {$/;"	f	class:Catch::Session
CATCH_SESSION_HPP_INCLUDED	..\Catch2\src\catch2\catch_session.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_session.hpp	/^namespace Catch {$/;"	n
Session	..\Catch2\src\catch2\catch_session.hpp	/^    class Session : Detail::NonCopyable {$/;"	c	namespace:Catch
run	..\Catch2\src\catch2\catch_session.hpp	/^        int run(int argc, CharT const * const argv[]) {$/;"	f	class:Catch::Session
m_cli	..\Catch2\src\catch2\catch_session.hpp	/^        Clara::Parser m_cli;$/;"	m	class:Catch::Session
m_configData	..\Catch2\src\catch2\catch_session.hpp	/^        ConfigData m_configData;$/;"	m	class:Catch::Session
m_config	..\Catch2\src\catch2\catch_session.hpp	/^        Detail::unique_ptr<Config> m_config;$/;"	m	class:Catch::Session
m_startupExceptions	..\Catch2\src\catch2\catch_session.hpp	/^        bool m_startupExceptions = false;$/;"	m	class:Catch::Session
CATCH_TAG_ALIAS_HPP_INCLUDED	..\Catch2\src\catch2\catch_tag_alias.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_tag_alias.hpp	/^namespace Catch {$/;"	n
TagAlias	..\Catch2\src\catch2\catch_tag_alias.hpp	/^    struct TagAlias {$/;"	s	namespace:Catch
TagAlias	..\Catch2\src\catch2\catch_tag_alias.hpp	/^        TagAlias(std::string const& _tag, SourceLineInfo _lineInfo):$/;"	f	struct:Catch::TagAlias
tag	..\Catch2\src\catch2\catch_tag_alias.hpp	/^        std::string tag;$/;"	m	struct:Catch::TagAlias
lineInfo	..\Catch2\src\catch2\catch_tag_alias.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::TagAlias
CATCH_TAG_ALIAS_AUTOREGISTRAR_HPP_INCLUDED	..\Catch2\src\catch2\catch_tag_alias_autoregistrar.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_tag_alias_autoregistrar.hpp	/^namespace Catch {$/;"	n
RegistrarForTagAliases	..\Catch2\src\catch2\catch_tag_alias_autoregistrar.hpp	/^    struct RegistrarForTagAliases {$/;"	s	namespace:Catch
CATCH_REGISTER_TAG_ALIAS	..\Catch2\src\catch2\catch_tag_alias_autoregistrar.hpp	23;"	d
CATCH_TEMPLATE_TEST_MACROS_HPP_INCLUDED	..\Catch2\src\catch2\catch_template_test_macros.hpp	9;"	d
CATCH_TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	28;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	29;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	30;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	31;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	32;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	33;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	34;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	35;"	d
CATCH_TEMPLATE_LIST_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	36;"	d
CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	37;"	d
CATCH_TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	39;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	40;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	41;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	42;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	43;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	44;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	45;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	46;"	d
CATCH_TEMPLATE_LIST_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	47;"	d
CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	48;"	d
CATCH_TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	54;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	55;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	56;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	57;"	d
CATCH_TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	59;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	60;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	61;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	62;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	66;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	67;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	68;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	69;"	d
CATCH_TEMPLATE_LIST_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	70;"	d
CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	71;"	d
TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	76;"	d
TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	77;"	d
TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	78;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	79;"	d
TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	80;"	d
TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	81;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	82;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	83;"	d
TEMPLATE_LIST_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	84;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	85;"	d
TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	87;"	d
TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	88;"	d
TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	89;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	90;"	d
TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	91;"	d
TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	92;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	93;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	94;"	d
TEMPLATE_LIST_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	95;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	96;"	d
TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	102;"	d
TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	103;"	d
TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	104;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	105;"	d
TEMPLATE_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	107;"	d
TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	108;"	d
TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	109;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	110;"	d
TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	114;"	d
TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	115;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	116;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\catch_template_test_macros.hpp	117;"	d
TEMPLATE_LIST_TEST_CASE	..\Catch2\src\catch2\catch_template_test_macros.hpp	118;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_template_test_macros.hpp	119;"	d
Catch	..\Catch2\src\catch2\catch_test_case_info.cpp	/^namespace Catch {$/;"	n	file:
operator |	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        TestCaseProperties operator|(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon37
operator |=	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        TestCaseProperties& operator|=(TestCaseProperties& lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon37
operator &	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        TestCaseProperties operator&(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon37
applies	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        bool applies(TestCaseProperties tcp) {$/;"	f	namespace:Catch::__anon37
parseSpecialTag	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        TestCaseProperties parseSpecialTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon37
isReservedTag	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        bool isReservedTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon37
enforceNotReservedTag	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        void enforceNotReservedTag( StringRef tag, SourceLineInfo const& _lineInfo ) {$/;"	f	namespace:Catch::__anon37
makeDefaultName	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        std::string makeDefaultName() {$/;"	f	namespace:Catch::__anon37
extractFilenamePart	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        StringRef extractFilenamePart(StringRef filename) {$/;"	f	namespace:Catch::__anon37
sizeOfExtraTags	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        size_t sizeOfExtraTags(StringRef filepath) {$/;"	f	namespace:Catch::__anon37
makeTestCaseInfo	..\Catch2\src\catch2\catch_test_case_info.cpp	/^        makeTestCaseInfo(std::string const& _className,$/;"	f	namespace:Catch
TestCaseInfo	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    TestCaseInfo::TestCaseInfo(std::string const& _className,$/;"	f	class:Catch::TestCaseInfo
isHidden	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    bool TestCaseInfo::isHidden() const {$/;"	f	class:Catch::TestCaseInfo
throws	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    bool TestCaseInfo::throws() const {$/;"	f	class:Catch::TestCaseInfo
okToFail	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    bool TestCaseInfo::okToFail() const {$/;"	f	class:Catch::TestCaseInfo
expectedToFail	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    bool TestCaseInfo::expectedToFail() const {$/;"	f	class:Catch::TestCaseInfo
addFilenameTag	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    void TestCaseInfo::addFilenameTag() {$/;"	f	class:Catch::TestCaseInfo
tagsAsString	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    std::string TestCaseInfo::tagsAsString() const {$/;"	f	class:Catch::TestCaseInfo
internalAppendTag	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    void TestCaseInfo::internalAppendTag(StringRef tagStr) {$/;"	f	class:Catch::TestCaseInfo
operator ==	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    bool TestCaseHandle::operator == ( TestCaseHandle const& rhs ) const {$/;"	f	class:Catch::TestCaseHandle
operator <	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    bool TestCaseHandle::operator < ( TestCaseHandle const& rhs ) const {$/;"	f	class:Catch::TestCaseHandle
getTestCaseInfo	..\Catch2\src\catch2\catch_test_case_info.cpp	/^    TestCaseInfo const& TestCaseHandle::getTestCaseInfo() const {$/;"	f	class:Catch::TestCaseHandle
CATCH_TEST_CASE_INFO_HPP_INCLUDED	..\Catch2\src\catch2\catch_test_case_info.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_test_case_info.hpp	/^namespace Catch {$/;"	n
Tag	..\Catch2\src\catch2\catch_test_case_info.hpp	/^    struct Tag {$/;"	s	namespace:Catch
Tag	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        Tag(StringRef original_, StringRef lowerCased_):$/;"	f	struct:Catch::Tag
original	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        StringRef original, lowerCased;$/;"	m	struct:Catch::Tag
lowerCased	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        StringRef original, lowerCased;$/;"	m	struct:Catch::Tag
TestCaseProperties	..\Catch2\src\catch2\catch_test_case_info.hpp	/^    enum class TestCaseProperties : uint8_t {$/;"	c	namespace:Catch
None	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        None = 0,$/;"	m	class:Catch::TestCaseProperties
IsHidden	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        IsHidden = 1 << 1,$/;"	m	class:Catch::TestCaseProperties
ShouldFail	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        ShouldFail = 1 << 2,$/;"	m	class:Catch::TestCaseProperties
MayFail	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        MayFail = 1 << 3,$/;"	m	class:Catch::TestCaseProperties
Throws	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        Throws = 1 << 4,$/;"	m	class:Catch::TestCaseProperties
NonPortable	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        NonPortable = 1 << 5,$/;"	m	class:Catch::TestCaseProperties
Benchmark	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        Benchmark = 1 << 6$/;"	m	class:Catch::TestCaseProperties
TestCaseInfo	..\Catch2\src\catch2\catch_test_case_info.hpp	/^    struct TestCaseInfo : Detail::NonCopyable {$/;"	s	class:Catch::TestCaseProperties
name	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        std::string name;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
className	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        std::string className;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
backingTags	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        std::string backingTags, backingLCaseTags;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
backingLCaseTags	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        std::string backingTags, backingLCaseTags;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
tags	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        std::vector<Tag> tags;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
lineInfo	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
properties	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        TestCaseProperties properties = TestCaseProperties::None;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
TestCaseHandle	..\Catch2\src\catch2\catch_test_case_info.hpp	/^    class TestCaseHandle {$/;"	c	class:Catch::TestCaseProperties
m_info	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        TestCaseInfo* m_info;$/;"	m	class:Catch::TestCaseProperties::TestCaseHandle
m_invoker	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        ITestInvoker* m_invoker;$/;"	m	class:Catch::TestCaseProperties::TestCaseHandle
TestCaseHandle	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        TestCaseHandle(TestCaseInfo* info, ITestInvoker* invoker) :$/;"	f	class:Catch::TestCaseProperties::TestCaseHandle
invoke	..\Catch2\src\catch2\catch_test_case_info.hpp	/^        void invoke() const {$/;"	f	class:Catch::TestCaseProperties::TestCaseHandle
CATCH_TEST_MACROS_HPP_INCLUDED	..\Catch2\src\catch2\catch_test_macros.hpp	9;"	d
CATCH_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	26;"	d
CATCH_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	27;"	d
CATCH_REQUIRE_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	29;"	d
CATCH_REQUIRE_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	30;"	d
CATCH_REQUIRE_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	31;"	d
CATCH_CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	33;"	d
CATCH_CHECK_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	34;"	d
CATCH_CHECKED_IF	..\Catch2\src\catch2\catch_test_macros.hpp	35;"	d
CATCH_CHECKED_ELSE	..\Catch2\src\catch2\catch_test_macros.hpp	36;"	d
CATCH_CHECK_NOFAIL	..\Catch2\src\catch2\catch_test_macros.hpp	37;"	d
CATCH_CHECK_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	39;"	d
CATCH_CHECK_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	40;"	d
CATCH_CHECK_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	41;"	d
CATCH_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	43;"	d
CATCH_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	44;"	d
CATCH_METHOD_AS_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	45;"	d
CATCH_REGISTER_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	46;"	d
CATCH_SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	47;"	d
CATCH_DYNAMIC_SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	48;"	d
CATCH_FAIL	..\Catch2\src\catch2\catch_test_macros.hpp	49;"	d
CATCH_FAIL_CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	50;"	d
CATCH_SUCCEED	..\Catch2\src\catch2\catch_test_macros.hpp	51;"	d
CATCH_STATIC_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	55;"	d
CATCH_STATIC_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	56;"	d
CATCH_STATIC_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	58;"	d
CATCH_STATIC_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	59;"	d
CATCH_SCENARIO	..\Catch2\src\catch2\catch_test_macros.hpp	64;"	d
CATCH_SCENARIO_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	65;"	d
CATCH_GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	66;"	d
CATCH_AND_GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	67;"	d
CATCH_WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	68;"	d
CATCH_AND_WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	69;"	d
CATCH_THEN	..\Catch2\src\catch2\catch_test_macros.hpp	70;"	d
CATCH_AND_THEN	..\Catch2\src\catch2\catch_test_macros.hpp	71;"	d
CATCH_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	75;"	d
CATCH_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	76;"	d
CATCH_REQUIRE_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	78;"	d
CATCH_REQUIRE_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	79;"	d
CATCH_REQUIRE_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	80;"	d
CATCH_CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	82;"	d
CATCH_CHECK_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	83;"	d
CATCH_CHECKED_IF	..\Catch2\src\catch2\catch_test_macros.hpp	84;"	d
CATCH_CHECKED_ELSE	..\Catch2\src\catch2\catch_test_macros.hpp	85;"	d
CATCH_CHECK_NOFAIL	..\Catch2\src\catch2\catch_test_macros.hpp	86;"	d
CATCH_CHECK_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	88;"	d
CATCH_CHECK_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	89;"	d
CATCH_CHECK_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	90;"	d
CATCH_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	92;"	d
CATCH_TEST_CASE_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	93;"	d
CATCH_METHOD_AS_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	94;"	d
CATCH_REGISTER_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	95;"	d
CATCH_SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	96;"	d
CATCH_DYNAMIC_SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	97;"	d
CATCH_FAIL	..\Catch2\src\catch2\catch_test_macros.hpp	98;"	d
CATCH_FAIL_CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	99;"	d
CATCH_SUCCEED	..\Catch2\src\catch2\catch_test_macros.hpp	100;"	d
CATCH_STATIC_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	102;"	d
CATCH_STATIC_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	103;"	d
CATCH_SCENARIO	..\Catch2\src\catch2\catch_test_macros.hpp	106;"	d
CATCH_SCENARIO_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	107;"	d
CATCH_GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	108;"	d
CATCH_AND_GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	109;"	d
CATCH_WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	110;"	d
CATCH_AND_WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	111;"	d
CATCH_THEN	..\Catch2\src\catch2\catch_test_macros.hpp	112;"	d
CATCH_AND_THEN	..\Catch2\src\catch2\catch_test_macros.hpp	113;"	d
REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	117;"	d
REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	118;"	d
REQUIRE_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	120;"	d
REQUIRE_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	121;"	d
REQUIRE_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	122;"	d
CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	124;"	d
CHECK_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	125;"	d
CHECKED_IF	..\Catch2\src\catch2\catch_test_macros.hpp	126;"	d
CHECKED_ELSE	..\Catch2\src\catch2\catch_test_macros.hpp	127;"	d
CHECK_NOFAIL	..\Catch2\src\catch2\catch_test_macros.hpp	128;"	d
CHECK_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	130;"	d
CHECK_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	131;"	d
CHECK_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	132;"	d
TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	134;"	d
TEST_CASE_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	135;"	d
METHOD_AS_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	136;"	d
REGISTER_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	137;"	d
SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	138;"	d
DYNAMIC_SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	139;"	d
FAIL	..\Catch2\src\catch2\catch_test_macros.hpp	140;"	d
FAIL_CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	141;"	d
SUCCEED	..\Catch2\src\catch2\catch_test_macros.hpp	142;"	d
STATIC_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	146;"	d
STATIC_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	147;"	d
STATIC_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	149;"	d
STATIC_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	150;"	d
SCENARIO	..\Catch2\src\catch2\catch_test_macros.hpp	154;"	d
SCENARIO_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	155;"	d
GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	156;"	d
AND_GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	157;"	d
WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	158;"	d
AND_WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	159;"	d
THEN	..\Catch2\src\catch2\catch_test_macros.hpp	160;"	d
AND_THEN	..\Catch2\src\catch2\catch_test_macros.hpp	161;"	d
REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	165;"	d
REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	166;"	d
REQUIRE_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	168;"	d
REQUIRE_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	169;"	d
REQUIRE_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	170;"	d
CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	172;"	d
CHECK_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	173;"	d
CHECKED_IF	..\Catch2\src\catch2\catch_test_macros.hpp	174;"	d
CHECKED_ELSE	..\Catch2\src\catch2\catch_test_macros.hpp	175;"	d
CHECK_NOFAIL	..\Catch2\src\catch2\catch_test_macros.hpp	176;"	d
CHECK_THROWS	..\Catch2\src\catch2\catch_test_macros.hpp	178;"	d
CHECK_THROWS_AS	..\Catch2\src\catch2\catch_test_macros.hpp	179;"	d
CHECK_NOTHROW	..\Catch2\src\catch2\catch_test_macros.hpp	180;"	d
TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	182;"	d
TEST_CASE_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	183;"	d
METHOD_AS_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	184;"	d
REGISTER_TEST_CASE	..\Catch2\src\catch2\catch_test_macros.hpp	185;"	d
SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	186;"	d
DYNAMIC_SECTION	..\Catch2\src\catch2\catch_test_macros.hpp	187;"	d
FAIL	..\Catch2\src\catch2\catch_test_macros.hpp	188;"	d
FAIL_CHECK	..\Catch2\src\catch2\catch_test_macros.hpp	189;"	d
SUCCEED	..\Catch2\src\catch2\catch_test_macros.hpp	190;"	d
STATIC_REQUIRE	..\Catch2\src\catch2\catch_test_macros.hpp	192;"	d
STATIC_REQUIRE_FALSE	..\Catch2\src\catch2\catch_test_macros.hpp	193;"	d
SCENARIO	..\Catch2\src\catch2\catch_test_macros.hpp	196;"	d
SCENARIO_METHOD	..\Catch2\src\catch2\catch_test_macros.hpp	197;"	d
GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	199;"	d
AND_GIVEN	..\Catch2\src\catch2\catch_test_macros.hpp	200;"	d
WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	201;"	d
AND_WHEN	..\Catch2\src\catch2\catch_test_macros.hpp	202;"	d
THEN	..\Catch2\src\catch2\catch_test_macros.hpp	203;"	d
AND_THEN	..\Catch2\src\catch2\catch_test_macros.hpp	204;"	d
Catch	..\Catch2\src\catch2\catch_test_spec.cpp	/^namespace Catch {$/;"	n	file:
Pattern	..\Catch2\src\catch2\catch_test_spec.cpp	/^    TestSpec::Pattern::Pattern( std::string const& name )$/;"	f	class:Catch::TestSpec::Pattern
name	..\Catch2\src\catch2\catch_test_spec.cpp	/^    std::string const& TestSpec::Pattern::name() const {$/;"	f	class:Catch::std::TestSpec::Pattern
NamePattern	..\Catch2\src\catch2\catch_test_spec.cpp	/^    TestSpec::NamePattern::NamePattern( std::string const& name, std::string const& filterString )$/;"	f	class:Catch::TestSpec::NamePattern
matches	..\Catch2\src\catch2\catch_test_spec.cpp	/^    bool TestSpec::NamePattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::NamePattern
TagPattern	..\Catch2\src\catch2\catch_test_spec.cpp	/^    TestSpec::TagPattern::TagPattern( std::string const& tag, std::string const& filterString )$/;"	f	class:Catch::TestSpec::TagPattern
matches	..\Catch2\src\catch2\catch_test_spec.cpp	/^    bool TestSpec::TagPattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::TagPattern
matches	..\Catch2\src\catch2\catch_test_spec.cpp	/^    bool TestSpec::Filter::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::Filter
name	..\Catch2\src\catch2\catch_test_spec.cpp	/^    std::string TestSpec::Filter::name() const {$/;"	f	class:Catch::TestSpec::Filter
hasFilters	..\Catch2\src\catch2\catch_test_spec.cpp	/^    bool TestSpec::hasFilters() const {$/;"	f	class:Catch::TestSpec
matches	..\Catch2\src\catch2\catch_test_spec.cpp	/^    bool TestSpec::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec
matchesByFilter	..\Catch2\src\catch2\catch_test_spec.cpp	/^    TestSpec::Matches TestSpec::matchesByFilter( std::vector<TestCaseHandle> const& testCases, IConfig const& config ) const$/;"	f	class:Catch::TestSpec
getInvalidArgs	..\Catch2\src\catch2\catch_test_spec.cpp	/^    const TestSpec::vectorStrings& TestSpec::getInvalidArgs() const{$/;"	f	class:Catch::TestSpec
CATCH_TEST_SPEC_HPP_INCLUDED	..\Catch2\src\catch2\catch_test_spec.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_test_spec.hpp	/^namespace Catch {$/;"	n
TestSpec	..\Catch2\src\catch2\catch_test_spec.hpp	/^    class TestSpec {$/;"	c	namespace:Catch
Pattern	..\Catch2\src\catch2\catch_test_spec.hpp	/^        class Pattern {$/;"	c	class:Catch::TestSpec
m_name	..\Catch2\src\catch2\catch_test_spec.hpp	/^            std::string const m_name;$/;"	m	class:Catch::TestSpec::Pattern::std
NamePattern	..\Catch2\src\catch2\catch_test_spec.hpp	/^        class NamePattern : public Pattern {$/;"	c	class:Catch::TestSpec
override	..\Catch2\src\catch2\catch_test_spec.hpp	/^            bool matches( TestCaseInfo const& testCase ) const override;$/;"	m	class:Catch::TestSpec::NamePattern
m_wildcardPattern	..\Catch2\src\catch2\catch_test_spec.hpp	/^            WildcardPattern m_wildcardPattern;$/;"	m	class:Catch::TestSpec::NamePattern
TagPattern	..\Catch2\src\catch2\catch_test_spec.hpp	/^        class TagPattern : public Pattern {$/;"	c	class:Catch::TestSpec
override	..\Catch2\src\catch2\catch_test_spec.hpp	/^            bool matches( TestCaseInfo const& testCase ) const override;$/;"	m	class:Catch::TestSpec::TagPattern
m_tag	..\Catch2\src\catch2\catch_test_spec.hpp	/^            std::string m_tag;$/;"	m	class:Catch::TestSpec::TagPattern
Filter	..\Catch2\src\catch2\catch_test_spec.hpp	/^        struct Filter {$/;"	s	class:Catch::TestSpec
m_required	..\Catch2\src\catch2\catch_test_spec.hpp	/^            std::vector<Detail::unique_ptr<Pattern>> m_required;$/;"	m	struct:Catch::TestSpec::Filter
m_forbidden	..\Catch2\src\catch2\catch_test_spec.hpp	/^            std::vector<Detail::unique_ptr<Pattern>> m_forbidden;$/;"	m	struct:Catch::TestSpec::Filter
FilterMatch	..\Catch2\src\catch2\catch_test_spec.hpp	/^        struct FilterMatch {$/;"	s	class:Catch::TestSpec
name	..\Catch2\src\catch2\catch_test_spec.hpp	/^            std::string name;$/;"	m	struct:Catch::TestSpec::FilterMatch
tests	..\Catch2\src\catch2\catch_test_spec.hpp	/^            std::vector<TestCaseHandle const*> tests;$/;"	m	struct:Catch::TestSpec::FilterMatch
m_filters	..\Catch2\src\catch2\catch_test_spec.hpp	/^        std::vector<Filter> m_filters;$/;"	m	class:Catch::TestSpec
m_invalidArgs	..\Catch2\src\catch2\catch_test_spec.hpp	/^        std::vector<std::string> m_invalidArgs;$/;"	m	class:Catch::TestSpec
nanosecondsInSecond	..\Catch2\src\catch2\catch_timer.cpp	/^static const uint64_t nanosecondsInSecond = 1000000000;$/;"	v	file:
Catch	..\Catch2\src\catch2\catch_timer.cpp	/^namespace Catch {$/;"	n	file:
start	..\Catch2\src\catch2\catch_timer.cpp	/^    void Timer::start() {$/;"	f	class:Catch::Timer
CATCH_TIMER_HPP_INCLUDED	..\Catch2\src\catch2\catch_timer.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_timer.hpp	/^namespace Catch {$/;"	n
Timer	..\Catch2\src\catch2\catch_timer.hpp	/^    class Timer {$/;"	c	namespace:Catch
m_nanoseconds	..\Catch2\src\catch2\catch_timer.hpp	/^        uint64_t m_nanoseconds = 0;$/;"	m	class:Catch::Timer
uint64_t	..\Catch2\src\catch2\catch_timer.hpp	/^        auto getElapsedNanoseconds() const -> uint64_t;$/;"	m	class:Catch::Timer
uint64_t	..\Catch2\src\catch2\catch_timer.hpp	/^        auto getElapsedMicroseconds() const -> uint64_t;$/;"	m	class:Catch::Timer
Catch	..\Catch2\src\catch2\catch_tostring.cpp	/^namespace Catch {$/;"	n	file:
Detail	..\Catch2\src\catch2\catch_tostring.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
unprintableString	..\Catch2\src\catch2\catch_tostring.cpp	/^    const std::string unprintableString = "{?}";$/;"	v
hexThreshold	..\Catch2\src\catch2\catch_tostring.cpp	/^        const int hexThreshold = 255;$/;"	v
Endianness	..\Catch2\src\catch2\catch_tostring.cpp	/^        struct Endianness {$/;"	s	namespace:Catch::Detail::__anon39	file:
Arch	..\Catch2\src\catch2\catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	g	struct:Catch::Detail::__anon39::Endianness	file:
Big	..\Catch2\src\catch2\catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon39::Endianness::Arch	file:
Little	..\Catch2\src\catch2\catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon39::Endianness::Arch	file:
which	..\Catch2\src\catch2\catch_tostring.cpp	/^            static Arch which() {$/;"	f	struct:Catch::Detail::__anon39::Endianness
fpToString	..\Catch2\src\catch2\catch_tostring.cpp	/^        std::string fpToString(T value, int precision) {$/;"	f	namespace:Catch::Detail::__anon39
rawMemoryToString	..\Catch2\src\catch2\catch_tostring.cpp	/^    std::string rawMemoryToString( const void *object, std::size_t size ) {$/;"	f	namespace:Catch::Detail
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<std::string>::convert(const std::string& str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<std::string_view>::convert(std::string_view str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<char const*>::convert(char const* str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<char*>::convert(char* str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<std::wstring>::convert(const std::wstring& wstr) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<std::wstring_view>::convert(std::wstring_view str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<wchar_t const*>::convert(wchar_t const * str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<wchar_t *>::convert(wchar_t * str) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<std::byte>::convert(std::byte value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<int>::convert(int value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<long>::convert(long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<long long>::convert(long long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<unsigned int>::convert(unsigned int value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<unsigned long>::convert(unsigned long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<unsigned long long>::convert(unsigned long long value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<signed char>::convert(signed char value) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<char>::convert(char c) {$/;"	f	class:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<unsigned char>::convert(unsigned char c) {$/;"	f	class:Catch::StringMaker
precision	..\Catch2\src\catch2\catch_tostring.cpp	/^int StringMaker<float>::precision = 5;$/;"	m	class:Catch::StringMaker	file:
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<float>::convert(float value) {$/;"	f	class:Catch::StringMaker
precision	..\Catch2\src\catch2\catch_tostring.cpp	/^int StringMaker<double>::precision = 10;$/;"	m	class:Catch::StringMaker	file:
convert	..\Catch2\src\catch2\catch_tostring.cpp	/^std::string StringMaker<double>::convert(double value) {$/;"	f	class:Catch::StringMaker
CATCH_TOSTRING_HPP_INCLUDED	..\Catch2\src\catch2\catch_tostring.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_tostring.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\src\catch2\catch_tostring.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
rawMemoryToString	..\Catch2\src\catch2\catch_tostring.hpp	/^        std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
IsStreamInsertable	..\Catch2\src\catch2\catch_tostring.hpp	/^        class IsStreamInsertable {$/;"	c	namespace:Catch::Detail
false_type	..\Catch2\src\catch2\catch_tostring.hpp	/^            static auto test(...)->std::false_type;$/;"	m	class:Catch::Detail::IsStreamInsertable::std
value	..\Catch2\src\catch2\catch_tostring.hpp	/^            static const bool value = decltype(test<std::ostream, const T&>(0))::value;$/;"	m	class:Catch::Detail::IsStreamInsertable
convertUnstreamable	..\Catch2\src\catch2\catch_tostring.hpp	/^        std::string> convertUnstreamable( T const& ) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	..\Catch2\src\catch2\catch_tostring.hpp	/^         std::string> convertUnstreamable(T const& ex) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	..\Catch2\src\catch2\catch_tostring.hpp	/^        std::string> convertUnstreamable( T const& value ) {$/;"	f	namespace:Catch::Detail
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^            convert(const Fake& value) {$/;"	f	struct:Catch::StringMaker
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^            convert( const Fake& value ) {$/;"	f	struct:Catch::StringMaker
Detail	..\Catch2\src\catch2\catch_tostring.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
stringify	..\Catch2\src\catch2\catch_tostring.hpp	/^        std::string stringify(const T& e) {$/;"	f	namespace:Catch::Detail
convertUnknownEnumToString	..\Catch2\src\catch2\catch_tostring.hpp	/^        std::string convertUnknownEnumToString( E e ) {$/;"	f	namespace:Catch::Detail
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::string> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::string_view> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<char const *> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<char *> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::wstring> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::wstring_view> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<wchar_t const *> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<wchar_t *> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<char[SZ]> {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(char const* str) {$/;"	f	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<signed char[SZ]> {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(signed char const* str) {$/;"	f	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<unsigned char[SZ]> {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(unsigned char const* str) {$/;"	f	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::byte> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<int> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<long> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<long long> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<unsigned int> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<unsigned long> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<unsigned long long> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<bool> {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(bool b) {$/;"	f	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<char> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<signed char> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<unsigned char> {$/;"	s	namespace:Catch
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::nullptr_t> {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(std::nullptr_t) {$/;"	f	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<float> {$/;"	s	namespace:Catch
precision	..\Catch2\src\catch2\catch_tostring.hpp	/^        static int precision;$/;"	m	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<double> {$/;"	s	namespace:Catch
precision	..\Catch2\src\catch2\catch_tostring.hpp	/^        static int precision;$/;"	m	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<T*> {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(U* p) {$/;"	f	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<R C::*> {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(R C::* p) {$/;"	f	struct:Catch::StringMaker
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<T^> {$/;"	s	namespace:Catch
Detail	..\Catch2\src\catch2\catch_tostring.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
rangeToString	..\Catch2\src\catch2\catch_tostring.hpp	/^        std::string rangeToString(InputIterator first, Sentinel last) {$/;"	f	namespace:Catch::Detail
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	..\Catch2\src\catch2\catch_tostring.hpp	336;"	d
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	..\Catch2\src\catch2\catch_tostring.hpp	337;"	d
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	..\Catch2\src\catch2\catch_tostring.hpp	338;"	d
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	..\Catch2\src\catch2\catch_tostring.hpp	339;"	d
Catch	..\Catch2\src\catch2\catch_tostring.hpp	/^namespace Catch {$/;"	n
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::pair<T1, T2> > {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(const std::pair<T1, T2>& pair) {$/;"	f	struct:Catch::StringMaker
Catch	..\Catch2\src\catch2\catch_tostring.hpp	/^namespace Catch {$/;"	n
StringMaker	..\Catch2\src\catch2\catch_tostring.hpp	/^    struct StringMaker<std::optional<T> > {$/;"	s	namespace:Catch
convert	..\Catch2\src\catch2\catch_tostring.hpp	/^        static std::string convert(const std::optional<T>& optional) {$/;"	f	struct:Catch::StringMaker
Catch	..\Catch2\src\catch2\catch_tostring.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\src\catch2\catch_tostring.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
INTERNAL_CATCH_REGISTER_ENUM	..\Catch2\src\catch2\catch_tostring.hpp	635;"	d
CATCH_REGISTER_ENUM	..\Catch2\src\catch2\catch_tostring.hpp	645;"	d
Catch	..\Catch2\src\catch2\catch_totals.cpp	/^namespace Catch {$/;"	n	file:
operator -	..\Catch2\src\catch2\catch_totals.cpp	/^    Counts Counts::operator - ( Counts const& other ) const {$/;"	f	class:Catch::Counts
operator +=	..\Catch2\src\catch2\catch_totals.cpp	/^    Counts& Counts::operator += ( Counts const& other ) {$/;"	f	class:Catch::Counts
total	..\Catch2\src\catch2\catch_totals.cpp	/^    std::size_t Counts::total() const {$/;"	f	class:Catch::Counts
allPassed	..\Catch2\src\catch2\catch_totals.cpp	/^    bool Counts::allPassed() const {$/;"	f	class:Catch::Counts
allOk	..\Catch2\src\catch2\catch_totals.cpp	/^    bool Counts::allOk() const {$/;"	f	class:Catch::Counts
operator -	..\Catch2\src\catch2\catch_totals.cpp	/^    Totals Totals::operator - ( Totals const& other ) const {$/;"	f	class:Catch::Totals
operator +=	..\Catch2\src\catch2\catch_totals.cpp	/^    Totals& Totals::operator += ( Totals const& other ) {$/;"	f	class:Catch::Totals
delta	..\Catch2\src\catch2\catch_totals.cpp	/^    Totals Totals::delta( Totals const& prevTotals ) const {$/;"	f	class:Catch::Totals
CATCH_TOTALS_HPP_INCLUDED	..\Catch2\src\catch2\catch_totals.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_totals.hpp	/^namespace Catch {$/;"	n
Counts	..\Catch2\src\catch2\catch_totals.hpp	/^    struct Counts {$/;"	s	namespace:Catch
passed	..\Catch2\src\catch2\catch_totals.hpp	/^        std::size_t passed = 0;$/;"	m	struct:Catch::Counts
failed	..\Catch2\src\catch2\catch_totals.hpp	/^        std::size_t failed = 0;$/;"	m	struct:Catch::Counts
failedButOk	..\Catch2\src\catch2\catch_totals.hpp	/^        std::size_t failedButOk = 0;$/;"	m	struct:Catch::Counts
Totals	..\Catch2\src\catch2\catch_totals.hpp	/^    struct Totals {$/;"	s	namespace:Catch
error	..\Catch2\src\catch2\catch_totals.hpp	/^        int error = 0;$/;"	m	struct:Catch::Totals
assertions	..\Catch2\src\catch2\catch_totals.hpp	/^        Counts assertions;$/;"	m	struct:Catch::Totals
testCases	..\Catch2\src\catch2\catch_totals.hpp	/^        Counts testCases;$/;"	m	struct:Catch::Totals
CATCH_TRANSLATE_EXCEPTION_HPP_INCLUDED	..\Catch2\src\catch2\catch_translate_exception.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_translate_exception.hpp	/^namespace Catch {$/;"	n
ExceptionTranslatorRegistrar	..\Catch2\src\catch2\catch_translate_exception.hpp	/^    class ExceptionTranslatorRegistrar {$/;"	c	namespace:Catch
ExceptionTranslator	..\Catch2\src\catch2\catch_translate_exception.hpp	/^        class ExceptionTranslator : public IExceptionTranslator {$/;"	c	class:Catch::ExceptionTranslatorRegistrar
ExceptionTranslator	..\Catch2\src\catch2\catch_translate_exception.hpp	/^            ExceptionTranslator( std::string(*translateFunction)( T const& ) )$/;"	f	class:Catch::ExceptionTranslatorRegistrar::ExceptionTranslator
m_translateFunction	..\Catch2\src\catch2\catch_translate_exception.hpp	/^            std::string(*m_translateFunction)( T const& );$/;"	m	class:Catch::ExceptionTranslatorRegistrar::ExceptionTranslator::std
ExceptionTranslatorRegistrar	..\Catch2\src\catch2\catch_translate_exception.hpp	/^        ExceptionTranslatorRegistrar( std::string(*translateFunction)( T const& ) ) {$/;"	f	class:Catch::ExceptionTranslatorRegistrar
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	..\Catch2\src\catch2\catch_translate_exception.hpp	59;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	..\Catch2\src\catch2\catch_translate_exception.hpp	67;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION_NO_REG	..\Catch2\src\catch2\catch_translate_exception.hpp	70;"	d
CATCH_TRANSLATE_EXCEPTION	..\Catch2\src\catch2\catch_translate_exception.hpp	77;"	d
CATCH_TRANSLATE_EXCEPTION	..\Catch2\src\catch2\catch_translate_exception.hpp	79;"	d
Catch	..\Catch2\src\catch2\catch_version.cpp	/^namespace Catch {$/;"	n	file:
Version	..\Catch2\src\catch2\catch_version.cpp	/^    Version::Version$/;"	f	class:Catch::Version
operator <<	..\Catch2\src\catch2\catch_version.cpp	/^    std::ostream& operator << ( std::ostream& os, Version const& version ) {$/;"	f	namespace:Catch
libraryVersion	..\Catch2\src\catch2\catch_version.cpp	/^    Version const& libraryVersion() {$/;"	f	namespace:Catch
CATCH_VERSION_HPP_INCLUDED	..\Catch2\src\catch2\catch_version.hpp	9;"	d
Catch	..\Catch2\src\catch2\catch_version.hpp	/^namespace Catch {$/;"	n
Version	..\Catch2\src\catch2\catch_version.hpp	/^    struct Version {$/;"	s	namespace:Catch
majorVersion	..\Catch2\src\catch2\catch_version.hpp	/^        unsigned int const majorVersion;$/;"	m	struct:Catch::Version
minorVersion	..\Catch2\src\catch2\catch_version.hpp	/^        unsigned int const minorVersion;$/;"	m	struct:Catch::Version
patchNumber	..\Catch2\src\catch2\catch_version.hpp	/^        unsigned int const patchNumber;$/;"	m	struct:Catch::Version
branchName	..\Catch2\src\catch2\catch_version.hpp	/^        char const * const branchName;$/;"	m	struct:Catch::Version
buildNumber	..\Catch2\src\catch2\catch_version.hpp	/^        unsigned int const buildNumber;$/;"	m	struct:Catch::Version
CATCH_VERSION_MACROS_HPP_INCLUDED	..\Catch2\src\catch2\catch_version_macros.hpp	9;"	d
CATCH_VERSION_MAJOR	..\Catch2\src\catch2\catch_version_macros.hpp	11;"	d
CATCH_VERSION_MINOR	..\Catch2\src\catch2\catch_version_macros.hpp	12;"	d
CATCH_VERSION_PATCH	..\Catch2\src\catch2\catch_version_macros.hpp	13;"	d
CATCH_GENERATORS_HPP_INCLUDED	..\Catch2\src\catch2\generators\catch_generators.hpp	9;"	d
Catch	..\Catch2\src\catch2\generators\catch_generators.hpp	/^namespace Catch {$/;"	n
Generators	..\Catch2\src\catch2\generators\catch_generators.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\generators\catch_generators.hpp	/^namespace Detail {$/;"	n	namespace:Catch::Generators
IGenerator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    struct IGenerator : GeneratorUntypedBase {$/;"	s	namespace:Catch::Generators
override	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        ~IGenerator() override = default;$/;"	m	struct:Catch::Generators::IGenerator
final	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    class GeneratorWrapper final {$/;"	c	namespace:Catch::Generators
m_generator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        GeneratorPtr<T> m_generator;$/;"	m	class:Catch::Generators::final
GeneratorWrapper	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        GeneratorWrapper(IGenerator<T>* generator):$/;"	f	class:Catch::Generators::final
GeneratorWrapper	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        GeneratorWrapper(GeneratorPtr<T> generator):$/;"	f	class:Catch::Generators::final
get	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        T const& get() const {$/;"	f	class:Catch::Generators::final
next	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        bool next() {$/;"	f	class:Catch::Generators::final
final	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    class SingleValueGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_value	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        T m_value;$/;"	m	class:Catch::Generators::final
SingleValueGenerator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        SingleValueGenerator(T const& value) :$/;"	f	class:Catch::Generators::final
SingleValueGenerator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        SingleValueGenerator(T&& value):$/;"	f	class:Catch::Generators::final
final	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    class FixedValuesGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_values	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        std::vector<T> m_values;$/;"	m	class:Catch::Generators::final
m_idx	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        size_t m_idx = 0;$/;"	m	class:Catch::Generators::final
FixedValuesGenerator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        FixedValuesGenerator( std::initializer_list<T> values ) : m_values( values ) {}$/;"	f	class:Catch::Generators::final
value	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    GeneratorWrapper<DecayedT> value( T&& value ) {$/;"	f	namespace:Catch::Generators
values	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    GeneratorWrapper<T> values(std::initializer_list<T> values) {$/;"	f	namespace:Catch::Generators
Generators	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    class Generators : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_generators	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        std::vector<GeneratorWrapper<T>> m_generators;$/;"	m	class:Catch::Generators::Generators
m_current	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        size_t m_current = 0;$/;"	m	class:Catch::Generators::Generators
add_generator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        void add_generator( GeneratorWrapper<T>&& generator ) {$/;"	f	class:Catch::Generators::Generators
add_generator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        void add_generator( T const& val ) {$/;"	f	class:Catch::Generators::Generators
add_generator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        void add_generator( T&& val ) {$/;"	f	class:Catch::Generators::Generators
add_generator	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        add_generator( U&& val ) {$/;"	f	class:Catch::Generators::Generators
add_generators	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        template <typename U> void add_generators( U&& valueOrGenerator ) {$/;"	f	class:Catch::Generators::Generators
add_generators	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        void add_generators( U&& valueOrGenerator, Gs&&... moreGenerators ) {$/;"	f	class:Catch::Generators::Generators
Generators	..\Catch2\src\catch2\generators\catch_generators.hpp	/^        Generators(Gs &&... moreGenerators) {$/;"	f	class:Catch::Generators::Generators
table	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    table( std::initializer_list<std::tuple<std::decay_t<Ts>...>> tuples ) {$/;"	f	namespace:Catch::Generators
as	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    struct as {};$/;"	s	namespace:Catch::Generators
get	..\Catch2\src\catch2\generators\catch_generators.hpp	/^    auto generate( StringRef generatorName, SourceLineInfo const& lineInfo, L const& generatorExpression ) -> decltype(std::declval<decltype(generatorExpression())>().get()) {$/;"	f	namespace:Catch::Generators
GENERATE	..\Catch2\src\catch2\generators\catch_generators.hpp	220;"	d
GENERATE_COPY	..\Catch2\src\catch2\generators\catch_generators.hpp	224;"	d
GENERATE_REF	..\Catch2\src\catch2\generators\catch_generators.hpp	228;"	d
CATCH_GENERATORS_ADAPTERS_HPP_INCLUDED	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	9;"	d
Catch	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^namespace Catch {$/;"	n
Generators	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^namespace Generators {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    class TakeGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_generator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::final
m_returned	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        size_t m_returned = 0;$/;"	m	class:Catch::Generators::final
m_target	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        size_t m_target;$/;"	m	class:Catch::Generators::final
TakeGenerator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        TakeGenerator(size_t target, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::final
take	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    GeneratorWrapper<T> take(size_t target, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
final	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    class FilterGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_generator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::final
m_predicate	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        Predicate m_predicate;$/;"	m	class:Catch::Generators::final
FilterGenerator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        FilterGenerator(P&& pred, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::final
filter	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    GeneratorWrapper<T> filter(Predicate&& pred, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
final	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    class RepeatGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_generator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::final
m_returned	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        mutable std::vector<T> m_returned;$/;"	m	class:Catch::Generators::final
m_target_repeats	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        size_t m_target_repeats;$/;"	m	class:Catch::Generators::final
m_current_repeat	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        size_t m_current_repeat = 0;$/;"	m	class:Catch::Generators::final
m_repeat_index	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        size_t m_repeat_index = 0;$/;"	m	class:Catch::Generators::final
RepeatGenerator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        RepeatGenerator(size_t repeats, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::final
repeat	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    GeneratorWrapper<T> repeat(size_t repeats, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
final	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    class MapGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_generator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        GeneratorWrapper<U> m_generator;$/;"	m	class:Catch::Generators::final
m_function	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        Func m_function;$/;"	m	class:Catch::Generators::final
m_cache	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        T m_cache;$/;"	m	class:Catch::Generators::final
MapGenerator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        MapGenerator(F2&& function, GeneratorWrapper<U>&& generator) :$/;"	f	class:Catch::Generators::final
map	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    GeneratorWrapper<T> map(Func&& function, GeneratorWrapper<U>&& generator) {$/;"	f	namespace:Catch::Generators
map	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    GeneratorWrapper<T> map(Func&& function, GeneratorWrapper<U>&& generator) {$/;"	f	namespace:Catch::Generators
final	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    class ChunkGenerator final : public IGenerator<std::vector<T>> {$/;"	c	namespace:Catch::Generators
m_chunk	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        std::vector<T> m_chunk;$/;"	m	class:Catch::Generators::final
m_chunk_size	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        size_t m_chunk_size;$/;"	m	class:Catch::Generators::final
m_generator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::final
m_used_up	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        bool m_used_up = false;$/;"	m	class:Catch::Generators::final
ChunkGenerator	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^        ChunkGenerator(size_t size, GeneratorWrapper<T> generator) :$/;"	f	class:Catch::Generators::final
chunk	..\Catch2\src\catch2\generators\catch_generators_adapters.hpp	/^    GeneratorWrapper<std::vector<T>> chunk(size_t size, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
CATCH_GENERATORS_ALL_HPP_INCLUDED	..\Catch2\src\catch2\generators\catch_generators_all.hpp	22;"	d
CATCH_GENERATORS_RANDOM_HPP_INCLUDED	..\Catch2\src\catch2\generators\catch_generators_random.hpp	9;"	d
Catch	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^namespace Catch {$/;"	n
Generators	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^namespace Generators {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^class RandomFloatingGenerator final : public IGenerator<Float> {$/;"	c	namespace:Catch::Generators
m_rng	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    Catch::SimplePcg32& m_rng;$/;"	m	class:Catch::Generators::final
m_dist	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    std::uniform_real_distribution<Float> m_dist;$/;"	m	class:Catch::Generators::final
m_current_number	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    Float m_current_number;$/;"	m	class:Catch::Generators::final
RandomFloatingGenerator	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    RandomFloatingGenerator(Float a, Float b):$/;"	f	class:Catch::Generators::final
final	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^class RandomIntegerGenerator final : public IGenerator<Integer> {$/;"	c	namespace:Catch::Generators
m_rng	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    Catch::SimplePcg32& m_rng;$/;"	m	class:Catch::Generators::final
m_dist	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    std::uniform_int_distribution<Integer> m_dist;$/;"	m	class:Catch::Generators::final
m_current_number	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    Integer m_current_number;$/;"	m	class:Catch::Generators::final
RandomIntegerGenerator	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^    RandomIntegerGenerator(Integer a, Integer b):$/;"	f	class:Catch::Generators::final
random	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^random(T a, T b) {$/;"	f	namespace:Catch::Generators
random	..\Catch2\src\catch2\generators\catch_generators_random.hpp	/^random(T a, T b) {$/;"	f	namespace:Catch::Generators
CATCH_GENERATORS_RANGE_HPP_INCLUDED	..\Catch2\src\catch2\generators\catch_generators_range.hpp	9;"	d
Catch	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^namespace Catch {$/;"	n
Generators	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^namespace Generators {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^class RangeGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_current	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    T m_current;$/;"	m	class:Catch::Generators::final
m_end	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    T m_end;$/;"	m	class:Catch::Generators::final
m_step	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    T m_step;$/;"	m	class:Catch::Generators::final
m_positive	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    bool m_positive;$/;"	m	class:Catch::Generators::final
RangeGenerator	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    RangeGenerator(T const& start, T const& end, T const& step):$/;"	f	class:Catch::Generators::final
RangeGenerator	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    RangeGenerator(T const& start, T const& end):$/;"	f	class:Catch::Generators::final
range	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^GeneratorWrapper<T> range(T const& start, T const& end, T const& step) {$/;"	f	namespace:Catch::Generators
range	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^GeneratorWrapper<T> range(T const& start, T const& end) {$/;"	f	namespace:Catch::Generators
final	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^class IteratorGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
m_elems	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    std::vector<T> m_elems;$/;"	m	class:Catch::Generators::final
m_current	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    size_t m_current = 0;$/;"	m	class:Catch::Generators::final
IteratorGenerator	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^    IteratorGenerator(InputIterator first, InputSentinel last):m_elems(first, last) {$/;"	f	class:Catch::Generators::final
from_range	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^GeneratorWrapper<ResultType> from_range(InputIterator from, InputSentinel to) {$/;"	f	namespace:Catch::Generators
from_range	..\Catch2\src\catch2\generators\catch_generators_range.hpp	/^GeneratorWrapper<ResultType> from_range(Container const& cnt) {$/;"	f	namespace:Catch::Generators
CATCH_GENERATOR_EXCEPTION_HPP_INCLUDED	..\Catch2\src\catch2\generators\catch_generator_exception.hpp	9;"	d
Catch	..\Catch2\src\catch2\generators\catch_generator_exception.hpp	/^namespace Catch {$/;"	n
GeneratorException	..\Catch2\src\catch2\generators\catch_generator_exception.hpp	/^    class GeneratorException : public std::exception {$/;"	c	namespace:Catch
m_msg	..\Catch2\src\catch2\generators\catch_generator_exception.hpp	/^        const char* const m_msg = "";$/;"	m	class:Catch::GeneratorException
GeneratorException	..\Catch2\src\catch2\generators\catch_generator_exception.hpp	/^        GeneratorException(const char* msg):$/;"	f	class:Catch::GeneratorException
final	..\Catch2\src\catch2\generators\catch_generator_exception.hpp	/^        const char* what() const noexcept override final;$/;"	m	class:Catch::GeneratorException
Catch	..\Catch2\src\catch2\generators\internal\catch_generators_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\generators\internal\catch_generators_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Generators	..\Catch2\src\catch2\generators\internal\catch_generators_combined_tu.cpp	/^namespace Generators {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\generators\internal\catch_generators_combined_tu.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Generators	file:
throw_generator_exception	..\Catch2\src\catch2\generators\internal\catch_generators_combined_tu.cpp	/^    void throw_generator_exception(char const* msg) {$/;"	f	namespace:Catch::Generators::Detail
CATCH_INTERFACES_ALL_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_all.hpp	23;"	d
CATCH_INTERFACES_CAPTURE_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_capture.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_capture.hpp	/^namespace Catch {$/;"	n
IResultCapture	..\Catch2\src\catch2\interfaces\catch_interfaces_capture.hpp	/^    struct IResultCapture {$/;"	s	namespace:Catch
IGeneratorTracker	..\Catch2\src\catch2\interfaces\catch_interfaces_capture.hpp	/^        virtual auto acquireGeneratorTracker( StringRef generatorName, SourceLineInfo const& lineInfo ) -> IGeneratorTracker& = 0;$/;"	m	struct:Catch::IResultCapture
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
CATCH_INTERFACES_CONFIG_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^namespace Catch {$/;"	n
Verbosity	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    enum class Verbosity {$/;"	c	namespace:Catch
Quiet	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Quiet = 0,$/;"	m	class:Catch::Verbosity
Normal	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Normal,$/;"	m	class:Catch::Verbosity
WarnAbout	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    struct WarnAbout { enum What {$/;"	s	namespace:Catch
What	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    struct WarnAbout { enum What {$/;"	g	struct:Catch::WarnAbout
Nothing	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Nothing = 0x00,$/;"	e	enum:Catch::WarnAbout::What
NoAssertions	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        NoAssertions = 0x01,$/;"	e	enum:Catch::WarnAbout::What
NoTests	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        NoTests = 0x02$/;"	e	enum:Catch::WarnAbout::What
ShowDurations	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    enum class ShowDurations {$/;"	c	namespace:Catch
DefaultForReporter	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        DefaultForReporter,$/;"	m	class:Catch::ShowDurations
Always	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Always,$/;"	m	class:Catch::ShowDurations
TestRunOrder	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    enum class TestRunOrder {$/;"	c	namespace:Catch
Declared	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Declared,$/;"	m	class:Catch::TestRunOrder
LexicographicallySorted	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        LexicographicallySorted,$/;"	m	class:Catch::TestRunOrder
UseColour	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    enum class UseColour {$/;"	c	namespace:Catch
Auto	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Auto,$/;"	m	class:Catch::UseColour
Yes	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Yes,$/;"	m	class:Catch::UseColour
WaitForKeypress	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    struct WaitForKeypress { enum When {$/;"	s	namespace:Catch
When	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    struct WaitForKeypress { enum When {$/;"	g	struct:Catch::WaitForKeypress
Never	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        Never,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStart	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        BeforeStart = 1,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeExit	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        BeforeExit = 2,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStartAndExit	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^        BeforeStartAndExit = BeforeStart | BeforeExit$/;"	e	enum:Catch::WaitForKeypress::When
IConfig	..\Catch2\src\catch2\interfaces\catch_interfaces_config.hpp	/^    struct IConfig : Detail::NonCopyable {$/;"	s	namespace:Catch
CATCH_INTERFACES_ENUM_VALUES_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
EnumInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	/^        struct EnumInfo {$/;"	s	namespace:Catch::Detail
m_name	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	/^            StringRef m_name;$/;"	m	struct:Catch::Detail::EnumInfo
m_values	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	/^            std::vector<std::pair<int, StringRef>> m_values;$/;"	m	struct:Catch::Detail::EnumInfo
IMutableEnumValuesRegistry	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	/^    struct IMutableEnumValuesRegistry {$/;"	s	namespace:Catch
registerEnum	..\Catch2\src\catch2\interfaces\catch_interfaces_enum_values_registry.hpp	/^        Detail::EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::initializer_list<E> values ) {$/;"	f	class:Catch::IMutableEnumValuesRegistry::Detail
CATCH_INTERFACES_EXCEPTION_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_exception.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_exception.hpp	/^namespace Catch {$/;"	n
IExceptionTranslator	..\Catch2\src\catch2\interfaces\catch_interfaces_exception.hpp	/^    struct IExceptionTranslator {$/;"	s	namespace:Catch
IExceptionTranslatorRegistry	..\Catch2\src\catch2\interfaces\catch_interfaces_exception.hpp	/^    struct IExceptionTranslatorRegistry {$/;"	s	namespace:Catch
CATCH_INTERFACES_GENERATORTRACKER_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_generatortracker.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_generatortracker.hpp	/^namespace Catch {$/;"	n
Generators	..\Catch2\src\catch2\interfaces\catch_interfaces_generatortracker.hpp	/^    namespace Generators {$/;"	n	namespace:Catch
GeneratorUntypedBase	..\Catch2\src\catch2\interfaces\catch_interfaces_generatortracker.hpp	/^        class GeneratorUntypedBase {$/;"	c	namespace:Catch::Generators
IGeneratorTracker	..\Catch2\src\catch2\interfaces\catch_interfaces_generatortracker.hpp	/^    struct IGeneratorTracker {$/;"	s	namespace:Catch
bool	..\Catch2\src\catch2\interfaces\catch_interfaces_generatortracker.hpp	/^        virtual auto hasGenerator() const -> bool = 0;$/;"	m	struct:Catch::IGeneratorTracker
CATCH_INTERFACES_REGISTRY_HUB_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_registry_hub.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_registry_hub.hpp	/^namespace Catch {$/;"	n
IRegistryHub	..\Catch2\src\catch2\interfaces\catch_interfaces_registry_hub.hpp	/^    struct IRegistryHub {$/;"	s	namespace:Catch
IMutableRegistryHub	..\Catch2\src\catch2\interfaces\catch_interfaces_registry_hub.hpp	/^    struct IMutableRegistryHub {$/;"	s	namespace:Catch
noexcept	..\Catch2\src\catch2\interfaces\catch_interfaces_registry_hub.hpp	/^        virtual void registerStartupException() noexcept = 0;$/;"	m	struct:Catch::IMutableRegistryHub
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^namespace Catch {$/;"	n	file:
ReporterConfig	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    ReporterConfig::ReporterConfig( IConfig const* _fullConfig )$/;"	f	class:Catch::ReporterConfig
ReporterConfig	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    ReporterConfig::ReporterConfig( IConfig const* _fullConfig, std::ostream& _stream )$/;"	f	class:Catch::ReporterConfig
stream	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    std::ostream& ReporterConfig::stream() const { return *m_stream; }$/;"	f	class:Catch::ReporterConfig
fullConfig	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    IConfig const * ReporterConfig::fullConfig() const { return m_fullConfig; }$/;"	f	class:Catch::ReporterConfig
TestRunInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    TestRunInfo::TestRunInfo( std::string const& _name ) : name( _name ) {}$/;"	f	class:Catch::TestRunInfo
GroupInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    GroupInfo::GroupInfo(  std::string const& _name,$/;"	f	class:Catch::GroupInfo
AssertionStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^     AssertionStats::AssertionStats( AssertionResult const& _assertionResult,$/;"	f	class:Catch::AssertionStats
SectionStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    SectionStats::SectionStats(  SectionInfo const& _sectionInfo,$/;"	f	class:Catch::SectionStats
TestCaseStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    TestCaseStats::TestCaseStats(  TestCaseInfo const& _testInfo,$/;"	f	class:Catch::TestCaseStats
TestGroupStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    TestGroupStats::TestGroupStats( GroupInfo const& _groupInfo,$/;"	f	class:Catch::TestGroupStats
TestGroupStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    TestGroupStats::TestGroupStats( GroupInfo const& _groupInfo )$/;"	f	class:Catch::TestGroupStats
TestRunStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    TestRunStats::TestRunStats(   TestRunInfo const& _runInfo,$/;"	f	class:Catch::TestRunStats
fatalErrorEncountered	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.cpp	/^    void IStreamingReporter::fatalErrorEncountered( StringRef ) {}$/;"	f	class:Catch::IStreamingReporter
CATCH_INTERFACES_REPORTER_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^namespace Catch {$/;"	n
ReporterConfig	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct ReporterConfig {$/;"	s	namespace:Catch
m_stream	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::ostream* m_stream;$/;"	m	struct:Catch::ReporterConfig
m_fullConfig	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        IConfig const* m_fullConfig;$/;"	m	struct:Catch::ReporterConfig
TestRunInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct TestRunInfo {$/;"	s	namespace:Catch
name	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::string name;$/;"	m	struct:Catch::TestRunInfo
GroupInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct GroupInfo {$/;"	s	namespace:Catch
name	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::string name;$/;"	m	struct:Catch::GroupInfo
groupIndex	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::size_t groupIndex;$/;"	m	struct:Catch::GroupInfo
groupsCounts	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::size_t groupsCounts;$/;"	m	struct:Catch::GroupInfo
AssertionStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct AssertionStats {$/;"	s	namespace:Catch
assertionResult	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        AssertionResult assertionResult;$/;"	m	struct:Catch::AssertionStats
infoMessages	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::vector<MessageInfo> infoMessages;$/;"	m	struct:Catch::AssertionStats
totals	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Totals totals;$/;"	m	struct:Catch::AssertionStats
SectionStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct SectionStats {$/;"	s	namespace:Catch
sectionInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionStats
assertions	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Counts assertions;$/;"	m	struct:Catch::SectionStats
durationInSeconds	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionStats
missingAssertions	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        bool missingAssertions;$/;"	m	struct:Catch::SectionStats
TestCaseStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct TestCaseStats {$/;"	s	namespace:Catch
testInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        TestCaseInfo const * testInfo;$/;"	m	struct:Catch::TestCaseStats
totals	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestCaseStats
stdOut	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::string stdOut;$/;"	m	struct:Catch::TestCaseStats
stdErr	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::string stdErr;$/;"	m	struct:Catch::TestCaseStats
aborting	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestCaseStats
TestGroupStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct TestGroupStats {$/;"	s	namespace:Catch
groupInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        GroupInfo groupInfo;$/;"	m	struct:Catch::TestGroupStats
totals	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestGroupStats
aborting	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestGroupStats
TestRunStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct TestRunStats {$/;"	s	namespace:Catch
runInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        TestRunInfo runInfo;$/;"	m	struct:Catch::TestRunStats
totals	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestRunStats
aborting	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestRunStats
BenchmarkInfo	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct BenchmarkInfo {$/;"	s	namespace:Catch
name	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::string name;$/;"	m	struct:Catch::BenchmarkInfo
estimatedDuration	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        double estimatedDuration;$/;"	m	struct:Catch::BenchmarkInfo
iterations	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        int iterations;$/;"	m	struct:Catch::BenchmarkInfo
samples	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        int samples;$/;"	m	struct:Catch::BenchmarkInfo
resamples	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        unsigned int resamples;$/;"	m	struct:Catch::BenchmarkInfo
clockResolution	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        double clockResolution;$/;"	m	struct:Catch::BenchmarkInfo
clockCost	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        double clockCost;$/;"	m	struct:Catch::BenchmarkInfo
BenchmarkStats	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct BenchmarkStats {$/;"	s	namespace:Catch
info	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        BenchmarkInfo info;$/;"	m	struct:Catch::BenchmarkStats
samples	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        std::vector<Duration> samples;$/;"	m	struct:Catch::BenchmarkStats
mean	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Benchmark::Estimate<Duration> mean;$/;"	m	struct:Catch::BenchmarkStats
standardDeviation	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Benchmark::Estimate<Duration> standardDeviation;$/;"	m	struct:Catch::BenchmarkStats
outliers	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        Benchmark::OutlierClassification outliers;$/;"	m	struct:Catch::BenchmarkStats
outlierVariance	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        double outlierVariance;$/;"	m	struct:Catch::BenchmarkStats
operator BenchmarkStats<Duration2>	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        operator BenchmarkStats<Duration2>() const {$/;"	f	struct:Catch::BenchmarkStats
ReporterPreferences	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct ReporterPreferences {$/;"	s	namespace:Catch
shouldRedirectStdOut	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        bool shouldRedirectStdOut = false;$/;"	m	struct:Catch::ReporterPreferences
shouldReportAllAssertions	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        bool shouldReportAllAssertions = false;$/;"	m	struct:Catch::ReporterPreferences
IStreamingReporter	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^    struct IStreamingReporter {$/;"	s	namespace:Catch
m_preferences	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        ReporterPreferences m_preferences;$/;"	m	struct:Catch::IStreamingReporter
m_config	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        IConfig const* m_config;$/;"	m	struct:Catch::IStreamingReporter
IStreamingReporter	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        IStreamingReporter( IConfig const* config ): m_config( config ) {}$/;"	f	struct:Catch::IStreamingReporter
getPreferences	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        ReporterPreferences const& getPreferences() const {$/;"	f	struct:Catch::IStreamingReporter
reportInvalidArguments	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        virtual void reportInvalidArguments(std::string const&) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkPreparing	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        virtual void benchmarkPreparing( std::string const& ) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkStarting	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        virtual void benchmarkStarting( BenchmarkInfo const& ) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkEnded	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        virtual void benchmarkEnded( BenchmarkStats<> const& ) {}$/;"	f	struct:Catch::IStreamingReporter
benchmarkFailed	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter.hpp	/^        virtual void benchmarkFailed( std::string const& ) {}$/;"	f	struct:Catch::IStreamingReporter
CATCH_INTERFACES_REPORTER_FACTORY_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter_factory.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter_factory.hpp	/^namespace Catch {$/;"	n
IReporterFactory	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter_factory.hpp	/^    struct IReporterFactory {$/;"	s	namespace:Catch
CATCH_INTERFACES_REPORTER_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter_registry.hpp	/^namespace Catch {$/;"	n
IReporterRegistry	..\Catch2\src\catch2\interfaces\catch_interfaces_reporter_registry.hpp	/^    struct IReporterRegistry {$/;"	s	namespace:Catch
CATCH_INTERFACES_RUNNER_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_runner.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_runner.hpp	/^namespace Catch {$/;"	n
IRunner	..\Catch2\src\catch2\interfaces\catch_interfaces_runner.hpp	/^    struct IRunner {$/;"	s	namespace:Catch
CATCH_INTERFACES_TAG_ALIAS_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_tag_alias_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_tag_alias_registry.hpp	/^namespace Catch {$/;"	n
ITagAliasRegistry	..\Catch2\src\catch2\interfaces\catch_interfaces_tag_alias_registry.hpp	/^    struct ITagAliasRegistry {$/;"	s	namespace:Catch
CATCH_INTERFACES_TESTCASE_HPP_INCLUDED	..\Catch2\src\catch2\interfaces\catch_interfaces_testcase.hpp	9;"	d
Catch	..\Catch2\src\catch2\interfaces\catch_interfaces_testcase.hpp	/^namespace Catch {$/;"	n
ITestInvoker	..\Catch2\src\catch2\interfaces\catch_interfaces_testcase.hpp	/^    struct ITestInvoker {$/;"	s	namespace:Catch
ITestCaseRegistry	..\Catch2\src\catch2\interfaces\catch_interfaces_testcase.hpp	/^    struct ITestCaseRegistry {$/;"	s	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^namespace Catch {$/;"	n	file:
AssertionHandler	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    AssertionHandler::AssertionHandler$/;"	f	class:Catch::AssertionHandler
getResultCapture	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^        m_resultCapture( getResultCapture() )$/;"	f	namespace:Catch
handleExpr	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::handleExpr( ITransientExpression const& expr ) {$/;"	f	class:Catch::AssertionHandler
handleMessage	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::handleMessage(ResultWas::OfType resultType, StringRef const& message) {$/;"	f	class:Catch::AssertionHandler
complete	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::complete() {$/;"	f	class:Catch::AssertionHandler
setCompleted	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::setCompleted() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedInflightException	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::handleUnexpectedInflightException() {$/;"	f	class:Catch::AssertionHandler
handleExceptionThrownAsExpected	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::handleExceptionThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleExceptionNotThrownAsExpected	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::handleExceptionNotThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedExceptionNotThrown	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::handleUnexpectedExceptionNotThrown() {$/;"	f	class:Catch::AssertionHandler
handleThrowingCallSkipped	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void AssertionHandler::handleThrowingCallSkipped() {$/;"	f	class:Catch::AssertionHandler
handleExceptionMatchExpr	..\Catch2\src\catch2\internal\catch_assertion_handler.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, std::string const& str, StringRef const& matcherString  ) {$/;"	f	namespace:Catch
CATCH_ASSERTION_HANDLER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^namespace Catch {$/;"	n
AssertionReaction	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^    struct AssertionReaction {$/;"	s	namespace:Catch
shouldDebugBreak	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        bool shouldDebugBreak = false;$/;"	m	struct:Catch::AssertionReaction
shouldThrow	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        bool shouldThrow = false;$/;"	m	struct:Catch::AssertionReaction
AssertionHandler	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^    class AssertionHandler {$/;"	c	namespace:Catch
m_assertionInfo	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::AssertionHandler
m_reaction	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        AssertionReaction m_reaction;$/;"	m	class:Catch::AssertionHandler
m_completed	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        bool m_completed = false;$/;"	m	class:Catch::AssertionHandler
m_resultCapture	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        IResultCapture& m_resultCapture;$/;"	m	class:Catch::AssertionHandler
~AssertionHandler	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        ~AssertionHandler() {$/;"	f	class:Catch::AssertionHandler
handleExpr	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        void handleExpr( ExprLhs<T> const& expr ) {$/;"	f	class:Catch::AssertionHandler
bool	..\Catch2\src\catch2\internal\catch_assertion_handler.hpp	/^        auto allowThrows() const -> bool;$/;"	m	class:Catch::AssertionHandler
CATCH_CASE_SENSITIVE_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_case_sensitive.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_case_sensitive.hpp	/^namespace Catch {$/;"	n
CaseSensitive	..\Catch2\src\catch2\internal\catch_case_sensitive.hpp	/^    enum class CaseSensitive { Yes, No };$/;"	c	namespace:Catch
Yes	..\Catch2\src\catch2\internal\catch_case_sensitive.hpp	/^    enum class CaseSensitive { Yes, No };$/;"	m	class:Catch::CaseSensitive
isOptPrefix	..\Catch2\src\catch2\internal\catch_clara.cpp	/^    bool isOptPrefix( char c ) {$/;"	f	namespace:__anon40
normaliseOpt	..\Catch2\src\catch2\internal\catch_clara.cpp	/^    std::string normaliseOpt( std::string const& optName ) {$/;"	f	namespace:__anon40
Catch	..\Catch2\src\catch2\internal\catch_clara.cpp	/^namespace Catch {$/;"	n	file:
Clara	..\Catch2\src\catch2\internal\catch_clara.cpp	/^    namespace Clara {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Clara	file:
loadBuffer	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            void TokenStream::loadBuffer() {$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            TokenStream::TokenStream( Args const& args ):$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            TokenStream::TokenStream( Iterator it_, Iterator itEnd_ ):$/;"	f	class:Catch::Clara::Detail::TokenStream
operator ++	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            TokenStream& TokenStream::operator++() {$/;"	f	class:Catch::Clara::Detail::TokenStream
convertInto	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            ParserResult convertInto( std::string const& source,$/;"	f	namespace:Catch::Clara::Detail
convertInto	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            ParserResult convertInto( std::string const& source,$/;"	f	namespace:Catch::Clara::Detail
cardinality	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            size_t ParserBase::cardinality() const { return 1; }$/;"	f	class:Catch::Clara::Detail::ParserBase
parse	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            InternalParseResult ParserBase::parse( Args const& args ) const {$/;"	f	class:Catch::Clara::Detail::ParserBase
ParseState	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            ParseState::ParseState( ParseResultType type,$/;"	f	class:Catch::Clara::Detail::ParseState
setFlag	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            ParserResult BoundFlagRef::setFlag( bool flag ) {$/;"	f	class:Catch::Clara::Detail::BoundFlagRef
isContainer	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            bool BoundRef::isContainer() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isFlag	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            bool BoundRef::isFlag() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isFlag	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            bool BoundFlagRefBase::isFlag() const { return true; }$/;"	f	class:Catch::Clara::Detail::BoundFlagRefBase
parse	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Detail::InternalParseResult Arg::parse(std::string const&,$/;"	f	class:Catch::Clara::Arg
Opt	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Opt::Opt(bool& ref) :$/;"	f	class:Catch::Clara::Opt
getHelpColumns	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        std::vector<Detail::HelpColumns> Opt::getHelpColumns() const {$/;"	f	class:Catch::Clara::Opt
isMatch	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        bool Opt::isMatch(std::string const& optToken) const {$/;"	f	class:Catch::Clara::Opt
parse	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Detail::InternalParseResult Opt::parse(std::string const&,$/;"	f	class:Catch::Clara::Opt
validate	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Detail::Result Opt::validate() const {$/;"	f	class:Catch::Clara::Opt
ExeName	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        ExeName::ExeName() :$/;"	f	class:Catch::Clara::ExeName
ExeName	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        ExeName::ExeName(std::string& ref) : ExeName() {$/;"	f	class:Catch::Clara::ExeName
parse	..\Catch2\src\catch2\internal\catch_clara.cpp	/^            ExeName::parse(std::string const&,$/;"	f	class:Catch::Clara::ExeName
set	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        ParserResult ExeName::set(std::string const& newName) {$/;"	f	class:Catch::Clara::ExeName
operator |=	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Parser& Parser::operator|=( Parser const& other ) {$/;"	f	class:Catch::Clara::Parser
getHelpColumns	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        std::vector<Detail::HelpColumns> Parser::getHelpColumns() const {$/;"	f	class:Catch::Clara::Parser
writeToStream	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        void Parser::writeToStream( std::ostream& os ) const {$/;"	f	class:Catch::Clara::Parser
validate	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Detail::Result Parser::validate() const {$/;"	f	class:Catch::Clara::Parser
parse	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Parser::parse( std::string const& exeName,$/;"	f	class:Catch::Clara::Parser
Args	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Args::Args(int argc, char const* const* argv) :$/;"	f	class:Catch::Clara::Args
Args	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Args::Args(std::initializer_list<std::string> args) :$/;"	f	class:Catch::Clara::Args
Help	..\Catch2\src\catch2\internal\catch_clara.cpp	/^        Help::Help( bool& showHelpFlag ):$/;"	f	class:Catch::Clara::Help
CATCH_CLARA_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_clara.hpp	9;"	d
CLARA_CONFIG_OPTIONAL_TYPE	..\Catch2\src\catch2\internal\catch_clara.hpp	27;"	d
Catch	..\Catch2\src\catch2\internal\catch_clara.hpp	/^namespace Catch {$/;"	n
Clara	..\Catch2\src\catch2\internal\catch_clara.hpp	/^    namespace Clara {$/;"	n	namespace:Catch
ParseResultType	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        enum class ParseResultType {$/;"	c	namespace:Catch::Clara
Matched	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            Matched,$/;"	m	class:Catch::Clara::ParseResultType
NoMatch	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            NoMatch,$/;"	m	class:Catch::Clara::ParseResultType
ShortCircuitAll	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            ShortCircuitAll,$/;"	m	class:Catch::Clara::ParseResultType
Detail	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Clara
UnaryLambdaTraits	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct UnaryLambdaTraits$/;"	s	namespace:Catch::Clara::Detail
UnaryLambdaTraits	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct UnaryLambdaTraits<ReturnT ( ClassT::* )( Args... ) const> {$/;"	s	namespace:Catch::Clara::Detail
isValid	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                static const bool isValid = false;$/;"	m	struct:Catch::Clara::Detail::UnaryLambdaTraits
UnaryLambdaTraits	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct UnaryLambdaTraits<ReturnT ( ClassT::* )( ArgT ) const> {$/;"	s	namespace:Catch::Clara::Detail
isValid	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                static const bool isValid = true;$/;"	m	struct:Catch::Clara::Detail::UnaryLambdaTraits
TokenType	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            enum class TokenType { Option, Argument };$/;"	c	namespace:Catch::Clara::Detail
Option	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            enum class TokenType { Option, Argument };$/;"	m	class:Catch::Clara::Detail::TokenType
Token	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct Token {$/;"	s	namespace:Catch::Clara::Detail
type	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                TokenType type;$/;"	m	struct:Catch::Clara::Detail::Token
token	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::string token;$/;"	m	struct:Catch::Clara::Detail::Token
TokenStream	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            class TokenStream {$/;"	c	namespace:Catch::Clara::Detail
itEnd	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                Iterator itEnd;$/;"	m	class:Catch::Clara::Detail::TokenStream
m_tokenBuffer	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::vector<Token> m_tokenBuffer;$/;"	m	class:Catch::Clara::Detail::TokenStream
operator bool	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit operator bool() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
count	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                size_t count() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
operator *	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                Token operator*() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
operator ->	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                Token const* operator->() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
ResultType	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            enum class ResultType {$/;"	c	namespace:Catch::Clara::Detail
Ok	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                Ok,          \/\/\/< No errors$/;"	m	class:Catch::Clara::Detail::ResultType
LogicError	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                LogicError,  \/\/\/< Error in user-specified arguments for$/;"	m	class:Catch::Clara::Detail::ResultType
ResultBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            class ResultBase {$/;"	c	namespace:Catch::Clara::Detail
ResultBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ResultBase( ResultType type ): m_type( type ) {}$/;"	f	class:Catch::Clara::Detail::ResultBase
m_type	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ResultType m_type;$/;"	m	class:Catch::Clara::Detail::ResultBase
ResultValueBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            template <typename T> class ResultValueBase : public ResultBase {$/;"	c	namespace:Catch::Clara::Detail
ResultValueBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ResultValueBase( ResultType type ): ResultBase( type ) {}$/;"	f	class:Catch::Clara::Detail::ResultValueBase
ResultValueBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ResultValueBase( ResultValueBase const& other ):$/;"	f	class:Catch::Clara::Detail::ResultValueBase
ResultValueBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ResultValueBase( ResultType, T const& value ): ResultBase( ResultType::Ok ) {$/;"	f	class:Catch::Clara::Detail::ResultValueBase
m_value	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                    T m_value;$/;"	m	union:Catch::Clara::Detail::ResultValueBase::__anon41
ResultValueBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            template <> class ResultValueBase<void> : public ResultBase {$/;"	c	namespace:Catch::Clara::Detail
BasicResult	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            class BasicResult : public ResultValueBase<T> {$/;"	c	namespace:Catch::Clara::Detail
BasicResult	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit BasicResult( BasicResult<U> const& other ):$/;"	f	class:Catch::Clara::Detail::BasicResult
operator bool	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit operator bool() const {$/;"	f	class:Catch::Clara::Detail::BasicResult
m_errorMessage	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                    m_errorMessage; \/\/ Only populated if resultType is an error$/;"	m	class:Catch::Clara::Detail::BasicResult
BasicResult	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                BasicResult( ResultType type,$/;"	f	class:Catch::Clara::Detail::BasicResult
ParseState	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            class ParseState {$/;"	c	namespace:Catch::Clara::Detail
type	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ParseResultType type() const { return m_type; }$/;"	f	class:Catch::Clara::Detail::ParseState
remainingTokens	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                TokenStream const& remainingTokens() const {$/;"	f	class:Catch::Clara::Detail::ParseState
m_type	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ParseResultType m_type;$/;"	m	class:Catch::Clara::Detail::ParseState
m_remainingTokens	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                TokenStream m_remainingTokens;$/;"	m	class:Catch::Clara::Detail::ParseState
HelpColumns	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct HelpColumns {$/;"	s	namespace:Catch::Clara::Detail
left	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::string left;$/;"	m	struct:Catch::Clara::Detail::HelpColumns
right	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::string right;$/;"	m	struct:Catch::Clara::Detail::HelpColumns
convertInto	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            ParserResult convertInto( std::string const& source, T& target ) {$/;"	f	namespace:Catch::Clara::Detail
BoundRef	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct BoundRef : Catch::Detail::NonCopyable {$/;"	s	namespace:Catch::Clara::Detail
BoundValueRefBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct BoundValueRefBase : BoundRef {$/;"	s	namespace:Catch::Clara::Detail
ParserResult	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                    -> ParserResult = 0;$/;"	m	struct:Catch::Clara::Detail::BoundValueRefBase
BoundFlagRefBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct BoundFlagRefBase : BoundRef {$/;"	s	namespace:Catch::Clara::Detail
ParserResult	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                virtual auto setFlag( bool flag ) -> ParserResult = 0;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRefBase
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                bool isFlag() const override;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRefBase
BoundValueRef	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            template <typename T> struct BoundValueRef : BoundValueRefBase {$/;"	s	namespace:Catch::Clara::Detail
m_ref	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                T& m_ref;$/;"	m	struct:Catch::Clara::Detail::BoundValueRef
BoundValueRef	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit BoundValueRef( T& ref ): m_ref( ref ) {}$/;"	f	struct:Catch::Clara::Detail::BoundValueRef
BoundValueRef	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct BoundValueRef<std::vector<T>> : BoundValueRefBase {$/;"	s	namespace:Catch::Clara::Detail
m_ref	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::vector<T>& m_ref;$/;"	m	struct:Catch::Clara::Detail::BoundValueRef
BoundValueRef	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit BoundValueRef( std::vector<T>& ref ): m_ref( ref ) {}$/;"	f	struct:Catch::Clara::Detail::BoundValueRef
BoundFlagRef	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            struct BoundFlagRef : BoundFlagRefBase {$/;"	s	namespace:Catch::Clara::Detail
m_ref	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                bool& m_ref;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRef
BoundFlagRef	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit BoundFlagRef( bool& ref ): m_ref( ref ) {}$/;"	f	struct:Catch::Clara::Detail::BoundFlagRef
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ParserResult setFlag( bool flag ) override;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRef
LambdaInvoker	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            template <typename ReturnType> struct LambdaInvoker {$/;"	s	namespace:Catch::Clara::Detail
LambdaInvoker	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            template <> struct LambdaInvoker<void> {$/;"	s	namespace:Catch::Clara::Detail
BoundLambda	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            template <typename L> struct BoundLambda : BoundValueRefBase {$/;"	s	namespace:Catch::Clara::Detail
m_lambda	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                L m_lambda;$/;"	m	struct:Catch::Clara::Detail::BoundLambda
BoundLambda	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit BoundLambda( L const& lambda ): m_lambda( lambda ) {}$/;"	f	struct:Catch::Clara::Detail::BoundLambda
BoundFlagLambda	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            template <typename L> struct BoundFlagLambda : BoundFlagRefBase {$/;"	s	namespace:Catch::Clara::Detail
m_lambda	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                L m_lambda;$/;"	m	struct:Catch::Clara::Detail::BoundFlagLambda
BoundFlagLambda	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit BoundFlagLambda( L const& lambda ):$/;"	f	struct:Catch::Clara::Detail::BoundFlagLambda
Optionality	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            enum class Optionality { Optional, Required };$/;"	c	namespace:Catch::Clara::Detail
Optional	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            enum class Optionality { Optional, Required };$/;"	m	class:Catch::Clara::Detail::Optionality
ParserBase	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            class ParserBase {$/;"	c	namespace:Catch::Clara::Detail
InternalParseResult	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                    -> InternalParseResult = 0;$/;"	m	class:Catch::Clara::Detail::ParserBase
ComposableParserImpl	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            class ComposableParserImpl : public ParserBase {$/;"	c	namespace:Catch::Clara::Detail
Parser	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                auto operator|( T const& other ) const -> Parser;$/;"	m	class:Catch::Clara::Detail::ComposableParserImpl
ParserRefImpl	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            class ParserRefImpl : public ComposableParserImpl<DerivedT> {$/;"	c	namespace:Catch::Clara::Detail
m_optionality	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                Optionality m_optionality = Optionality::Optional;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
m_ref	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::shared_ptr<BoundRef> m_ref;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
m_hint	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::string m_hint;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
m_description	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::string m_description;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
ParserRefImpl	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                explicit ParserRefImpl( std::shared_ptr<BoundRef> const& ref ):$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
ParserRefImpl	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ParserRefImpl( T& ref, std::string const& hint ):$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
ParserRefImpl	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ParserRefImpl( LambdaT const& ref, std::string const& hint ):$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
hint	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                std::string const& hint() const { return m_hint; }$/;"	f	class:Catch::Clara::Detail::ParserRefImpl::std
Arg	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        class Arg : public Detail::ParserRefImpl<Arg> {$/;"	c	namespace:Catch::Clara
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                      Detail::TokenStream const& tokens) const override;$/;"	m	class:Catch::Clara::Arg
Opt	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        class Opt : public Detail::ParserRefImpl<Opt> {$/;"	c	namespace:Catch::Clara
m_optNames	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::vector<std::string> m_optNames;$/;"	m	class:Catch::Clara::Opt
Opt	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            explicit Opt(LambdaT const& ref) :$/;"	f	class:Catch::Clara::Opt
Opt	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            Opt(LambdaT const& ref, std::string const& hint) :$/;"	f	class:Catch::Clara::Opt
Opt	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            Opt(T& ref, std::string const& hint) :$/;"	f	class:Catch::Clara::Opt
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                      Detail::TokenStream const& tokens) const override;$/;"	m	class:Catch::Clara::Opt
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            Detail::Result validate() const override;$/;"	m	class:Catch::Clara::Opt
ExeName	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        class ExeName : public Detail::ComposableParserImpl<ExeName> {$/;"	c	namespace:Catch::Clara
m_name	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::shared_ptr<std::string> m_name;$/;"	m	class:Catch::Clara::ExeName
m_ref	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::shared_ptr<Detail::BoundValueRefBase> m_ref;$/;"	m	class:Catch::Clara::ExeName
ExeName	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            explicit ExeName(LambdaT const& lambda) : ExeName() {$/;"	f	class:Catch::Clara::ExeName
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                      Detail::TokenStream const& tokens) const override;$/;"	m	class:Catch::Clara::ExeName
name	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::string const& name() const { return *m_name; }$/;"	f	class:Catch::Clara::ExeName::std
Parser	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        class Parser : Detail::ParserBase {$/;"	c	namespace:Catch::Clara
m_exeName	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            mutable ExeName m_exeName;$/;"	m	class:Catch::Clara::Parser
m_options	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::vector<Opt> m_options;$/;"	m	class:Catch::Clara::Parser
m_args	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::vector<Arg> m_args;$/;"	m	class:Catch::Clara::Parser
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            Detail::Result validate() const override;$/;"	m	class:Catch::Clara::Parser
override	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                      Detail::TokenStream const& tokens) const override;$/;"	m	class:Catch::Clara::Parser
Args	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        class Args {$/;"	c	namespace:Catch::Clara
m_exeName	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::string m_exeName;$/;"	m	class:Catch::Clara::Args
m_args	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::vector<std::string> m_args;$/;"	m	class:Catch::Clara::Args
exeName	..\Catch2\src\catch2\internal\catch_clara.hpp	/^            std::string const& exeName() const { return m_exeName; }$/;"	f	class:Catch::Clara::Args::std
Help	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        struct Help : Opt {$/;"	s	namespace:Catch::Clara
Detail	..\Catch2\src\catch2\internal\catch_clara.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Clara
operator |	..\Catch2\src\catch2\internal\catch_clara.hpp	/^                ComposableParserImpl<DerivedT>::operator|(T const& other) const {$/;"	f	class:Catch::Clara::Detail::ComposableParserImpl
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
RegistrarForTagAliases	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    RegistrarForTagAliases::RegistrarForTagAliases(char const* alias, char const* tag, SourceLineInfo const& lineInfo) {$/;"	f	class:Catch::RegistrarForTagAliases
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
isnan	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    bool isnan(float f) {$/;"	f	namespace:Catch
isnan	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    bool isnan(double d) {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
uncaught_exceptions	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    bool uncaught_exceptions() {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
ErrnoGuard	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^        ErrnoGuard::ErrnoGuard():m_oldErrno(errno){}$/;"	f	class:Catch::ErrnoGuard
~ErrnoGuard	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^        ErrnoGuard::~ErrnoGuard() { errno = m_oldErrno; }$/;"	f	class:Catch::ErrnoGuard
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
formatReconstructedExpression	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    void formatReconstructedExpression( std::ostream &os, std::string const& lhs, StringRef op, std::string const& rhs ) {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
LeakDetector	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    LeakDetector::LeakDetector() {$/;"	f	class:Catch::LeakDetector
LeakDetector	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    Catch::LeakDetector::LeakDetector() {}$/;"	f	class:Catch::LeakDetector
~LeakDetector	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^Catch::LeakDetector::~LeakDetector() {$/;"	f	class:Catch::LeakDetector
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
MessageInfo	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    MessageInfo::MessageInfo(   StringRef const& _macroName,$/;"	f	class:Catch::MessageInfo
globalCount	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^    unsigned int MessageInfo::globalCount = 0;$/;"	m	class:Catch::MessageInfo	file:
Catch	..\Catch2\src\catch2\internal\catch_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Catch	..\Catch2\src\catch2\internal\catch_commandline.cpp	/^namespace Catch {$/;"	n	file:
makeCommandLineParser	..\Catch2\src\catch2\internal\catch_commandline.cpp	/^    Clara::Parser makeCommandLineParser( ConfigData& config ) {$/;"	f	namespace:Catch
CATCH_COMMANDLINE_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_commandline.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_commandline.hpp	/^namespace Catch {$/;"	n
CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	9;"	d
CATCH_CPP14_OR_GREATER	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	32;"	d
CATCH_CPP17_OR_GREATER	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	36;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	44;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	45;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	49;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	52;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	55;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	61;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	62;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	76;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	80;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	84;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	87;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	90;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	93;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	102;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	108;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	112;"	d
CATCH_CONFIG_COLOUR_NONE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	113;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	119;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	125;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	131;"	d
_BSD_SOURCE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	140;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	146;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	155;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	156;"	d
CATCH_CONFIG_COLOUR_NONE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	161;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	163;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	171;"	d
CATCH_INTERNAL_CONFIG_USE_ASYNC	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	179;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	185;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	192;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	201;"	d
CATCH_INTERNAL_CONFIG_NO_ASYNC	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	202;"	d
CATCH_CONFIG_COLOUR_NONE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	203;"	d
CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	207;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	214;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	219;"	d
CATCH_INTERNAL_CONFIG_CPP17_BYTE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	226;"	d
CATCH_CONFIG_NO_CPP17_VARIANT	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	237;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	239;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	242;"	d
CATCH_CONFIG_WINDOWS_SEH	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	249;"	d
CATCH_CONFIG_POSIX_SIGNALS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	253;"	d
CATCH_CONFIG_CPP11_TO_STRING	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	257;"	d
CATCH_CONFIG_CPP17_OPTIONAL	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	261;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	265;"	d
CATCH_CONFIG_CPP17_VARIANT	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	269;"	d
CATCH_CONFIG_CPP17_BYTE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	273;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	278;"	d
CATCH_CONFIG_NEW_CAPTURE	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	282;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	286;"	d
CATCH_CONFIG_POLYFILL_ISNAN	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	290;"	d
CATCH_CONFIG_USE_ASYNC	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	294;"	d
CATCH_CONFIG_GLOBAL_NEXTAFTER	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	298;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	305;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	308;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	311;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	314;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	317;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	320;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	326;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	330;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	332;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	336;"	d
CATCH_TRY	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	340;"	d
CATCH_CATCH_ALL	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	341;"	d
CATCH_CATCH_ANON	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	342;"	d
CATCH_TRY	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	344;"	d
CATCH_CATCH_ALL	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	345;"	d
CATCH_CATCH_ANON	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	346;"	d
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	..\Catch2\src\catch2\internal\catch_compiler_capabilities.hpp	350;"	d
CATCH_CONFIG_ANDROID_LOGWRITE_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_config_android_logwrite.hpp	18;"	d
CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE	..\Catch2\src\catch2\internal\catch_config_android_logwrite.hpp	21;"	d
CATCH_CONFIG_ANDROID_LOGWRITE	..\Catch2\src\catch2\internal\catch_config_android_logwrite.hpp	28;"	d
CATCH_CONFIG_COUNTER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_config_counter.hpp	19;"	d
CATCH_INTERNAL_CONFIG_COUNTER	..\Catch2\src\catch2\internal\catch_config_counter.hpp	22;"	d
CATCH_CONFIG_COUNTER	..\Catch2\src\catch2\internal\catch_config_counter.hpp	28;"	d
CATCH_CONFIG_UNCAUGHT_EXCEPTIONS_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_config_uncaught_exceptions.hpp	18;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	..\Catch2\src\catch2\internal\catch_config_uncaught_exceptions.hpp	22;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	..\Catch2\src\catch2\internal\catch_config_uncaught_exceptions.hpp	32;"	d
CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	..\Catch2\src\catch2\internal\catch_config_uncaught_exceptions.hpp	40;"	d
CATCH_CONFIG_WCHAR_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_config_wchar.hpp	18;"	d
CATCH_INTERNAL_CONFIG_NO_WCHAR	..\Catch2\src\catch2\internal\catch_config_wchar.hpp	24;"	d
CATCH_CONFIG_WCHAR	..\Catch2\src\catch2\internal\catch_config_wchar.hpp	30;"	d
Catch	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^namespace Catch {$/;"	n	file:
IColourImpl	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        struct IColourImpl {$/;"	s	namespace:Catch::__anon42	file:
NoColourImpl	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        struct NoColourImpl : IColourImpl {$/;"	s	namespace:Catch::__anon42	file:
instance	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^            static IColourImpl* instance() {$/;"	f	struct:Catch::__anon42::NoColourImpl
CATCH_CONFIG_COLOUR_WINDOWS	..\Catch2\src\catch2\internal\catch_console_colour.cpp	48;"	d	file:
CATCH_CONFIG_COLOUR_ANSI	..\Catch2\src\catch2\internal\catch_console_colour.cpp	50;"	d	file:
Catch	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^namespace Catch {$/;"	n	file:
Win32ColourImpl	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    class Win32ColourImpl : public IColourImpl {$/;"	c	namespace:Catch::__anon43	file:
Win32ColourImpl	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        Win32ColourImpl() : stdoutHandle( GetStdHandle(STD_OUTPUT_HANDLE) )$/;"	f	class:Catch::__anon43::Win32ColourImpl
setTextAttribute	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        void setTextAttribute( WORD _textAttribute ) {$/;"	f	class:Catch::__anon43::Win32ColourImpl	file:
stdoutHandle	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        HANDLE stdoutHandle;$/;"	m	class:Catch::__anon43::Win32ColourImpl	file:
originalForegroundAttributes	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        WORD originalForegroundAttributes;$/;"	m	class:Catch::__anon43::Win32ColourImpl	file:
originalBackgroundAttributes	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        WORD originalBackgroundAttributes;$/;"	m	class:Catch::__anon43::Win32ColourImpl	file:
platformColourInstance	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    IColourImpl* platformColourInstance() {$/;"	f	namespace:Catch::__anon43
Catch	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^namespace Catch {$/;"	n	file:
PosixColourImpl	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    class PosixColourImpl : public IColourImpl {$/;"	c	namespace:Catch::__anon44	file:
instance	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        static IColourImpl* instance() {$/;"	f	class:Catch::__anon44::PosixColourImpl
setColour	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^        void setColour( const char* _escapeCode ) {$/;"	f	class:Catch::__anon44::PosixColourImpl	file:
useColourOnPlatform	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    bool useColourOnPlatform() {$/;"	f	namespace:Catch::__anon44
platformColourInstance	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    IColourImpl* platformColourInstance() {$/;"	f	namespace:Catch::__anon44
Catch	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^namespace Catch {$/;"	n	file:
platformColourInstance	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    static IColourImpl* platformColourInstance() { return NoColourImpl::instance(); }$/;"	f	namespace:Catch	file:
Catch	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^namespace Catch {$/;"	n	file:
Colour	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    Colour::Colour( Code _colourCode ) { use( _colourCode ); }$/;"	f	class:Catch::Colour
~Colour	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    Colour::~Colour(){ if( !m_moved ) use( None ); }$/;"	f	class:Catch::Colour
use	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    void Colour::use( Code _colourCode ) {$/;"	f	class:Catch::Colour
operator <<	..\Catch2\src\catch2\internal\catch_console_colour.cpp	/^    std::ostream& operator << ( std::ostream& os, Colour const& ) {$/;"	f	namespace:Catch
CATCH_CONSOLE_COLOUR_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_console_colour.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^namespace Catch {$/;"	n
Colour	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^    struct Colour {$/;"	s	namespace:Catch
Code	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^        enum Code {$/;"	g	struct:Catch::Colour
None	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            None = 0,$/;"	e	enum:Catch::Colour::Code
White	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            White,$/;"	e	enum:Catch::Colour::Code
Red	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Red,$/;"	e	enum:Catch::Colour::Code
Green	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Green,$/;"	e	enum:Catch::Colour::Code
Blue	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Blue,$/;"	e	enum:Catch::Colour::Code
Cyan	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Cyan,$/;"	e	enum:Catch::Colour::Code
Yellow	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Yellow,$/;"	e	enum:Catch::Colour::Code
Grey	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Grey,$/;"	e	enum:Catch::Colour::Code
Bright	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Bright = 0x10,$/;"	e	enum:Catch::Colour::Code
BrightRed	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            BrightRed = Bright | Red,$/;"	e	enum:Catch::Colour::Code
BrightGreen	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            BrightGreen = Bright | Green,$/;"	e	enum:Catch::Colour::Code
LightGrey	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            LightGrey = Bright | Grey,$/;"	e	enum:Catch::Colour::Code
BrightWhite	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            BrightWhite = Bright | White,$/;"	e	enum:Catch::Colour::Code
BrightYellow	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            BrightYellow = Bright | Yellow,$/;"	e	enum:Catch::Colour::Code
FileName	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            FileName = LightGrey,$/;"	e	enum:Catch::Colour::Code
Warning	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Warning = BrightYellow,$/;"	e	enum:Catch::Colour::Code
ResultError	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            ResultError = BrightRed,$/;"	e	enum:Catch::Colour::Code
ResultSuccess	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            ResultSuccess = BrightGreen,$/;"	e	enum:Catch::Colour::Code
ResultExpectedFailure	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            ResultExpectedFailure = Warning,$/;"	e	enum:Catch::Colour::Code
Error	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Error = BrightRed,$/;"	e	enum:Catch::Colour::Code
Success	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Success = Green,$/;"	e	enum:Catch::Colour::Code
OriginalExpression	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            OriginalExpression = Cyan,$/;"	e	enum:Catch::Colour::Code
ReconstructedExpression	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            ReconstructedExpression = BrightYellow,$/;"	e	enum:Catch::Colour::Code
SecondaryText	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            SecondaryText = LightGrey,$/;"	e	enum:Catch::Colour::Code
Headers	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^            Headers = White$/;"	e	enum:Catch::Colour::Code
noexcept	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^        Colour( Colour&& other ) noexcept;$/;"	m	struct:Catch::Colour
noexcept	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^        Colour& operator=( Colour&& other ) noexcept;$/;"	m	struct:Catch::Colour
m_moved	..\Catch2\src\catch2\internal\catch_console_colour.hpp	/^        bool m_moved = false;$/;"	m	struct:Catch::Colour
CATCH_CONSOLE_WIDTH_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_console_width.hpp	9;"	d
CATCH_CONFIG_CONSOLE_WIDTH	..\Catch2\src\catch2\internal\catch_console_width.hpp	12;"	d
CATCH_CONTAINER_NONMEMBERS_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_container_nonmembers.hpp	9;"	d
CATCH_CONFIG_POLYFILL_NONMEMBER_CONTAINER_ACCESS	..\Catch2\src\catch2\internal\catch_container_nonmembers.hpp	28;"	d
CATCH_CONFIG_POLYFILL_NONMEMBER_CONTAINER_ACCESS	..\Catch2\src\catch2\internal\catch_container_nonmembers.hpp	32;"	d
Catch	..\Catch2\src\catch2\internal\catch_container_nonmembers.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\src\catch2\internal\catch_container_nonmembers.hpp	/^namespace Detail {$/;"	n	namespace:Catch
decltype	..\Catch2\src\catch2\internal\catch_container_nonmembers.hpp	/^    constexpr auto empty(Container const& cont) -> decltype(cont.empty()) {$/;"	f	namespace:Catch::Detail
decltype	..\Catch2\src\catch2\internal\catch_container_nonmembers.hpp	/^    constexpr auto size(Container const& cont) -> decltype(cont.size()) {$/;"	f	namespace:Catch::Detail
Catch	..\Catch2\src\catch2\internal\catch_context.cpp	/^namespace Catch {$/;"	n	file:
Context	..\Catch2\src\catch2\internal\catch_context.cpp	/^    class Context : public IMutableContext, private Detail::NonCopyable {$/;"	c	namespace:Catch	file:
override	..\Catch2\src\catch2\internal\catch_context.cpp	/^        ~Context() override;$/;"	m	class:Catch::Context	file:
m_config	..\Catch2\src\catch2\internal\catch_context.cpp	/^        IConfig const* m_config = nullptr;$/;"	m	class:Catch::Context	file:
m_runner	..\Catch2\src\catch2\internal\catch_context.cpp	/^        IRunner* m_runner = nullptr;$/;"	m	class:Catch::Context	file:
m_resultCapture	..\Catch2\src\catch2\internal\catch_context.cpp	/^        IResultCapture* m_resultCapture = nullptr;$/;"	m	class:Catch::Context	file:
currentContext	..\Catch2\src\catch2\internal\catch_context.cpp	/^    IMutableContext *IMutableContext::currentContext = nullptr;$/;"	m	class:Catch::IMutableContext	file:
createContext	..\Catch2\src\catch2\internal\catch_context.cpp	/^    void IMutableContext::createContext()$/;"	f	class:Catch::IMutableContext
cleanUpContext	..\Catch2\src\catch2\internal\catch_context.cpp	/^    void cleanUpContext() {$/;"	f	namespace:Catch
rng	..\Catch2\src\catch2\internal\catch_context.cpp	/^    SimplePcg32& rng() {$/;"	f	namespace:Catch
CATCH_CONTEXT_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_context.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_context.hpp	/^namespace Catch {$/;"	n
IContext	..\Catch2\src\catch2\internal\catch_context.hpp	/^    struct IContext$/;"	s	namespace:Catch
IMutableContext	..\Catch2\src\catch2\internal\catch_context.hpp	/^    struct IMutableContext : IContext$/;"	s	namespace:Catch
currentContext	..\Catch2\src\catch2\internal\catch_context.hpp	/^        static IMutableContext *currentContext;$/;"	m	struct:Catch::IMutableContext
getCurrentMutableContext	..\Catch2\src\catch2\internal\catch_context.hpp	/^    inline IMutableContext& getCurrentMutableContext()$/;"	f	namespace:Catch
getCurrentContext	..\Catch2\src\catch2\internal\catch_context.hpp	/^    inline IContext& getCurrentContext()$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^        bool isDebuggerActive(){$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^    namespace Catch{$/;"	n	file:
isDebuggerActive	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^        bool isDebuggerActive(){$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^        bool isDebuggerActive() {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^        bool isDebuggerActive() {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^    namespace Catch {$/;"	n	file:
isDebuggerActive	..\Catch2\src\catch2\internal\catch_debugger.cpp	/^       bool isDebuggerActive() { return false; }$/;"	f	namespace:Catch
CATCH_DEBUGGER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_debugger.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_debugger.hpp	/^namespace Catch {$/;"	n
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	20;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	22;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	29;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	31;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	33;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	35;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	43;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	47;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	50;"	d
CATCH_TRAP	..\Catch2\src\catch2\internal\catch_debugger.hpp	53;"	d
CATCH_BREAK_INTO_DEBUGGER	..\Catch2\src\catch2\internal\catch_debugger.hpp	58;"	d
CATCH_BREAK_INTO_DEBUGGER	..\Catch2\src\catch2\internal\catch_debugger.hpp	60;"	d
Catch	..\Catch2\src\catch2\internal\catch_debug_console.cpp	/^    namespace Catch {$/;"	n	file:
writeToDebugConsole	..\Catch2\src\catch2\internal\catch_debug_console.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_debug_console.cpp	/^    namespace Catch {$/;"	n	file:
writeToDebugConsole	..\Catch2\src\catch2\internal\catch_debug_console.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_debug_console.cpp	/^    namespace Catch {$/;"	n	file:
writeToDebugConsole	..\Catch2\src\catch2\internal\catch_debug_console.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
CATCH_DEBUG_CONSOLE_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_debug_console.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_debug_console.hpp	/^namespace Catch {$/;"	n
CATCH_DECOMPOSER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_decomposer.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^namespace Catch {$/;"	n
ITransientExpression	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^    struct ITransientExpression {$/;"	s	namespace:Catch
ITransientExpression	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        ITransientExpression( bool isBinaryExpression, bool result )$/;"	f	struct:Catch::ITransientExpression
m_isBinaryExpression	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        bool m_isBinaryExpression;$/;"	m	struct:Catch::ITransientExpression
m_result	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        bool m_result;$/;"	m	struct:Catch::ITransientExpression
operator <<	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        friend std::ostream& operator<<(std::ostream& out, ITransientExpression const& expr) {$/;"	f	struct:Catch::ITransientExpression
BinaryExpr	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^    class BinaryExpr  : public ITransientExpression {$/;"	c	namespace:Catch
m_lhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        LhsT m_lhs;$/;"	m	class:Catch::BinaryExpr
m_op	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        StringRef m_op;$/;"	m	class:Catch::BinaryExpr
m_rhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        RhsT m_rhs;$/;"	m	class:Catch::BinaryExpr
BinaryExpr	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        BinaryExpr( bool comparisonResult, LhsT lhs, StringRef op, RhsT rhs )$/;"	f	class:Catch::BinaryExpr
m_rhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^            m_rhs( rhs )$/;"	f	class:Catch::BinaryExpr
UnaryExpr	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^    class UnaryExpr : public ITransientExpression {$/;"	c	namespace:Catch
m_lhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        LhsT m_lhs;$/;"	m	class:Catch::UnaryExpr
UnaryExpr	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        explicit UnaryExpr( LhsT lhs )$/;"	f	class:Catch::UnaryExpr
m_lhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^            m_lhs( lhs )$/;"	f	class:Catch::UnaryExpr
ExprLhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^    class ExprLhs {$/;"	c	namespace:Catch
m_lhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        LhsT m_lhs;$/;"	m	class:Catch::ExprLhs
ExprLhs	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^        explicit ExprLhs( LhsT lhs ) : m_lhs( lhs ) {}$/;"	f	class:Catch::ExprLhs
handleExpression	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^    void handleExpression( ExprLhs<T> const& expr ) {$/;"	f	namespace:Catch
Decomposer	..\Catch2\src\catch2\internal\catch_decomposer.hpp	/^    struct Decomposer {$/;"	s	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_enforce.cpp	/^namespace Catch {$/;"	n	file:
throw_exception	..\Catch2\src\catch2\internal\catch_enforce.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch
throw_logic_error	..\Catch2\src\catch2\internal\catch_enforce.cpp	/^    void throw_logic_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_domain_error	..\Catch2\src\catch2\internal\catch_enforce.cpp	/^    void throw_domain_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_runtime_error	..\Catch2\src\catch2\internal\catch_enforce.cpp	/^    void throw_runtime_error(std::string const& msg) {$/;"	f	namespace:Catch
CATCH_ENFORCE_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_enforce.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_enforce.hpp	/^namespace Catch {$/;"	n
throw_exception	..\Catch2\src\catch2\internal\catch_enforce.hpp	/^    void throw_exception(Ex const& e) {$/;"	f	namespace:Catch
CATCH_MAKE_MSG	..\Catch2\src\catch2\internal\catch_enforce.hpp	38;"	d
CATCH_INTERNAL_ERROR	..\Catch2\src\catch2\internal\catch_enforce.hpp	41;"	d
CATCH_ERROR	..\Catch2\src\catch2\internal\catch_enforce.hpp	44;"	d
CATCH_RUNTIME_ERROR	..\Catch2\src\catch2\internal\catch_enforce.hpp	47;"	d
CATCH_ENFORCE	..\Catch2\src\catch2\internal\catch_enforce.hpp	50;"	d
Catch	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^namespace Catch {$/;"	n	file:
~IMutableEnumValuesRegistry	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^    IMutableEnumValuesRegistry::~IMutableEnumValuesRegistry() {}$/;"	f	class:Catch::IMutableEnumValuesRegistry
Detail	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
extractInstanceName	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^            StringRef extractInstanceName(StringRef enumInstance) {$/;"	f	namespace:Catch::Detail::__anon45
parseEnums	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^        std::vector<StringRef> parseEnums( StringRef enums ) {$/;"	f	namespace:Catch::Detail
~EnumInfo	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^        EnumInfo::~EnumInfo() {}$/;"	f	class:Catch::Detail::EnumInfo
lookup	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^        StringRef EnumInfo::lookup( int value ) const {$/;"	f	class:Catch::Detail::EnumInfo
makeEnumInfo	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^        Catch::Detail::unique_ptr<EnumInfo> makeEnumInfo( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	namespace:Catch::Detail
registerEnum	..\Catch2\src\catch2\internal\catch_enum_values_registry.cpp	/^        EnumInfo const& EnumValuesRegistry::registerEnum( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	class:Catch::Detail::EnumValuesRegistry
CATCH_ENUM_VALUES_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_enum_values_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_enum_values_registry.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\src\catch2\internal\catch_enum_values_registry.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
EnumValuesRegistry	..\Catch2\src\catch2\internal\catch_enum_values_registry.hpp	/^        class EnumValuesRegistry : public IMutableEnumValuesRegistry {$/;"	c	namespace:Catch::Detail
m_enumInfos	..\Catch2\src\catch2\internal\catch_enum_values_registry.hpp	/^            std::vector<Catch::Detail::unique_ptr<EnumInfo>> m_enumInfos;$/;"	m	class:Catch::Detail::EnumValuesRegistry
override	..\Catch2\src\catch2\internal\catch_enum_values_registry.hpp	/^            EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::vector<int> const& values) override;$/;"	m	class:Catch::Detail::EnumValuesRegistry
CATCH_ERRNO_GUARD_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_errno_guard.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_errno_guard.hpp	/^namespace Catch {$/;"	n
ErrnoGuard	..\Catch2\src\catch2\internal\catch_errno_guard.hpp	/^    class ErrnoGuard {$/;"	c	namespace:Catch
m_oldErrno	..\Catch2\src\catch2\internal\catch_errno_guard.hpp	/^        int m_oldErrno;$/;"	m	class:Catch::ErrnoGuard
Catch	..\Catch2\src\catch2\internal\catch_exception_translator_registry.cpp	/^namespace Catch {$/;"	n	file:
~ExceptionTranslatorRegistry	..\Catch2\src\catch2\internal\catch_exception_translator_registry.cpp	/^    ExceptionTranslatorRegistry::~ExceptionTranslatorRegistry() {$/;"	f	class:Catch::ExceptionTranslatorRegistry
registerTranslator	..\Catch2\src\catch2\internal\catch_exception_translator_registry.cpp	/^    void ExceptionTranslatorRegistry::registerTranslator( const IExceptionTranslator* translator ) {$/;"	f	class:Catch::ExceptionTranslatorRegistry
translateActiveException	..\Catch2\src\catch2\internal\catch_exception_translator_registry.cpp	/^    std::string ExceptionTranslatorRegistry::translateActiveException() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
tryTranslators	..\Catch2\src\catch2\internal\catch_exception_translator_registry.cpp	/^    std::string ExceptionTranslatorRegistry::tryTranslators() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
translateActiveException	..\Catch2\src\catch2\internal\catch_exception_translator_registry.cpp	/^    std::string ExceptionTranslatorRegistry::translateActiveException() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
tryTranslators	..\Catch2\src\catch2\internal\catch_exception_translator_registry.cpp	/^    std::string ExceptionTranslatorRegistry::tryTranslators() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_exception_translator_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_exception_translator_registry.hpp	/^namespace Catch {$/;"	n
ExceptionTranslatorRegistry	..\Catch2\src\catch2\internal\catch_exception_translator_registry.hpp	/^    class ExceptionTranslatorRegistry : public IExceptionTranslatorRegistry {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\internal\catch_exception_translator_registry.hpp	/^        std::string translateActiveException() const override;$/;"	m	class:Catch::ExceptionTranslatorRegistry
m_translators	..\Catch2\src\catch2\internal\catch_exception_translator_registry.hpp	/^        ExceptionTranslators m_translators;$/;"	m	class:Catch::ExceptionTranslatorRegistry
reportFatal	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    void reportFatal( char const * const message ) {$/;"	f	namespace:__anon46
Catch	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^namespace Catch {$/;"	n	file:
SignalDefs	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	s	namespace:Catch	file:
id	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
name	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
signalDefs	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    static SignalDefs signalDefs[] = {$/;"	v	file:
handleVectoredException	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    LONG CALLBACK FatalConditionHandler::handleVectoredException(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	class:Catch::FatalConditionHandler
FatalConditionHandler	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    FatalConditionHandler::FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
reset	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    void FatalConditionHandler::reset() {$/;"	f	class:Catch::FatalConditionHandler
isSet	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^bool FatalConditionHandler::isSet = false;$/;"	m	class:Catch::FatalConditionHandler	file:
guaranteeSize	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^ULONG FatalConditionHandler::guaranteeSize = 0;$/;"	m	class:Catch::FatalConditionHandler	file:
exceptionHandlerHandle	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^PVOID FatalConditionHandler::exceptionHandlerHandle = nullptr;$/;"	m	class:Catch::FatalConditionHandler	file:
Catch	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^namespace Catch {$/;"	n	file:
SignalDefs	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    struct SignalDefs {$/;"	s	namespace:Catch	file:
id	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^        int id;$/;"	m	struct:Catch::SignalDefs	file:
name	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^        const char* name;$/;"	m	struct:Catch::SignalDefs	file:
sigStackSize	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    static constexpr std::size_t sigStackSize = 32768 >= MINSIGSTKSZ ? 32768 : MINSIGSTKSZ;$/;"	v	file:
signalDefs	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    static SignalDefs signalDefs[] = {$/;"	v	file:
handleSignal	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    void FatalConditionHandler::handleSignal( int sig ) {$/;"	f	class:Catch::FatalConditionHandler
FatalConditionHandler	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    FatalConditionHandler::FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
reset	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    void FatalConditionHandler::reset() {$/;"	f	class:Catch::FatalConditionHandler
isSet	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    bool FatalConditionHandler::isSet = false;$/;"	m	class:Catch::FatalConditionHandler	file:
oldSigActions	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    struct sigaction FatalConditionHandler::oldSigActions[sizeof(signalDefs)\/sizeof(SignalDefs)] = {};$/;"	m	class:Catch::FatalConditionHandler	typeref:struct:Catch::FatalConditionHandler::	file:
oldSigStack	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    stack_t FatalConditionHandler::oldSigStack = {};$/;"	m	class:Catch::FatalConditionHandler	file:
altStackMem	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.cpp	/^    char FatalConditionHandler::altStackMem[sigStackSize] = {};$/;"	m	class:Catch::FatalConditionHandler	file:
CATCH_FATAL_CONDITION_HANDLER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^namespace Catch {$/;"	n
FatalConditionHandler	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^    struct FatalConditionHandler {$/;"	s	namespace:Catch
~FatalConditionHandler	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        ~FatalConditionHandler() { reset(); }$/;"	f	struct:Catch::FatalConditionHandler
isSet	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        static bool isSet;$/;"	m	struct:Catch::FatalConditionHandler
guaranteeSize	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        static ULONG guaranteeSize;$/;"	m	struct:Catch::FatalConditionHandler
exceptionHandlerHandle	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        static PVOID exceptionHandlerHandle;$/;"	m	struct:Catch::FatalConditionHandler
Catch	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^namespace Catch {$/;"	n
FatalConditionHandler	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^    struct FatalConditionHandler {$/;"	s	namespace:Catch
isSet	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        static bool isSet;$/;"	m	struct:Catch::FatalConditionHandler
oldSigActions	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        static struct sigaction oldSigActions[];$/;"	m	struct:Catch::FatalConditionHandler	typeref:struct:Catch::FatalConditionHandler::sigaction
oldSigStack	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        static stack_t oldSigStack;$/;"	m	struct:Catch::FatalConditionHandler
altStackMem	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        static char altStackMem[];$/;"	m	struct:Catch::FatalConditionHandler
~FatalConditionHandler	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^        ~FatalConditionHandler() { reset(); }$/;"	f	struct:Catch::FatalConditionHandler
Catch	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^namespace Catch {$/;"	n
FatalConditionHandler	..\Catch2\src\catch2\internal\catch_fatal_condition_handler.hpp	/^    struct FatalConditionHandler {};$/;"	s	namespace:Catch
CATCH_LAZY_EXPR_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^namespace Catch {$/;"	n
LazyExpression	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^    class LazyExpression {$/;"	c	namespace:Catch
m_transientExpression	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^        ITransientExpression const* m_transientExpression = nullptr;$/;"	m	class:Catch::LazyExpression
m_isNegated	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^        bool m_isNegated;$/;"	m	class:Catch::LazyExpression
LazyExpression	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^        LazyExpression( bool isNegated ):$/;"	f	class:Catch::LazyExpression
other	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^        LazyExpression(LazyExpression const& other) = default;$/;"	m	class:Catch::LazyExpression
operator bool	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::LazyExpression
ostream	..\Catch2\src\catch2\internal\catch_lazy_expr.hpp	/^        friend auto operator << ( std::ostream& os, LazyExpression const& lazyExpr ) -> std::ostream&;$/;"	m	class:Catch::LazyExpression::std
CATCH_LEAK_DETECTOR_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_leak_detector.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_leak_detector.hpp	/^namespace Catch {$/;"	n
LeakDetector	..\Catch2\src\catch2\internal\catch_leak_detector.hpp	/^    struct LeakDetector {$/;"	s	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_list.cpp	/^namespace Catch {$/;"	n	file:
listTests	..\Catch2\src\catch2\internal\catch_list.cpp	/^        void listTests(IStreamingReporter& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon47
listTags	..\Catch2\src\catch2\internal\catch_list.cpp	/^        void listTags(IStreamingReporter& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon47
listReporters	..\Catch2\src\catch2\internal\catch_list.cpp	/^        void listReporters(IStreamingReporter& reporter) {$/;"	f	namespace:Catch::__anon47
add	..\Catch2\src\catch2\internal\catch_list.cpp	/^    void TagInfo::add( StringRef spelling ) {$/;"	f	class:Catch::TagInfo
all	..\Catch2\src\catch2\internal\catch_list.cpp	/^    std::string TagInfo::all() const {$/;"	f	class:Catch::TagInfo
list	..\Catch2\src\catch2\internal\catch_list.cpp	/^    bool list( IStreamingReporter& reporter, Config const& config ) {$/;"	f	namespace:Catch
CATCH_LIST_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_list.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_list.hpp	/^namespace Catch {$/;"	n
ReporterDescription	..\Catch2\src\catch2\internal\catch_list.hpp	/^    struct ReporterDescription {$/;"	s	namespace:Catch
name	..\Catch2\src\catch2\internal\catch_list.hpp	/^        std::string name, description;$/;"	m	struct:Catch::ReporterDescription
description	..\Catch2\src\catch2\internal\catch_list.hpp	/^        std::string name, description;$/;"	m	struct:Catch::ReporterDescription
TagInfo	..\Catch2\src\catch2\internal\catch_list.hpp	/^    struct TagInfo {$/;"	s	namespace:Catch
spellings	..\Catch2\src\catch2\internal\catch_list.hpp	/^        std::set<StringRef> spellings;$/;"	m	struct:Catch::TagInfo
count	..\Catch2\src\catch2\internal\catch_list.hpp	/^        std::size_t count = 0;$/;"	m	struct:Catch::TagInfo
Catch	..\Catch2\src\catch2\internal\catch_main.cpp	/^namespace Catch {$/;"	n	file:
leakDetector	..\Catch2\src\catch2\internal\catch_main.cpp	/^    LeakDetector leakDetector;$/;"	v
wmain	..\Catch2\src\catch2\internal\catch_main.cpp	/^extern "C" int wmain (int argc, wchar_t * argv[], wchar_t * []) {$/;"	f
CATCH_MESSAGE_INFO_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_message_info.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^namespace Catch {$/;"	n
MessageInfo	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^    struct MessageInfo {$/;"	s	namespace:Catch
macroName	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::MessageInfo
message	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        std::string message;$/;"	m	struct:Catch::MessageInfo
lineInfo	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::MessageInfo
type	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        ResultWas::OfType type;$/;"	m	struct:Catch::MessageInfo
sequence	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        unsigned int sequence;$/;"	m	struct:Catch::MessageInfo
operator ==	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        bool operator == (MessageInfo const& other) const {$/;"	f	struct:Catch::MessageInfo
operator <	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        bool operator < (MessageInfo const& other) const {$/;"	f	struct:Catch::MessageInfo
globalCount	..\Catch2\src\catch2\internal\catch_message_info.hpp	/^        static unsigned int globalCount;$/;"	m	struct:Catch::MessageInfo
CATCH_META_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_meta.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_meta.hpp	/^namespace Catch {$/;"	n
always_false	..\Catch2\src\catch2\internal\catch_meta.hpp	/^    struct always_false : std::false_type {};$/;"	s	namespace:Catch
true_given	..\Catch2\src\catch2\internal\catch_meta.hpp	/^    template <typename> struct true_given : std::true_type {};$/;"	s	namespace:Catch
is_callable_tester	..\Catch2\src\catch2\internal\catch_meta.hpp	/^    struct is_callable_tester {$/;"	s	namespace:Catch
is_callable	..\Catch2\src\catch2\internal\catch_meta.hpp	/^    struct is_callable<Fun(Args...)> : decltype(is_callable_tester::test<Fun, Args...>(0)) {};$/;"	s	namespace:Catch
mpl_	..\Catch2\src\catch2\internal\catch_meta.hpp	/^namespace mpl_{$/;"	n
CATCH_NONCOPYABLE_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_noncopyable.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_noncopyable.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\src\catch2\internal\catch_noncopyable.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
NonCopyable	..\Catch2\src\catch2\internal\catch_noncopyable.hpp	/^        class NonCopyable {$/;"	c	namespace:Catch::Detail
noexcept	..\Catch2\src\catch2\internal\catch_noncopyable.hpp	/^            NonCopyable() noexcept = default;$/;"	m	class:Catch::Detail::NonCopyable
CATCH_OPTION_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_option.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_option.hpp	/^namespace Catch {$/;"	n
Option	..\Catch2\src\catch2\internal\catch_option.hpp	/^    class Option {$/;"	c	namespace:Catch
Option	..\Catch2\src\catch2\internal\catch_option.hpp	/^        Option() : nullableValue( nullptr ) {}$/;"	f	class:Catch::Option
Option	..\Catch2\src\catch2\internal\catch_option.hpp	/^        Option( T const& _value )$/;"	f	class:Catch::Option
Option	..\Catch2\src\catch2\internal\catch_option.hpp	/^        Option( Option const& _other )$/;"	f	class:Catch::Option
~Option	..\Catch2\src\catch2\internal\catch_option.hpp	/^        ~Option() {$/;"	f	class:Catch::Option
operator =	..\Catch2\src\catch2\internal\catch_option.hpp	/^        Option& operator= ( Option const& _other ) {$/;"	f	class:Catch::Option
operator =	..\Catch2\src\catch2\internal\catch_option.hpp	/^        Option& operator = ( T const& _value ) {$/;"	f	class:Catch::Option
reset	..\Catch2\src\catch2\internal\catch_option.hpp	/^        void reset() {$/;"	f	class:Catch::Option
operator *	..\Catch2\src\catch2\internal\catch_option.hpp	/^        T& operator*() { return *nullableValue; }$/;"	f	class:Catch::Option
operator *	..\Catch2\src\catch2\internal\catch_option.hpp	/^        T const& operator*() const { return *nullableValue; }$/;"	f	class:Catch::Option
operator ->	..\Catch2\src\catch2\internal\catch_option.hpp	/^        T* operator->() { return nullableValue; }$/;"	f	class:Catch::Option
operator ->	..\Catch2\src\catch2\internal\catch_option.hpp	/^        const T* operator->() const { return nullableValue; }$/;"	f	class:Catch::Option
valueOr	..\Catch2\src\catch2\internal\catch_option.hpp	/^        T valueOr( T const& defaultValue ) const {$/;"	f	class:Catch::Option
some	..\Catch2\src\catch2\internal\catch_option.hpp	/^        bool some() const { return nullableValue != nullptr; }$/;"	f	class:Catch::Option
none	..\Catch2\src\catch2\internal\catch_option.hpp	/^        bool none() const { return nullableValue == nullptr; }$/;"	f	class:Catch::Option
operator !	..\Catch2\src\catch2\internal\catch_option.hpp	/^        bool operator !() const { return nullableValue == nullptr; }$/;"	f	class:Catch::Option
operator bool	..\Catch2\src\catch2\internal\catch_option.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::Option
nullableValue	..\Catch2\src\catch2\internal\catch_option.hpp	/^        T *nullableValue;$/;"	m	class:Catch::Option
storage	..\Catch2\src\catch2\internal\catch_option.hpp	/^        alignas(alignof(T)) char storage[sizeof(T)];$/;"	m	class:Catch::Option
dup	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	18;"	d	file:
dup2	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	19;"	d	file:
fileno	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	20;"	d	file:
Catch	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^namespace Catch {$/;"	n	file:
RedirectedStream	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    RedirectedStream::RedirectedStream( std::ostream& originalStream, std::ostream& redirectionStream )$/;"	f	class:Catch::RedirectedStream
~RedirectedStream	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    RedirectedStream::~RedirectedStream() {$/;"	f	class:Catch::RedirectedStream
RedirectedStdOut	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    RedirectedStdOut::RedirectedStdOut() : m_cout( Catch::cout(), m_rss.get() ) {}$/;"	f	class:Catch::RedirectedStdOut
RedirectedStdErr	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    RedirectedStdErr::RedirectedStdErr()$/;"	f	class:Catch::RedirectedStdErr
RedirectedStreams	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    RedirectedStreams::RedirectedStreams(std::string& redirectedCout, std::string& redirectedCerr)$/;"	f	class:Catch::RedirectedStreams
~RedirectedStreams	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    RedirectedStreams::~RedirectedStreams() {$/;"	f	class:Catch::RedirectedStreams
TempFile	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    TempFile::TempFile() {$/;"	f	class:Catch::TempFile
TempFile	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    TempFile::TempFile() {$/;"	f	class:Catch::TempFile
~TempFile	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    TempFile::~TempFile() {$/;"	f	class:Catch::TempFile
getFile	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    FILE* TempFile::getFile() {$/;"	f	class:Catch::TempFile
getContents	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    std::string TempFile::getContents() {$/;"	f	class:Catch::TempFile
OutputRedirect	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    OutputRedirect::OutputRedirect(std::string& stdout_dest, std::string& stderr_dest) :$/;"	f	class:Catch::OutputRedirect
~OutputRedirect	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	/^    OutputRedirect::~OutputRedirect() {$/;"	f	class:Catch::OutputRedirect
dup	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	141;"	d	file:
dup2	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	142;"	d	file:
fileno	..\Catch2\src\catch2\internal\catch_output_redirect.cpp	143;"	d	file:
CATCH_OUTPUT_REDIRECT_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^namespace Catch {$/;"	n
RedirectedStream	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^    class RedirectedStream {$/;"	c	namespace:Catch
m_originalStream	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::ostream& m_originalStream;$/;"	m	class:Catch::RedirectedStream
m_redirectionStream	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::ostream& m_redirectionStream;$/;"	m	class:Catch::RedirectedStream
m_prevBuf	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::streambuf* m_prevBuf;$/;"	m	class:Catch::RedirectedStream
RedirectedStdOut	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^    class RedirectedStdOut {$/;"	c	namespace:Catch
m_rss	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        ReusableStringStream m_rss;$/;"	m	class:Catch::RedirectedStdOut
m_cout	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        RedirectedStream m_cout;$/;"	m	class:Catch::RedirectedStdOut
string	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        auto str() const -> std::string;$/;"	m	class:Catch::RedirectedStdOut::std
RedirectedStdErr	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^    class RedirectedStdErr {$/;"	c	namespace:Catch
m_rss	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        ReusableStringStream m_rss;$/;"	m	class:Catch::RedirectedStdErr
m_cerr	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        RedirectedStream m_cerr;$/;"	m	class:Catch::RedirectedStdErr
m_clog	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        RedirectedStream m_clog;$/;"	m	class:Catch::RedirectedStdErr
string	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        auto str() const -> std::string;$/;"	m	class:Catch::RedirectedStdErr::std
RedirectedStreams	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^    class RedirectedStreams {$/;"	c	namespace:Catch
m_redirectedCout	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::string& m_redirectedCout;$/;"	m	class:Catch::RedirectedStreams
m_redirectedCerr	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::string& m_redirectedCerr;$/;"	m	class:Catch::RedirectedStreams
m_redirectedStdOut	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        RedirectedStdOut m_redirectedStdOut;$/;"	m	class:Catch::RedirectedStreams
m_redirectedStdErr	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        RedirectedStdErr m_redirectedStdErr;$/;"	m	class:Catch::RedirectedStreams
TempFile	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^    class TempFile {$/;"	c	namespace:Catch
m_file	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::FILE* m_file = nullptr;$/;"	m	class:Catch::TempFile
m_buffer	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        char m_buffer[L_tmpnam] = { 0 };$/;"	m	class:Catch::TempFile
OutputRedirect	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^    class OutputRedirect {$/;"	c	namespace:Catch
m_originalStdout	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        int m_originalStdout = -1;$/;"	m	class:Catch::OutputRedirect
m_originalStderr	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        int m_originalStderr = -1;$/;"	m	class:Catch::OutputRedirect
m_stdoutFile	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        TempFile m_stdoutFile;$/;"	m	class:Catch::OutputRedirect
m_stderrFile	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        TempFile m_stderrFile;$/;"	m	class:Catch::OutputRedirect
m_stdoutDest	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::string& m_stdoutDest;$/;"	m	class:Catch::OutputRedirect
m_stderrDest	..\Catch2\src\catch2\internal\catch_output_redirect.hpp	/^        std::string& m_stderrDest;$/;"	m	class:Catch::OutputRedirect
CATCH_PLATFORM_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_platform.hpp	9;"	d
CATCH_PLATFORM_MAC	..\Catch2\src\catch2\internal\catch_platform.hpp	14;"	d
CATCH_PLATFORM_IPHONE	..\Catch2\src\catch2\internal\catch_platform.hpp	16;"	d
CATCH_PLATFORM_LINUX	..\Catch2\src\catch2\internal\catch_platform.hpp	20;"	d
CATCH_PLATFORM_WINDOWS	..\Catch2\src\catch2\internal\catch_platform.hpp	23;"	d
CATCH_POLYFILLS_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_polyfills.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_polyfills.hpp	/^namespace Catch {$/;"	n
CATCH_PREPROCESSOR_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	9;"	d
CATCH_RECURSION_LEVEL0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	18;"	d
CATCH_RECURSION_LEVEL1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	19;"	d
CATCH_RECURSION_LEVEL2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	20;"	d
CATCH_RECURSION_LEVEL3	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	21;"	d
CATCH_RECURSION_LEVEL4	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	22;"	d
CATCH_RECURSION_LEVEL5	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	23;"	d
INTERNAL_CATCH_EXPAND_VARGS	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	26;"	d
CATCH_RECURSION_LEVEL6	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	28;"	d
CATCH_RECURSE	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	29;"	d
CATCH_RECURSE	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	31;"	d
CATCH_REC_END	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	34;"	d
CATCH_REC_OUT	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	35;"	d
CATCH_EMPTY	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	37;"	d
CATCH_DEFER	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	38;"	d
CATCH_REC_GET_END2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	40;"	d
CATCH_REC_GET_END1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	41;"	d
CATCH_REC_GET_END	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	42;"	d
CATCH_REC_NEXT0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	43;"	d
CATCH_REC_NEXT1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	44;"	d
CATCH_REC_NEXT	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	45;"	d
CATCH_REC_LIST0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	47;"	d
CATCH_REC_LIST1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	48;"	d
CATCH_REC_LIST2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	49;"	d
CATCH_REC_LIST0_UD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	51;"	d
CATCH_REC_LIST1_UD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	52;"	d
CATCH_REC_LIST2_UD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	53;"	d
CATCH_REC_LIST_UD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	58;"	d
CATCH_REC_LIST	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	60;"	d
INTERNAL_CATCH_EXPAND1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	62;"	d
INTERNAL_CATCH_EXPAND2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	63;"	d
INTERNAL_CATCH_DEF	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	64;"	d
INTERNAL_CATCH_NOINTERNAL_CATCH_DEF	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	65;"	d
INTERNAL_CATCH_STRINGIZE	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	66;"	d
INTERNAL_CATCH_STRINGIZE2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	68;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	69;"	d
INTERNAL_CATCH_STRINGIZE2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	72;"	d
INTERNAL_CATCH_STRINGIZE3	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	73;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	74;"	d
INTERNAL_CATCH_MAKE_NAMESPACE2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	77;"	d
INTERNAL_CATCH_MAKE_NAMESPACE	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	78;"	d
INTERNAL_CATCH_REMOVE_PARENS	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	80;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	83;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	84;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST2	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	86;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	87;"	d
INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	90;"	d
INTERNAL_CATCH_REMOVE_PARENS_1_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	93;"	d
INTERNAL_CATCH_REMOVE_PARENS_2_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	94;"	d
INTERNAL_CATCH_REMOVE_PARENS_3_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	95;"	d
INTERNAL_CATCH_REMOVE_PARENS_4_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	96;"	d
INTERNAL_CATCH_REMOVE_PARENS_5_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	97;"	d
INTERNAL_CATCH_REMOVE_PARENS_6_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	98;"	d
INTERNAL_CATCH_REMOVE_PARENS_7_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	99;"	d
INTERNAL_CATCH_REMOVE_PARENS_8_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	100;"	d
INTERNAL_CATCH_REMOVE_PARENS_9_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	101;"	d
INTERNAL_CATCH_REMOVE_PARENS_10_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	102;"	d
INTERNAL_CATCH_REMOVE_PARENS_11_ARG	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	103;"	d
INTERNAL_CATCH_VA_NARGS_IMPL	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	105;"	d
INTERNAL_CATCH_TYPE_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	107;"	d
INTERNAL_CATCH_NTTP_1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	140;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	155;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	156;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_X	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	159;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	163;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	164;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_X	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	167;"	d
INTERNAL_CATCH_NTTP_REGISTER0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	171;"	d
INTERNAL_CATCH_NTTP_REGISTER	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	178;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	185;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	192;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	199;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	200;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	206;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	212;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	213;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	216;"	d
INTERNAL_CATCH_NTTP_0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	221;"	d
INTERNAL_CATCH_NTTP_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	222;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	223;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	224;"	d
INTERNAL_CATCH_NTTP_REG_METHOD_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	225;"	d
INTERNAL_CATCH_NTTP_REG_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	226;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	227;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	228;"	d
INTERNAL_CATCH_REMOVE_PARENS_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	229;"	d
INTERNAL_CATCH_NTTP_0	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	231;"	d
INTERNAL_CATCH_NTTP_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	232;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	233;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	234;"	d
INTERNAL_CATCH_NTTP_REG_METHOD_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	235;"	d
INTERNAL_CATCH_NTTP_REG_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	236;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	237;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	238;"	d
INTERNAL_CATCH_REMOVE_PARENS_GEN	..\Catch2\src\catch2\internal\catch_preprocessor.hpp	239;"	d
Catch	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^namespace Catch {$/;"	n	file:
rotate_right	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^        uint32_t rotate_right(uint32_t val, uint32_t count) {$/;"	f	namespace:Catch::__anon48
SimplePcg32	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^    SimplePcg32::SimplePcg32(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
seed	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^    void SimplePcg32::seed(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
discard	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^    void SimplePcg32::discard(uint64_t skip) {$/;"	f	class:Catch::SimplePcg32
operator ()	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^    SimplePcg32::result_type SimplePcg32::operator()() {$/;"	f	class:Catch::SimplePcg32
operator ==	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^    bool operator==(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
operator !=	..\Catch2\src\catch2\internal\catch_random_number_generator.cpp	/^    bool operator!=(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
CATCH_RANDOM_NUMBER_GENERATOR_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	/^namespace Catch {$/;"	n
SimplePcg32	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	/^    class SimplePcg32 {$/;"	c	namespace:Catch
min	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	/^        static constexpr result_type (min)() {$/;"	f	class:Catch::SimplePcg32
max	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	/^        static constexpr result_type (max)() {$/;"	f	class:Catch::SimplePcg32
SimplePcg32	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	/^        SimplePcg32():SimplePcg32(0xed743cc4U) {}$/;"	f	class:Catch::SimplePcg32
m_state	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	/^        std::uint64_t m_state;$/;"	m	class:Catch::SimplePcg32
s_inc	..\Catch2\src\catch2\internal\catch_random_number_generator.hpp	/^        static const std::uint64_t s_inc = (0x13ed0cc53f939476ULL << 1ULL) | 1ULL;$/;"	m	class:Catch::SimplePcg32
Catch	..\Catch2\src\catch2\internal\catch_reporter_registry.cpp	/^namespace Catch {$/;"	n	file:
ReporterRegistry	..\Catch2\src\catch2\internal\catch_reporter_registry.cpp	/^    ReporterRegistry::ReporterRegistry() {$/;"	f	class:Catch::ReporterRegistry
create	..\Catch2\src\catch2\internal\catch_reporter_registry.cpp	/^    IStreamingReporterPtr ReporterRegistry::create( std::string const& name, IConfig const* config ) const {$/;"	f	class:Catch::ReporterRegistry
registerReporter	..\Catch2\src\catch2\internal\catch_reporter_registry.cpp	/^    void ReporterRegistry::registerReporter( std::string const& name, IReporterFactoryPtr factory ) {$/;"	f	class:Catch::ReporterRegistry
registerListener	..\Catch2\src\catch2\internal\catch_reporter_registry.cpp	/^    void ReporterRegistry::registerListener( IReporterFactoryPtr factory ) {$/;"	f	class:Catch::ReporterRegistry
getFactories	..\Catch2\src\catch2\internal\catch_reporter_registry.cpp	/^    IReporterRegistry::FactoryMap const& ReporterRegistry::getFactories() const {$/;"	f	class:Catch::IReporterRegistry::ReporterRegistry
getListeners	..\Catch2\src\catch2\internal\catch_reporter_registry.cpp	/^    IReporterRegistry::Listeners const& ReporterRegistry::getListeners() const {$/;"	f	class:Catch::IReporterRegistry::ReporterRegistry
CATCH_REPORTER_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^namespace Catch {$/;"	n
ReporterRegistry	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^    class ReporterRegistry : public IReporterRegistry {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^        ~ReporterRegistry() override; \/\/ = default, out of line to allow fwd decl$/;"	m	class:Catch::ReporterRegistry
override	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^        IStreamingReporterPtr create( std::string const& name, IConfig const* config ) const override;$/;"	m	class:Catch::ReporterRegistry
override	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^        FactoryMap const& getFactories() const override;$/;"	m	class:Catch::ReporterRegistry
override	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^        Listeners const& getListeners() const override;$/;"	m	class:Catch::ReporterRegistry
m_factories	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^        FactoryMap m_factories;$/;"	m	class:Catch::ReporterRegistry
m_listeners	..\Catch2\src\catch2\internal\catch_reporter_registry.hpp	/^        Listeners m_listeners;$/;"	m	class:Catch::ReporterRegistry
Catch	..\Catch2\src\catch2\internal\catch_result_type.cpp	/^namespace Catch {$/;"	n	file:
isOk	..\Catch2\src\catch2\internal\catch_result_type.cpp	/^    bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isJustInfo	..\Catch2\src\catch2\internal\catch_result_type.cpp	/^    bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
operator |	..\Catch2\src\catch2\internal\catch_result_type.cpp	/^    ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
shouldContinueOnFailure	..\Catch2\src\catch2\internal\catch_result_type.cpp	/^    bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	..\Catch2\src\catch2\internal\catch_result_type.cpp	/^    bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
CATCH_RESULT_TYPE_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_result_type.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^namespace Catch {$/;"	n
ResultWas	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
OfType	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Unknown	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Ok	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Info	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Warning	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
Exception	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
ResultDisposition	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
Flags	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Normal	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
isFalseTest	..\Catch2\src\catch2\internal\catch_result_type.hpp	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^namespace Catch {$/;"	n	file:
Generators	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    namespace Generators {$/;"	n	namespace:Catch	file:
GeneratorTracker	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^        struct GeneratorTracker : TestCaseTracking::TrackerBase, IGeneratorTracker {$/;"	s	namespace:Catch::Generators	file:
m_generator	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^            GeneratorBasePtr m_generator;$/;"	m	struct:Catch::Generators::GeneratorTracker	file:
GeneratorTracker	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^            GeneratorTracker( TestCaseTracking::NameAndLocation const& nameAndLocation, TrackerContext& ctx, ITracker* parent )$/;"	f	struct:Catch::Generators::GeneratorTracker
acquire	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^            static GeneratorTracker& acquire( TrackerContext& ctx, TestCaseTracking::NameAndLocation const& nameAndLocation ) {$/;"	f	struct:Catch::Generators::GeneratorTracker
~GeneratorTracker	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^        GeneratorTracker::~GeneratorTracker() {}$/;"	f	class:Catch::Generators::GeneratorTracker
RunContext	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    RunContext::RunContext(IConfig const* _config, IStreamingReporterPtr&& reporter)$/;"	f	class:Catch::RunContext
~RunContext	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    RunContext::~RunContext() {$/;"	f	class:Catch::RunContext
testGroupStarting	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::testGroupStarting(std::string const& testSpec, std::size_t groupIndex, std::size_t groupsCount) {$/;"	f	class:Catch::RunContext
testGroupEnded	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::testGroupEnded(std::string const& testSpec, Totals const& totals, std::size_t groupIndex, std::size_t groupsCount) {$/;"	f	class:Catch::RunContext
runTest	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    Totals RunContext::runTest(TestCaseHandle const& testCase) {$/;"	f	class:Catch::RunContext
assertionEnded	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::assertionEnded(AssertionResult const & result) {$/;"	f	class:Catch::RunContext
resetAssertionInfo	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::resetAssertionInfo() {$/;"	f	class:Catch::RunContext
sectionStarted	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    bool RunContext::sectionStarted(SectionInfo const & sectionInfo, Counts & assertions) {$/;"	f	class:Catch::RunContext
testForMissingAssertions	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    bool RunContext::testForMissingAssertions(Counts& assertions) {$/;"	f	class:Catch::RunContext
sectionEnded	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::sectionEnded(SectionEndInfo const & endInfo) {$/;"	f	class:Catch::RunContext
sectionEndedEarly	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::sectionEndedEarly(SectionEndInfo const & endInfo) {$/;"	f	class:Catch::RunContext
benchmarkPreparing	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::RunContext
benchmarkStarting	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::benchmarkStarting( BenchmarkInfo const& info ) {$/;"	f	class:Catch::RunContext
benchmarkEnded	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::benchmarkEnded( BenchmarkStats<> const& stats ) {$/;"	f	class:Catch::RunContext
benchmarkFailed	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::benchmarkFailed(std::string const & error) {$/;"	f	class:Catch::RunContext
pushScopedMessage	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::pushScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
popScopedMessage	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::popScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
emplaceUnscopedMessage	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::emplaceUnscopedMessage( MessageBuilder const& builder ) {$/;"	f	class:Catch::RunContext
getCurrentTestName	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    std::string RunContext::getCurrentTestName() const {$/;"	f	class:Catch::RunContext
getLastResult	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    const AssertionResult * RunContext::getLastResult() const {$/;"	f	class:Catch::RunContext
exceptionEarlyReported	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::exceptionEarlyReported() {$/;"	f	class:Catch::RunContext
handleFatalErrorCondition	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleFatalErrorCondition( StringRef message ) {$/;"	f	class:Catch::RunContext
lastAssertionPassed	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    bool RunContext::lastAssertionPassed() {$/;"	f	class:Catch::RunContext
assertionPassed	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::assertionPassed() {$/;"	f	class:Catch::RunContext
aborting	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    bool RunContext::aborting() const {$/;"	f	class:Catch::RunContext
runCurrentTest	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::runCurrentTest(std::string & redirectedCout, std::string & redirectedCerr) {$/;"	f	class:Catch::RunContext
invokeActiveTestCase	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::invokeActiveTestCase() {$/;"	f	class:Catch::RunContext
handleUnfinishedSections	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleUnfinishedSections() {$/;"	f	class:Catch::RunContext
handleExpr	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleExpr($/;"	f	class:Catch::RunContext
reportExpr	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::reportExpr($/;"	f	class:Catch::RunContext
handleMessage	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleMessage($/;"	f	class:Catch::RunContext
handleUnexpectedExceptionNotThrown	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleUnexpectedExceptionNotThrown($/;"	f	class:Catch::RunContext
handleUnexpectedInflightException	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleUnexpectedInflightException($/;"	f	class:Catch::RunContext
populateReaction	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::populateReaction( AssertionReaction& reaction ) {$/;"	f	class:Catch::RunContext
handleIncomplete	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleIncomplete($/;"	f	class:Catch::RunContext
handleNonExpr	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void RunContext::handleNonExpr($/;"	f	class:Catch::RunContext
getResultCapture	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    IResultCapture& getResultCapture() {$/;"	f	namespace:Catch
seedRng	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    void seedRng(IConfig const& config) {$/;"	f	namespace:Catch
rngSeed	..\Catch2\src\catch2\internal\catch_run_context.cpp	/^    unsigned int rngSeed() {$/;"	f	namespace:Catch
CATCH_RUN_CONTEXT_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_run_context.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^namespace Catch {$/;"	n
RunContext	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^    class RunContext : public IResultCapture, public IRunner {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        ~RunContext() override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^                    AssertionReaction& reaction ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^                    AssertionReaction& reaction ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^                    AssertionReaction& reaction ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^                    AssertionReaction& reaction ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^                (   AssertionInfo const& info ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^                    AssertionReaction &reaction ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        bool sectionStarted( SectionInfo const& sectionInfo, Counts& assertions ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void sectionEnded( SectionEndInfo const& endInfo ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void sectionEndedEarly( SectionEndInfo const& endInfo ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        auto acquireGeneratorTracker( StringRef generatorName, SourceLineInfo const& lineInfo ) -> IGeneratorTracker& override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void benchmarkPreparing( std::string const& name ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void benchmarkStarting( BenchmarkInfo const& info ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void benchmarkEnded( BenchmarkStats<> const& stats ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void benchmarkFailed( std::string const& error ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void pushScopedMessage( MessageInfo const& message ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void popScopedMessage( MessageInfo const& message ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void emplaceUnscopedMessage( MessageBuilder const& builder ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        std::string getCurrentTestName() const override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        const AssertionResult* getLastResult() const override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void exceptionEarlyReported() override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void handleFatalErrorCondition( StringRef message ) override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        bool lastAssertionPassed() override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        void assertionPassed() override;$/;"	m	class:Catch::RunContext
override	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        bool aborting() const override;$/;"	m	class:Catch::RunContext
m_runInfo	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        TestRunInfo m_runInfo;$/;"	m	class:Catch::RunContext
m_context	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        IMutableContext& m_context;$/;"	m	class:Catch::RunContext
m_activeTestCase	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        TestCaseHandle const* m_activeTestCase = nullptr;$/;"	m	class:Catch::RunContext
m_testCaseTracker	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        ITracker* m_testCaseTracker = nullptr;$/;"	m	class:Catch::RunContext
m_lastResult	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        Option<AssertionResult> m_lastResult;$/;"	m	class:Catch::RunContext
m_config	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        IConfig const* m_config;$/;"	m	class:Catch::RunContext
m_totals	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        Totals m_totals;$/;"	m	class:Catch::RunContext
m_reporter	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        IStreamingReporterPtr m_reporter;$/;"	m	class:Catch::RunContext
m_messages	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        std::vector<MessageInfo> m_messages;$/;"	m	class:Catch::RunContext
m_messageScopes	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        std::vector<ScopedMessage> m_messageScopes; \/* Keeps owners of so-called unscoped messages. *\/$/;"	m	class:Catch::RunContext
m_lastAssertionInfo	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        AssertionInfo m_lastAssertionInfo;$/;"	m	class:Catch::RunContext
m_unfinishedSections	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        std::vector<SectionEndInfo> m_unfinishedSections;$/;"	m	class:Catch::RunContext
m_activeSections	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        std::vector<ITracker*> m_activeSections;$/;"	m	class:Catch::RunContext
m_trackerContext	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        TrackerContext m_trackerContext;$/;"	m	class:Catch::RunContext
m_lastAssertionPassed	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        bool m_lastAssertionPassed = false;$/;"	m	class:Catch::RunContext
m_shouldReportUnexpected	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        bool m_shouldReportUnexpected = true;$/;"	m	class:Catch::RunContext
m_includeSuccessfulResults	..\Catch2\src\catch2\internal\catch_run_context.hpp	/^        bool m_includeSuccessfulResults;$/;"	m	class:Catch::RunContext
Catch	..\Catch2\src\catch2\internal\catch_section.cpp	/^namespace Catch {$/;"	n	file:
Section	..\Catch2\src\catch2\internal\catch_section.cpp	/^    Section::Section( SectionInfo&& info ):$/;"	f	class:Catch::Section
~Section	..\Catch2\src\catch2\internal\catch_section.cpp	/^    Section::~Section() {$/;"	f	class:Catch::Section
operator bool	..\Catch2\src\catch2\internal\catch_section.cpp	/^    Section::operator bool() const {$/;"	f	class:Catch::Section
CATCH_SECTION_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_section.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_section.hpp	/^namespace Catch {$/;"	n
Section	..\Catch2\src\catch2\internal\catch_section.hpp	/^    class Section : Detail::NonCopyable {$/;"	c	namespace:Catch
m_info	..\Catch2\src\catch2\internal\catch_section.hpp	/^        SectionInfo m_info;$/;"	m	class:Catch::Section
m_assertions	..\Catch2\src\catch2\internal\catch_section.hpp	/^        Counts m_assertions;$/;"	m	class:Catch::Section
m_sectionIncluded	..\Catch2\src\catch2\internal\catch_section.hpp	/^        bool m_sectionIncluded;$/;"	m	class:Catch::Section
m_timer	..\Catch2\src\catch2\internal\catch_section.hpp	/^        Timer m_timer;$/;"	m	class:Catch::Section
INTERNAL_CATCH_SECTION	..\Catch2\src\catch2\internal\catch_section.hpp	38;"	d
INTERNAL_CATCH_DYNAMIC_SECTION	..\Catch2\src\catch2\internal\catch_section.hpp	44;"	d
Catch	..\Catch2\src\catch2\internal\catch_singletons.cpp	/^namespace Catch {$/;"	n	file:
~ISingleton	..\Catch2\src\catch2\internal\catch_singletons.cpp	/^    ISingleton::~ISingleton() {}$/;"	f	class:Catch::ISingleton
addSingleton	..\Catch2\src\catch2\internal\catch_singletons.cpp	/^    void addSingleton(ISingleton* singleton ) {$/;"	f	namespace:Catch
cleanupSingletons	..\Catch2\src\catch2\internal\catch_singletons.cpp	/^    void cleanupSingletons() {$/;"	f	namespace:Catch
CATCH_SINGLETONS_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_singletons.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_singletons.hpp	/^namespace Catch {$/;"	n
ISingleton	..\Catch2\src\catch2\internal\catch_singletons.hpp	/^    struct ISingleton {$/;"	s	namespace:Catch
Singleton	..\Catch2\src\catch2\internal\catch_singletons.hpp	/^    class Singleton : SingletonImplT, public ISingleton {$/;"	c	namespace:Catch
Catch	..\Catch2\src\catch2\internal\catch_source_line_info.cpp	/^namespace Catch {$/;"	n	file:
operator <<	..\Catch2\src\catch2\internal\catch_source_line_info.cpp	/^    std::ostream& operator << ( std::ostream& os, SourceLineInfo const& info ) {$/;"	f	namespace:Catch
CATCH_SOURCE_LINE_INFO_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	9;"	d
Catch_global_namespace_dummy	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^struct Catch_global_namespace_dummy {};$/;"	s
Catch	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^namespace Catch {$/;"	n
SourceLineInfo	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
noexcept	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^        constexpr SourceLineInfo( char const* _file, std::size_t _line ) noexcept:$/;"	m	struct:Catch::SourceLineInfo
line	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^            line( _line )$/;"	f	struct:Catch::SourceLineInfo
noexcept	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^        bool operator == ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
noexcept	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^        bool operator < ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
file	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo
line	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
CATCH_INTERNAL_LINEINFO	..\Catch2\src\catch2\internal\catch_source_line_info.hpp	44;"	d
CATCH_STARTUP_EXCEPTION_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_startup_exception_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_startup_exception_registry.hpp	/^namespace Catch {$/;"	n
StartupExceptionRegistry	..\Catch2\src\catch2\internal\catch_startup_exception_registry.hpp	/^    class StartupExceptionRegistry {$/;"	c	namespace:Catch
noexcept	..\Catch2\src\catch2\internal\catch_startup_exception_registry.hpp	/^        void add(std::exception_ptr const& exception) noexcept;$/;"	m	class:Catch::StartupExceptionRegistry
noexcept	..\Catch2\src\catch2\internal\catch_startup_exception_registry.hpp	/^        std::vector<std::exception_ptr> const& getExceptions() const noexcept;$/;"	m	class:Catch::StartupExceptionRegistry
m_exceptions	..\Catch2\src\catch2\internal\catch_startup_exception_registry.hpp	/^        std::vector<std::exception_ptr> m_exceptions;$/;"	m	class:Catch::StartupExceptionRegistry
Catch	..\Catch2\src\catch2\internal\catch_stream.cpp	/^namespace Catch {$/;"	n	file:
Detail	..\Catch2\src\catch2\internal\catch_stream.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
StreamBufImpl	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        class StreamBufImpl : public std::streambuf {$/;"	c	namespace:Catch::Detail::__anon50	file:
data	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            char data[bufferSize];$/;"	m	class:Catch::Detail::__anon50::StreamBufImpl	file:
m_writer	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            WriterF m_writer;$/;"	m	class:Catch::Detail::__anon50::StreamBufImpl	file:
StreamBufImpl	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            StreamBufImpl() {$/;"	f	class:Catch::Detail::__anon50::StreamBufImpl
OutputDebugWriter	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        struct OutputDebugWriter {$/;"	s	namespace:Catch::Detail::__anon50	file:
operator ()	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            void operator()( std::string const&str ) {$/;"	f	struct:Catch::Detail::__anon50::OutputDebugWriter
FileStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        class FileStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon50	file:
m_ofs	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            mutable std::ofstream m_ofs;$/;"	m	class:Catch::Detail::__anon50::FileStream	file:
FileStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            FileStream( std::string const& filename ) {$/;"	f	class:Catch::Detail::__anon50::FileStream
override	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            ~FileStream() override = default;$/;"	m	class:Catch::Detail::__anon50::FileStream	file:
CoutStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        class CoutStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon50	file:
m_os	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            mutable std::ostream m_os;$/;"	m	class:Catch::Detail::__anon50::CoutStream	file:
CoutStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            CoutStream() : m_os( Catch::cout().rdbuf() ) {}$/;"	f	class:Catch::Detail::__anon50::CoutStream
override	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            ~CoutStream() override = default;$/;"	m	class:Catch::Detail::__anon50::CoutStream	file:
DebugOutStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        class DebugOutStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon50	file:
m_streamBuf	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            Detail::unique_ptr<StreamBufImpl<OutputDebugWriter>> m_streamBuf;$/;"	m	class:Catch::Detail::__anon50::DebugOutStream	file:
m_os	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            mutable std::ostream m_os;$/;"	m	class:Catch::Detail::__anon50::DebugOutStream	file:
DebugOutStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            DebugOutStream()$/;"	f	class:Catch::Detail::__anon50::DebugOutStream
override	..\Catch2\src\catch2\internal\catch_stream.cpp	/^            ~DebugOutStream() override = default;$/;"	m	class:Catch::Detail::__anon50::DebugOutStream	file:
StringStreams	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    struct StringStreams {$/;"	s	namespace:Catch	file:
m_streams	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        std::vector<Detail::unique_ptr<std::ostringstream>> m_streams;$/;"	m	struct:Catch::StringStreams	file:
m_unused	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        std::vector<std::size_t> m_unused;$/;"	m	struct:Catch::StringStreams	file:
m_referenceStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        std::ostringstream m_referenceStream; \/\/ Used for copy state\/ flags from$/;"	m	struct:Catch::StringStreams	file:
release	..\Catch2\src\catch2\internal\catch_stream.cpp	/^        void release( std::size_t index ) {$/;"	f	struct:Catch::StringStreams
ReusableStringStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    ReusableStringStream::ReusableStringStream()$/;"	f	class:Catch::ReusableStringStream
~ReusableStringStream	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    ReusableStringStream::~ReusableStringStream() {$/;"	f	class:Catch::ReusableStringStream
str	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    std::string ReusableStringStream::str() const {$/;"	f	class:Catch::ReusableStringStream
str	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    void ReusableStringStream::str( std::string const& str ) {$/;"	f	class:Catch::ReusableStringStream
cout	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    std::ostream& cout() { return std::cout; }$/;"	f	namespace:Catch
cerr	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    std::ostream& cerr() { return std::cerr; }$/;"	f	namespace:Catch
clog	..\Catch2\src\catch2\internal\catch_stream.cpp	/^    std::ostream& clog() { return std::clog; }$/;"	f	namespace:Catch
CATCH_STREAM_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_stream.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_stream.hpp	/^namespace Catch {$/;"	n
IStream	..\Catch2\src\catch2\internal\catch_stream.hpp	/^    struct IStream {$/;"	s	namespace:Catch
ReusableStringStream	..\Catch2\src\catch2\internal\catch_stream.hpp	/^    class ReusableStringStream : Detail::NonCopyable {$/;"	c	namespace:Catch
m_index	..\Catch2\src\catch2\internal\catch_stream.hpp	/^        std::size_t m_index;$/;"	m	class:Catch::ReusableStringStream
m_oss	..\Catch2\src\catch2\internal\catch_stream.hpp	/^        std::ostream* m_oss;$/;"	m	class:Catch::ReusableStringStream
CATCH_STREAM_END_STOP_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_stream_end_stop.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_stream_end_stop.hpp	/^namespace Catch {$/;"	n
StreamEndStop	..\Catch2\src\catch2\internal\catch_stream_end_stop.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
operator +	..\Catch2\src\catch2\internal\catch_stream_end_stop.hpp	/^        StringRef operator+() const { return StringRef(); }$/;"	f	struct:Catch::StreamEndStop
operator +	..\Catch2\src\catch2\internal\catch_stream_end_stop.hpp	/^        friend T const& operator+( T const& value, StreamEndStop ) {$/;"	f	struct:Catch::StreamEndStop
Catch	..\Catch2\src\catch2\internal\catch_stringref.cpp	/^namespace Catch {$/;"	n	file:
StringRef	..\Catch2\src\catch2\internal\catch_stringref.cpp	/^    : StringRef( rawChars, static_cast<StringRef::size_type>(std::strlen(rawChars) ) )$/;"	f	namespace:Catch
operator +	..\Catch2\src\catch2\internal\catch_stringref.cpp	/^    std::string operator+(StringRef lhs, StringRef rhs) {$/;"	f	namespace:Catch
CATCH_STRINGREF_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_stringref.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^namespace Catch {$/;"	n
StringRef	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^    class StringRef {$/;"	c	namespace:Catch
s_empty	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef
m_start	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        char const* m_start = s_empty;$/;"	m	class:Catch::StringRef
m_size	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        size_type m_size = 0;$/;"	m	class:Catch::StringRef
noexcept	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        constexpr StringRef() noexcept = default;$/;"	m	class:Catch::StringRef
noexcept	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        StringRef( char const* rawChars ) noexcept;$/;"	m	class:Catch::StringRef
m_size	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^            m_size( size )$/;"	f	class:Catch::StringRef
m_size	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^            m_size( stdString.size() )$/;"	f	class:Catch::StringRef
operator std::string	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        explicit operator std::string() const {$/;"	f	class:Catch::StringRef
noexcept	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        bool operator<(StringRef const& rhs) const noexcept;$/;"	m	class:Catch::StringRef
begin	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        constexpr const_iterator begin() const { return m_start; }$/;"	f	class:Catch::StringRef
end	..\Catch2\src\catch2\internal\catch_stringref.hpp	/^        constexpr const_iterator end() const { return m_start + m_size; }$/;"	f	class:Catch::StringRef
Catch	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^namespace Catch {$/;"	n	file:
toLowerCh	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^        char toLowerCh(char c) {$/;"	f	namespace:Catch::__anon51
startsWith	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    bool startsWith( std::string const& s, std::string const& prefix ) {$/;"	f	namespace:Catch
startsWith	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    bool startsWith( std::string const& s, char prefix ) {$/;"	f	namespace:Catch
endsWith	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    bool endsWith( std::string const& s, std::string const& suffix ) {$/;"	f	namespace:Catch
endsWith	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    bool endsWith( std::string const& s, char suffix ) {$/;"	f	namespace:Catch
contains	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    bool contains( std::string const& s, std::string const& infix ) {$/;"	f	namespace:Catch
toLowerInPlace	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    void toLowerInPlace( std::string& s ) {$/;"	f	namespace:Catch
toLower	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    std::string toLower( std::string const& s ) {$/;"	f	namespace:Catch
trim	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    std::string trim( std::string const& str ) {$/;"	f	namespace:Catch
trim	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    StringRef trim(StringRef ref) {$/;"	f	namespace:Catch
replaceInPlace	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    bool replaceInPlace( std::string& str, std::string const& replaceThis, std::string const& withThis ) {$/;"	f	namespace:Catch
splitStringRef	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    std::vector<StringRef> splitStringRef( StringRef str, char delimiter ) {$/;"	f	namespace:Catch
pluralise	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    pluralise::pluralise( std::size_t count, std::string const& label )$/;"	f	class:Catch::pluralise
operator <<	..\Catch2\src\catch2\internal\catch_string_manip.cpp	/^    std::ostream& operator << ( std::ostream& os, pluralise const& pluraliser ) {$/;"	f	namespace:Catch
CATCH_STRING_MANIP_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_string_manip.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_string_manip.hpp	/^namespace Catch {$/;"	n
pluralise	..\Catch2\src\catch2\internal\catch_string_manip.hpp	/^    struct pluralise {$/;"	s	namespace:Catch
m_count	..\Catch2\src\catch2\internal\catch_string_manip.hpp	/^        std::size_t m_count;$/;"	m	struct:Catch::pluralise
m_label	..\Catch2\src\catch2\internal\catch_string_manip.hpp	/^        std::string m_label;$/;"	m	struct:Catch::pluralise
Catch	..\Catch2\src\catch2\internal\catch_tag_alias_registry.cpp	/^namespace Catch {$/;"	n	file:
~TagAliasRegistry	..\Catch2\src\catch2\internal\catch_tag_alias_registry.cpp	/^    TagAliasRegistry::~TagAliasRegistry() {}$/;"	f	class:Catch::TagAliasRegistry
find	..\Catch2\src\catch2\internal\catch_tag_alias_registry.cpp	/^    TagAlias const* TagAliasRegistry::find( std::string const& alias ) const {$/;"	f	class:Catch::TagAliasRegistry
expandAliases	..\Catch2\src\catch2\internal\catch_tag_alias_registry.cpp	/^    std::string TagAliasRegistry::expandAliases( std::string const& unexpandedTestSpec ) const {$/;"	f	class:Catch::TagAliasRegistry
add	..\Catch2\src\catch2\internal\catch_tag_alias_registry.cpp	/^    void TagAliasRegistry::add( std::string const& alias, std::string const& tag, SourceLineInfo const& lineInfo ) {$/;"	f	class:Catch::TagAliasRegistry
~ITagAliasRegistry	..\Catch2\src\catch2\internal\catch_tag_alias_registry.cpp	/^    ITagAliasRegistry::~ITagAliasRegistry() {}$/;"	f	class:Catch::ITagAliasRegistry
get	..\Catch2\src\catch2\internal\catch_tag_alias_registry.cpp	/^    ITagAliasRegistry const& ITagAliasRegistry::get() {$/;"	f	class:Catch::ITagAliasRegistry
CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_tag_alias_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_tag_alias_registry.hpp	/^namespace Catch {$/;"	n
TagAliasRegistry	..\Catch2\src\catch2\internal\catch_tag_alias_registry.hpp	/^    class TagAliasRegistry : public ITagAliasRegistry {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\internal\catch_tag_alias_registry.hpp	/^        ~TagAliasRegistry() override;$/;"	m	class:Catch::TagAliasRegistry
override	..\Catch2\src\catch2\internal\catch_tag_alias_registry.hpp	/^        TagAlias const* find( std::string const& alias ) const override;$/;"	m	class:Catch::TagAliasRegistry
override	..\Catch2\src\catch2\internal\catch_tag_alias_registry.hpp	/^        std::string expandAliases( std::string const& unexpandedTestSpec ) const override;$/;"	m	class:Catch::TagAliasRegistry
m_registry	..\Catch2\src\catch2\internal\catch_tag_alias_registry.hpp	/^        std::map<std::string, TagAlias> m_registry;$/;"	m	class:Catch::TagAliasRegistry
CATCH_TEMPLATE_TEST_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	9;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	26;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	28;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	37;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	40;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	45;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	48;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	53;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	56;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	61;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	64;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	71;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	102;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	105;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	110;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	113;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	117;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	152;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	155;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	160;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	163;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	167;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	195;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	199;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	230;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	233;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	238;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	241;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	245;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	283;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	286;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	291;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	294;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	298;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\src\catch2\internal\catch_template_test_registry.hpp	329;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^namespace Catch {$/;"	n	file:
HashTest	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    struct HashTest {$/;"	s	namespace:Catch::__anon52	file:
HashTest	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^        explicit HashTest(SimplePcg32& rng_inst) {$/;"	f	struct:Catch::__anon52::HashTest
basis	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^        uint64_t basis;$/;"	m	struct:Catch::__anon52::HashTest	file:
operator ()	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^        uint64_t operator()(TestCaseInfo const& t) const {$/;"	f	struct:Catch::__anon52::HashTest
sortTests	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> sortTests( IConfig const& config, std::vector<TestCaseHandle> const& unsortedTestCases ) {$/;"	f	namespace:Catch
isThrowSafe	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    bool isThrowSafe( TestCaseHandle const& testCase, IConfig const& config ) {$/;"	f	namespace:Catch
matchTest	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    bool matchTest( TestCaseHandle const& testCase, TestSpec const& testSpec, IConfig const& config ) {$/;"	f	namespace:Catch
enforceNoDuplicateTestCases	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    void enforceNoDuplicateTestCases( std::vector<TestCaseHandle> const& functions ) {$/;"	f	namespace:Catch
filterTests	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> filterTests( std::vector<TestCaseHandle> const& testCases, TestSpec const& testSpec, IConfig const& config ) {$/;"	f	namespace:Catch
getAllTestCasesSorted	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> const& getAllTestCasesSorted( IConfig const& config ) {$/;"	f	class:Catch::std
registerTest	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    void TestRegistry::registerTest(Detail::unique_ptr<TestCaseInfo> testInfo, Detail::unique_ptr<ITestInvoker> testInvoker) {$/;"	f	class:Catch::TestRegistry
getAllInfos	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseInfo*> const& TestRegistry::getAllInfos() const {$/;"	f	class:Catch::std::TestRegistry
getAllTests	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTests() const {$/;"	f	class:Catch::std::TestRegistry
getAllTestsSorted	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTestsSorted( IConfig const& config ) const {$/;"	f	class:Catch::std::TestRegistry
invoke	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    void TestInvokerAsFunction::invoke() const {$/;"	f	class:Catch::TestInvokerAsFunction
extractClassName	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.cpp	/^    std::string extractClassName( StringRef const& classOrQualifiedMethodName ) {$/;"	f	namespace:Catch
CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^namespace Catch {$/;"	n
TestRegistry	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^    class TestRegistry : public ITestCaseRegistry {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        ~TestRegistry() override = default;$/;"	m	class:Catch::TestRegistry
override	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseInfo*> const& getAllInfos() const override;$/;"	m	class:Catch::TestRegistry
override	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseHandle> const& getAllTests() const override;$/;"	m	class:Catch::TestRegistry
override	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseHandle> const& getAllTestsSorted( IConfig const& config ) const override;$/;"	m	class:Catch::TestRegistry
m_owned_test_infos	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        std::vector<Detail::unique_ptr<TestCaseInfo>> m_owned_test_infos;$/;"	m	class:Catch::TestRegistry
m_viewed_test_infos	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseInfo*> m_viewed_test_infos;$/;"	m	class:Catch::TestRegistry
m_invokers	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        std::vector<Detail::unique_ptr<ITestInvoker>> m_invokers;$/;"	m	class:Catch::TestRegistry
m_handles	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseHandle> m_handles;$/;"	m	class:Catch::TestRegistry
m_currentSortOrder	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        mutable TestRunOrder m_currentSortOrder = TestRunOrder::Declared;$/;"	m	class:Catch::TestRegistry
m_sortedFunctions	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        mutable std::vector<TestCaseHandle> m_sortedFunctions;$/;"	m	class:Catch::TestRegistry
final	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^    class TestInvokerAsFunction final : public ITestInvoker {$/;"	c	namespace:Catch
m_testAsFunction	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^            m_testAsFunction(testAsFunction) {}$/;"	f	class:Catch::final
override	..\Catch2\src\catch2\internal\catch_test_case_registry_impl.hpp	/^        void invoke() const override;$/;"	m	class:Catch::final
Catch	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^namespace Catch {$/;"	n	file:
TestCaseTracking	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^namespace TestCaseTracking {$/;"	n	namespace:Catch	file:
NameAndLocation	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    NameAndLocation::NameAndLocation( std::string const& _name, SourceLineInfo const& _location )$/;"	f	class:Catch::TestCaseTracking::NameAndLocation
addChild	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void ITracker::addChild( ITrackerPtr&& child ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
findChild	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    ITracker* ITracker::findChild( NameAndLocation const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
startRun	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    ITracker& TrackerContext::startRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
endRun	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerContext::endRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
startCycle	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerContext::startCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
completeCycle	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerContext::completeCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
completedCycle	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool TrackerContext::completedCycle() const {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
currentTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    ITracker& TrackerContext::currentTracker() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
setCurrentTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerContext::setCurrentTracker( ITracker* tracker ) {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
TrackerBase	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    TrackerBase::TrackerBase( NameAndLocation const& nameAndLocation, TrackerContext& ctx, ITracker* parent ):$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isComplete	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool TrackerBase::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isSuccessfullyCompleted	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool TrackerBase::isSuccessfullyCompleted() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isOpen	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool TrackerBase::isOpen() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
parent	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    ITracker& TrackerBase::parent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
openChild	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerBase::openChild() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isSectionTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool TrackerBase::isSectionTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isGeneratorTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool TrackerBase::isGeneratorTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::TrackerBase
open	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerBase::open() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
close	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerBase::close() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
fail	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerBase::fail() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
markAsNeedingAnotherRun	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerBase::markAsNeedingAnotherRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
moveToParent	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerBase::moveToParent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
moveToThis	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void TrackerBase::moveToThis() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
SectionTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    SectionTracker::SectionTracker( NameAndLocation const& nameAndLocation, TrackerContext& ctx, ITracker* parent )$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isComplete	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool SectionTracker::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isSectionTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    bool SectionTracker::isSectionTracker() const { return true; }$/;"	f	class:Catch::TestCaseTracking::SectionTracker
acquire	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    SectionTracker& SectionTracker::acquire( TrackerContext& ctx, NameAndLocation const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
tryOpen	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void SectionTracker::tryOpen() {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addInitialFilters	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void SectionTracker::addInitialFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addNextFilters	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    void SectionTracker::addNextFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
getFilters	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    std::vector<std::string> const& SectionTracker::getFilters() const {$/;"	f	class:Catch::TestCaseTracking::std::SectionTracker
trimmedName	..\Catch2\src\catch2\internal\catch_test_case_tracker.cpp	/^    std::string const& SectionTracker::trimmedName() const {$/;"	f	class:Catch::TestCaseTracking::std::SectionTracker
CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^namespace Catch {$/;"	n
TestCaseTracking	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^namespace TestCaseTracking {$/;"	n	namespace:Catch
NameAndLocation	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^    struct NameAndLocation {$/;"	s	namespace:Catch::TestCaseTracking
name	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        std::string name;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocation
location	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        SourceLineInfo location;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocation
operator ==	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        friend bool operator==(NameAndLocation const& lhs, NameAndLocation const& rhs) {$/;"	f	struct:Catch::TestCaseTracking::NameAndLocation
ITracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^    class  ITracker {$/;"	c	namespace:Catch::TestCaseTracking
m_nameAndLocation	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        NameAndLocation m_nameAndLocation;$/;"	m	class:Catch::TestCaseTracking::ITracker
m_children	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        Children m_children;$/;"	m	class:Catch::TestCaseTracking::ITracker
ITracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        ITracker(NameAndLocation const& nameAndLoc) :$/;"	f	class:Catch::TestCaseTracking::ITracker
nameAndLocation	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        NameAndLocation const& nameAndLocation() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
hasChildren	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool hasChildren() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
TrackerContext	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^    class TrackerContext {$/;"	c	namespace:Catch::TestCaseTracking
RunState	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        enum RunState {$/;"	g	class:Catch::TestCaseTracking::TrackerContext
NotStarted	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            NotStarted,$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
Executing	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            Executing,$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
CompletedCycle	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            CompletedCycle$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
m_rootTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        ITrackerPtr m_rootTracker;$/;"	m	class:Catch::TestCaseTracking::TrackerContext
m_currentTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        ITracker* m_currentTracker = nullptr;$/;"	m	class:Catch::TestCaseTracking::TrackerContext
m_runState	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        RunState m_runState = NotStarted;$/;"	m	class:Catch::TestCaseTracking::TrackerContext
TrackerBase	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^    class TrackerBase : public ITracker {$/;"	c	namespace:Catch::TestCaseTracking
CycleState	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        enum CycleState {$/;"	g	class:Catch::TestCaseTracking::TrackerBase
NotStarted	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            NotStarted,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
Executing	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            Executing,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
ExecutingChildren	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            ExecutingChildren,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
NeedsAnotherRun	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            NeedsAnotherRun,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
CompletedSuccessfully	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            CompletedSuccessfully,$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
Failed	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^            Failed$/;"	e	enum:Catch::TestCaseTracking::TrackerBase::CycleState
m_ctx	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        TrackerContext& m_ctx;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
m_parent	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        ITracker* m_parent;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
m_runState	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        CycleState m_runState = NotStarted;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool isComplete() const override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool isSuccessfullyCompleted() const override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool isOpen() const override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        ITracker& parent() override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        void openChild() override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool isSectionTracker() const override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool isGeneratorTracker() const override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        void close() override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        void fail() override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        void markAsNeedingAnotherRun() override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
SectionTracker	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^    class SectionTracker : public TrackerBase {$/;"	c	namespace:Catch::TestCaseTracking
m_filters	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        std::vector<std::string> m_filters;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
m_trimmed_name	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        std::string m_trimmed_name;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool isSectionTracker() const override;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
override	..\Catch2\src\catch2\internal\catch_test_case_tracker.hpp	/^        bool isComplete() const override;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
CATCH_TEST_FAILURE_EXCEPTION_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_test_failure_exception.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_failure_exception.hpp	/^namespace Catch {$/;"	n
TestFailureException	..\Catch2\src\catch2\internal\catch_test_failure_exception.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
CATCH_TEST_MACRO_IMPL_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	9;"	d
CATCH_INTERNAL_STRINGIFY	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	25;"	d
CATCH_INTERNAL_STRINGIFY	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	27;"	d
INTERNAL_CATCH_TRY	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	35;"	d
INTERNAL_CATCH_CATCH	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	36;"	d
INTERNAL_CATCH_TRY	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	40;"	d
INTERNAL_CATCH_CATCH	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	41;"	d
INTERNAL_CATCH_REACT	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	45;"	d
INTERNAL_CATCH_TEST	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	48;"	d
INTERNAL_CATCH_IF	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	63;"	d
INTERNAL_CATCH_ELSE	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	68;"	d
INTERNAL_CATCH_NO_THROW	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	73;"	d
INTERNAL_CATCH_THROWS	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	87;"	d
INTERNAL_CATCH_THROWS_AS	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	104;"	d
INTERNAL_CATCH_THROWS_STR_MATCHES	..\Catch2\src\catch2\internal\catch_test_macro_impl.hpp	127;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_registry.cpp	/^namespace Catch {$/;"	n	file:
makeTestInvoker	..\Catch2\src\catch2\internal\catch_test_registry.cpp	/^    Detail::unique_ptr<ITestInvoker> makeTestInvoker( void(*testAsFunction)() ) {$/;"	f	namespace:Catch
CATCH_TEST_REGISTRY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_test_registry.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^namespace Catch {$/;"	n
TestInvokerAsMethod	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^class TestInvokerAsMethod : public ITestInvoker {$/;"	c	namespace:Catch
m_testAsMethod	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^    void (C::*m_testAsMethod)();$/;"	m	class:Catch::TestInvokerAsMethod
m_testAsMethod	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {}$/;"	f	class:Catch::TestInvokerAsMethod
makeTestInvoker	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^Detail::unique_ptr<ITestInvoker> makeTestInvoker( void (C::*testAsMethod)() ) {$/;"	f	namespace:Catch
NameAndTags	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^struct NameAndTags {$/;"	s	namespace:Catch
noexcept	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^                StringRef const& tags_ = StringRef()) noexcept:$/;"	m	struct:Catch::NameAndTags
tags	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^        name(name_), tags(tags_) {}$/;"	f	struct:Catch::NameAndTags
name	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^    StringRef name;$/;"	m	struct:Catch::NameAndTags
tags	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^    StringRef tags;$/;"	m	struct:Catch::NameAndTags
AutoReg	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^struct AutoReg : Detail::NonCopyable {$/;"	s	namespace:Catch
noexcept	..\Catch2\src\catch2\internal\catch_test_registry.hpp	/^    AutoReg( Detail::unique_ptr<ITestInvoker> invoker, SourceLineInfo const& lineInfo, StringRef const& classOrMethod, NameAndTags const& nameAndTags ) noexcept;$/;"	m	struct:Catch::AutoReg
INTERNAL_CATCH_TESTCASE_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_test_registry.hpp	63;"	d
INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION	..\Catch2\src\catch2\internal\catch_test_registry.hpp	65;"	d
INTERNAL_CATCH_TESTCASE2	..\Catch2\src\catch2\internal\catch_test_registry.hpp	75;"	d
INTERNAL_CATCH_TESTCASE	..\Catch2\src\catch2\internal\catch_test_registry.hpp	82;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	..\Catch2\src\catch2\internal\catch_test_registry.hpp	86;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	..\Catch2\src\catch2\internal\catch_test_registry.hpp	93;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	..\Catch2\src\catch2\internal\catch_test_registry.hpp	104;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	..\Catch2\src\catch2\internal\catch_test_registry.hpp	108;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^namespace Catch {$/;"	n	file:
TestSpecParser	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    TestSpecParser::TestSpecParser( ITagAliasRegistry const& tagAliases ) : m_tagAliases( &tagAliases ) {}$/;"	f	class:Catch::TestSpecParser
parse	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    TestSpecParser& TestSpecParser::parse( std::string const& arg ) {$/;"	f	class:Catch::TestSpecParser
testSpec	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    TestSpec TestSpecParser::testSpec() {$/;"	f	class:Catch::TestSpecParser
visitChar	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    bool TestSpecParser::visitChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processNoneChar	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    bool TestSpecParser::processNoneChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processNameChar	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::processNameChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processOtherChar	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    bool TestSpecParser::processOtherChar( char c ) {$/;"	f	class:Catch::TestSpecParser
startNewMode	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::startNewMode( Mode mode ) {$/;"	f	class:Catch::TestSpecParser
endMode	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::endMode() {$/;"	f	class:Catch::TestSpecParser
escape	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::escape() {$/;"	f	class:Catch::TestSpecParser
isControlChar	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    bool TestSpecParser::isControlChar( char c ) const {$/;"	f	class:Catch::TestSpecParser
addFilter	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::addFilter() {$/;"	f	class:Catch::TestSpecParser
saveLastMode	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::saveLastMode() {$/;"	f	class:Catch::TestSpecParser
revertBackToLastMode	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::revertBackToLastMode() {$/;"	f	class:Catch::TestSpecParser
separate	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    bool TestSpecParser::separate() {$/;"	f	class:Catch::TestSpecParser
preprocessPattern	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    std::string TestSpecParser::preprocessPattern() {$/;"	f	class:Catch::TestSpecParser
addNamePattern	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::addNamePattern() {$/;"	f	class:Catch::TestSpecParser
addTagPattern	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    void TestSpecParser::addTagPattern() {$/;"	f	class:Catch::TestSpecParser
parseTestSpec	..\Catch2\src\catch2\internal\catch_test_spec_parser.cpp	/^    TestSpec parseTestSpec( std::string const& arg ) {$/;"	f	namespace:Catch
CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^namespace Catch {$/;"	n
TestSpecParser	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^    class TestSpecParser {$/;"	c	namespace:Catch
Mode	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	g	class:Catch::TestSpecParser
None	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
Name	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
QuotedName	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
Tag	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
EscapedName	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
m_mode	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        Mode m_mode = None;$/;"	m	class:Catch::TestSpecParser
lastMode	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        Mode lastMode = None;$/;"	m	class:Catch::TestSpecParser
m_exclusion	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        bool m_exclusion = false;$/;"	m	class:Catch::TestSpecParser
m_pos	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        std::size_t m_pos = 0;$/;"	m	class:Catch::TestSpecParser
m_realPatternPos	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        std::size_t m_realPatternPos = 0;$/;"	m	class:Catch::TestSpecParser
m_arg	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        std::string m_arg;$/;"	m	class:Catch::TestSpecParser
m_substring	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        std::string m_substring;$/;"	m	class:Catch::TestSpecParser
m_patternName	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        std::string m_patternName;$/;"	m	class:Catch::TestSpecParser
m_escapeChars	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        std::vector<std::size_t> m_escapeChars;$/;"	m	class:Catch::TestSpecParser
m_currentFilter	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        TestSpec::Filter m_currentFilter;$/;"	m	class:Catch::TestSpecParser
m_testSpec	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        TestSpec m_testSpec;$/;"	m	class:Catch::TestSpecParser
m_tagAliases	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        ITagAliasRegistry const* m_tagAliases = nullptr;$/;"	m	class:Catch::TestSpecParser
addCharToPattern	..\Catch2\src\catch2\internal\catch_test_spec_parser.hpp	/^        inline void addCharToPattern(char c) {$/;"	f	class:Catch::TestSpecParser
isWhitespace	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^    bool isWhitespace( char c ) {$/;"	f	namespace:__anon53
isBreakableBefore	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^    bool isBreakableBefore( char c ) {$/;"	f	namespace:__anon53
isBreakableAfter	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^    bool isBreakableAfter( char c ) {$/;"	f	namespace:__anon53
isBoundary	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^    bool isBoundary( std::string const& line, size_t at ) {$/;"	f	namespace:__anon53
Catch	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^namespace Catch {$/;"	n	file:
TextFlow	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^    namespace TextFlow {$/;"	n	namespace:Catch	file:
calcLength	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        void Column::iterator::calcLength() {$/;"	f	class:Catch::TextFlow::Column::iterator
indent	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        size_t Column::iterator::indent() const {$/;"	f	class:Catch::TextFlow::Column::iterator
addIndentAndSuffix	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Column::iterator::addIndentAndSuffix( size_t position,$/;"	f	class:Catch::TextFlow::Column::iterator
iterator	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Column::iterator::iterator( Column const& column ): m_column( column ) {$/;"	f	class:Catch::TextFlow::Column::iterator
operator *	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        std::string Column::iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Column::iterator
operator ++	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Column::iterator& Column::iterator::operator++() {$/;"	f	class:Catch::TextFlow::Column::iterator
operator ++	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Column::iterator Column::iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Column::iterator
operator <<	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        std::ostream& operator<<( std::ostream& os, Column const& col ) {$/;"	f	namespace:Catch::TextFlow
Spacer	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Column Spacer( size_t spaceWidth ) {$/;"	f	namespace:Catch::TextFlow
iterator	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Columns::iterator::iterator( Columns const& columns, EndTag ):$/;"	f	class:Catch::TextFlow::Columns::iterator
iterator	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Columns::iterator::iterator( Columns const& columns ):$/;"	f	class:Catch::TextFlow::Columns::iterator
operator *	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        std::string Columns::iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Columns::iterator& Columns::iterator::operator++() {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Columns::iterator Columns::iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator <<	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        std::ostream& operator<<( std::ostream& os, Columns const& cols ) {$/;"	f	namespace:Catch::TextFlow
operator +	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Columns Column::operator+( Column const& other ) {$/;"	f	class:Catch::TextFlow::Column
operator +=	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Columns& Columns::operator+=( Column const& col ) {$/;"	f	class:Catch::TextFlow::Columns
operator +	..\Catch2\src\catch2\internal\catch_textflow.cpp	/^        Columns Columns::operator+( Column const& col ) {$/;"	f	class:Catch::TextFlow::Columns
CATCH_TEXTFLOW_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_textflow.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^namespace Catch {$/;"	n
TextFlow	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^    namespace TextFlow {$/;"	n	namespace:Catch
Column	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^        class Column {$/;"	c	namespace:Catch::TextFlow
m_string	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            std::string m_string;$/;"	m	class:Catch::TextFlow::Column
m_width	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            size_t m_width = CATCH_CONFIG_CONSOLE_WIDTH - 1;$/;"	m	class:Catch::TextFlow::Column
m_indent	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            size_t m_indent = 0;$/;"	m	class:Catch::TextFlow::Column
m_initialIndent	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            size_t m_initialIndent = std::string::npos;$/;"	m	class:Catch::TextFlow::Column
iterator	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            class iterator {$/;"	c	class:Catch::TextFlow::Column
EndTag	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                struct EndTag {};$/;"	s	class:Catch::TextFlow::Column::iterator
m_column	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                Column const& m_column;$/;"	m	class:Catch::TextFlow::Column::iterator
m_pos	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                size_t m_pos = 0;$/;"	m	class:Catch::TextFlow::Column::iterator
m_len	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                size_t m_len = 0;$/;"	m	class:Catch::TextFlow::Column::iterator
m_end	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                size_t m_end = 0;$/;"	m	class:Catch::TextFlow::Column::iterator
m_suffix	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                bool m_suffix = false;$/;"	m	class:Catch::TextFlow::Column::iterator
iterator	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                iterator( Column const& column, EndTag ):$/;"	f	class:Catch::TextFlow::Column::iterator
operator ==	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                bool operator==( iterator const& other ) const {$/;"	f	class:Catch::TextFlow::Column::iterator
operator !=	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                bool operator!=( iterator const& other ) const {$/;"	f	class:Catch::TextFlow::Column::iterator
Column	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            explicit Column( std::string const& text ): m_string( text ) {}$/;"	f	class:Catch::TextFlow::Column
width	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            Column& width( size_t newWidth ) {$/;"	f	class:Catch::TextFlow::Column
indent	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            Column& indent( size_t newIndent ) {$/;"	f	class:Catch::TextFlow::Column
initialIndent	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            Column& initialIndent( size_t newIndent ) {$/;"	f	class:Catch::TextFlow::Column
width	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            size_t width() const { return m_width; }$/;"	f	class:Catch::TextFlow::Column
begin	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            iterator begin() const { return iterator( *this ); }$/;"	f	class:Catch::TextFlow::Column
end	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            iterator end() const { return { *this, iterator::EndTag{} }; }$/;"	f	class:Catch::TextFlow::Column
Columns	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^        class Columns {$/;"	c	namespace:Catch::TextFlow
m_columns	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            std::vector<Column> m_columns;$/;"	m	class:Catch::TextFlow::Columns
iterator	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            class iterator {$/;"	c	class:Catch::TextFlow::Columns
EndTag	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                struct EndTag {};$/;"	s	class:Catch::TextFlow::Columns::iterator
m_columns	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                std::vector<Column> const& m_columns;$/;"	m	class:Catch::TextFlow::Columns::iterator::std
m_iterators	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                std::vector<Column::iterator> m_iterators;$/;"	m	class:Catch::TextFlow::Columns::iterator
m_activeIterators	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^                size_t m_activeIterators;$/;"	m	class:Catch::TextFlow::Columns::iterator
begin	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            iterator begin() const { return iterator( *this ); }$/;"	f	class:Catch::TextFlow::Columns
end	..\Catch2\src\catch2\internal\catch_textflow.hpp	/^            iterator end() const { return { *this, iterator::EndTag() }; }$/;"	f	class:Catch::TextFlow::Columns
CATCH_TO_STRING_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_to_string.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_to_string.hpp	/^namespace Catch {$/;"	n
to_string	..\Catch2\src\catch2\internal\catch_to_string.hpp	/^    std::string to_string(T const& t) {$/;"	f	namespace:Catch
CATCH_UNCAUGHT_EXCEPTIONS_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_uncaught_exceptions.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_uncaught_exceptions.hpp	/^namespace Catch {$/;"	n
CATCH_UNIQUE_NAME_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_unique_name.hpp	9;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	..\Catch2\src\catch2\internal\catch_unique_name.hpp	12;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	..\Catch2\src\catch2\internal\catch_unique_name.hpp	13;"	d
INTERNAL_CATCH_UNIQUE_NAME	..\Catch2\src\catch2\internal\catch_unique_name.hpp	15;"	d
INTERNAL_CATCH_UNIQUE_NAME	..\Catch2\src\catch2\internal\catch_unique_name.hpp	17;"	d
CATCH_UNIQUE_PTR_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^namespace Catch {$/;"	n
Detail	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^namespace Detail {$/;"	n	namespace:Catch
unique_ptr	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^    class unique_ptr {$/;"	c	namespace:Catch::Detail
m_ptr	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        T* m_ptr;$/;"	m	class:Catch::Detail::unique_ptr
unique_ptr	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        constexpr unique_ptr(std::nullptr_t = nullptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        explicit constexpr unique_ptr(T* ptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        unique_ptr(unique_ptr<U>&& from):$/;"	f	class:Catch::Detail::unique_ptr
operator =	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        unique_ptr& operator=(unique_ptr<U>&& from) {$/;"	f	class:Catch::Detail::unique_ptr
m_ptr	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^            m_ptr(rhs.m_ptr) {$/;"	f	class:Catch::Detail::unique_ptr
~unique_ptr	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        ~unique_ptr() {$/;"	f	class:Catch::Detail::unique_ptr
operator *	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        T& operator*() {$/;"	f	class:Catch::Detail::unique_ptr
operator *	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        T const& operator*() const {$/;"	f	class:Catch::Detail::unique_ptr
get	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        T* get() { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
get	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        T const* get() const { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
reset	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        void reset(T* ptr = nullptr) {$/;"	f	class:Catch::Detail::unique_ptr
release	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        T* release() {$/;"	f	class:Catch::Detail::unique_ptr
operator bool	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::Detail::unique_ptr
swap	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^        friend void swap(unique_ptr& lhs, unique_ptr& rhs) {$/;"	f	class:Catch::Detail::unique_ptr
make_unique	..\Catch2\src\catch2\internal\catch_unique_ptr.hpp	/^    unique_ptr<T> make_unique(Args&&... args) {$/;"	f	namespace:Catch::Detail
Catch	..\Catch2\src\catch2\internal\catch_wildcard_pattern.cpp	/^namespace Catch {$/;"	n	file:
WildcardPattern	..\Catch2\src\catch2\internal\catch_wildcard_pattern.cpp	/^    WildcardPattern::WildcardPattern( std::string const& pattern,$/;"	f	class:Catch::WildcardPattern
matches	..\Catch2\src\catch2\internal\catch_wildcard_pattern.cpp	/^    bool WildcardPattern::matches( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
normaliseString	..\Catch2\src\catch2\internal\catch_wildcard_pattern.cpp	/^    std::string WildcardPattern::normaliseString( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
CATCH_WILDCARD_PATTERN_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^namespace Catch$/;"	n
WildcardPattern	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^    class WildcardPattern {$/;"	c	namespace:Catch
WildcardPosition	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^        enum WildcardPosition {$/;"	g	class:Catch::WildcardPattern
NoWildcard	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^            NoWildcard = 0,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardAtStart	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^            WildcardAtStart = 1,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardAtEnd	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^            WildcardAtEnd = 2,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardAtBothEnds	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^            WildcardAtBothEnds = WildcardAtStart | WildcardAtEnd$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
m_caseSensitivity	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^        CaseSensitive m_caseSensitivity;$/;"	m	class:Catch::WildcardPattern
m_wildcard	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^        WildcardPosition m_wildcard = NoWildcard;$/;"	m	class:Catch::WildcardPattern
m_pattern	..\Catch2\src\catch2\internal\catch_wildcard_pattern.hpp	/^        std::string m_pattern;$/;"	m	class:Catch::WildcardPattern
CATCH_WINDOWS_H_PROXY_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_windows_h_proxy.hpp	9;"	d
CATCH_DEFINED_NOMINMAX	..\Catch2\src\catch2\internal\catch_windows_h_proxy.hpp	16;"	d
NOMINMAX	..\Catch2\src\catch2\internal\catch_windows_h_proxy.hpp	17;"	d
CATCH_DEFINED_WIN32_LEAN_AND_MEAN	..\Catch2\src\catch2\internal\catch_windows_h_proxy.hpp	20;"	d
WIN32_LEAN_AND_MEAN	..\Catch2\src\catch2\internal\catch_windows_h_proxy.hpp	21;"	d
NOMINMAX	..\Catch2\src\catch2\internal\catch_windows_h_proxy.hpp	31;"	d
WIN32_LEAN_AND_MEAN	..\Catch2\src\catch2\internal\catch_windows_h_proxy.hpp	34;"	d
Catch	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^namespace Catch {$/;"	n	file:
trailingBytes	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    size_t trailingBytes(unsigned char c) {$/;"	f	namespace:Catch::__anon54
headerValue	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    uint32_t headerValue(unsigned char c) {$/;"	f	namespace:Catch::__anon54
hexEscapeChar	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    void hexEscapeChar(std::ostream& os, unsigned char c) {$/;"	f	namespace:Catch::__anon54
shouldNewline	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    bool shouldNewline(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon54
shouldIndent	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    bool shouldIndent(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon54
operator |	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlFormatting operator | (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
operator &	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlFormatting operator & (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
XmlEncode	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlEncode::XmlEncode( std::string const& str, ForWhat forWhat )$/;"	f	class:Catch::XmlEncode
encodeTo	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    void XmlEncode::encodeTo( std::ostream& os ) const {$/;"	f	class:Catch::XmlEncode
operator <<	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    std::ostream& operator << ( std::ostream& os, XmlEncode const& xmlEncode ) {$/;"	f	namespace:Catch
ScopedElement	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::ScopedElement( XmlWriter* writer, XmlFormatting fmt )$/;"	f	class:Catch::XmlWriter::ScopedElement
m_fmt	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^        m_fmt(other.m_fmt)$/;"	f	namespace:Catch
~ScopedElement	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::~ScopedElement() {$/;"	f	class:Catch::XmlWriter::ScopedElement
writeText	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement& XmlWriter::ScopedElement::writeText( std::string const& text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter::ScopedElement
XmlWriter	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter::XmlWriter( std::ostream& os ) : m_os( os )$/;"	f	class:Catch::XmlWriter
~XmlWriter	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter::~XmlWriter() {$/;"	f	class:Catch::XmlWriter
startElement	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::startElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
scopedElement	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement XmlWriter::scopedElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
endElement	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::endElement(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeAttribute	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, std::string const& attribute ) {$/;"	f	class:Catch::XmlWriter
writeAttribute	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, bool attribute ) {$/;"	f	class:Catch::XmlWriter
writeText	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeText( std::string const& text, XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeComment	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeComment( std::string const& text, XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeStylesheetRef	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    void XmlWriter::writeStylesheetRef( std::string const& url ) {$/;"	f	class:Catch::XmlWriter
writeBlankLine	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeBlankLine() {$/;"	f	class:Catch::XmlWriter
ensureTagClosed	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    void XmlWriter::ensureTagClosed() {$/;"	f	class:Catch::XmlWriter
applyFormatting	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    void XmlWriter::applyFormatting(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
writeDeclaration	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    void XmlWriter::writeDeclaration() {$/;"	f	class:Catch::XmlWriter
newlineIfNecessary	..\Catch2\src\catch2\internal\catch_xmlwriter.cpp	/^    void XmlWriter::newlineIfNecessary() {$/;"	f	class:Catch::XmlWriter
CATCH_XMLWRITER_HPP_INCLUDED	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	9;"	d
Catch	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^namespace Catch {$/;"	n
XmlFormatting	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^    enum class XmlFormatting {$/;"	c	namespace:Catch
None	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        None = 0x00,$/;"	m	class:Catch::XmlFormatting
Indent	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        Indent = 0x01,$/;"	m	class:Catch::XmlFormatting
Newline	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        Newline = 0x02,$/;"	m	class:Catch::XmlFormatting
XmlEncode	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^    class XmlEncode {$/;"	c	namespace:Catch
ForWhat	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	g	class:Catch::XmlEncode
ForTextNodes	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:Catch::XmlEncode::ForWhat
ForAttributes	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:Catch::XmlEncode::ForWhat
m_str	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        std::string m_str;$/;"	m	class:Catch::XmlEncode
m_forWhat	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        ForWhat m_forWhat;$/;"	m	class:Catch::XmlEncode
XmlWriter	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^    class XmlWriter {$/;"	c	namespace:Catch
ScopedElement	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        class ScopedElement {$/;"	c	class:Catch::XmlWriter
noexcept	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^            ScopedElement( ScopedElement&& other ) noexcept;$/;"	m	class:Catch::XmlWriter::ScopedElement
noexcept	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^            ScopedElement& operator=( ScopedElement&& other ) noexcept;$/;"	m	class:Catch::XmlWriter::ScopedElement
writeAttribute	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^            ScopedElement& writeAttribute( std::string const& name, T const& attribute ) {$/;"	f	class:Catch::XmlWriter::ScopedElement
m_writer	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^            mutable XmlWriter* m_writer = nullptr;$/;"	m	class:Catch::XmlWriter::ScopedElement
m_fmt	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^            XmlFormatting m_fmt;$/;"	m	class:Catch::XmlWriter::ScopedElement
writeAttribute	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        XmlWriter& writeAttribute( std::string const& name, T const& attribute ) {$/;"	f	class:Catch::XmlWriter
m_tagIsOpen	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        bool m_tagIsOpen = false;$/;"	m	class:Catch::XmlWriter
m_needsNewline	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        bool m_needsNewline = false;$/;"	m	class:Catch::XmlWriter
m_tags	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        std::vector<std::string> m_tags;$/;"	m	class:Catch::XmlWriter
m_indent	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        std::string m_indent;$/;"	m	class:Catch::XmlWriter
m_os	..\Catch2\src\catch2\internal\catch_xmlwriter.hpp	/^        std::ostream& m_os;$/;"	m	class:Catch::XmlWriter
CATCH_MATCHERS_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
MatcherUntypedBase	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^    class MatcherUntypedBase {$/;"	c	namespace:Catch::Matchers
m_cachedToString	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^        mutable std::string m_cachedToString;$/;"	m	class:Catch::Matchers::MatcherUntypedBase
MatcherMethod	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^    struct MatcherMethod {$/;"	s	namespace:Catch::Matchers
MatcherBase	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^    struct MatcherBase : MatcherUntypedBase, MatcherMethod<T> {};$/;"	s	namespace:Catch::Matchers
Detail	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers
final	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^        struct MatchAllOf final : MatcherBase<ArgT> {$/;"	s	namespace:Catch::Matchers::Detail
operator &&	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            friend MatchAllOf operator&& (MatchAllOf&& lhs, MatcherBase<ArgT> const& rhs) {$/;"	f	struct:Catch::Matchers::Detail::final
operator &&	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            friend MatchAllOf operator&& (MatcherBase<ArgT> const& lhs, MatchAllOf&& rhs) {$/;"	f	struct:Catch::Matchers::Detail::final
m_matchers	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            std::vector<MatcherBase<ArgT> const*> m_matchers;$/;"	m	struct:Catch::Matchers::Detail::final
final	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^        struct MatchAnyOf final : MatcherBase<ArgT> {$/;"	s	namespace:Catch::Matchers::Detail
operator ||	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            friend MatchAnyOf operator|| (MatchAnyOf&& lhs, MatcherBase<ArgT> const& rhs) {$/;"	f	struct:Catch::Matchers::Detail::final
operator ||	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            friend MatchAnyOf operator|| (MatcherBase<ArgT> const& lhs, MatchAnyOf&& rhs) {$/;"	f	struct:Catch::Matchers::Detail::final
m_matchers	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            std::vector<MatcherBase<ArgT> const*> m_matchers;$/;"	m	struct:Catch::Matchers::Detail::final
final	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^        struct MatchNotOf final : MatcherBase<ArgT> {$/;"	s	namespace:Catch::Matchers::Detail
MatchNotOf	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            explicit MatchNotOf( MatcherBase<ArgT> const& underlyingMatcher ):$/;"	f	struct:Catch::Matchers::Detail::final
m_underlyingMatcher	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^            MatcherBase<ArgT> const& m_underlyingMatcher;$/;"	m	struct:Catch::Matchers::Detail::final
operator &&	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^    Detail::MatchAllOf<T> operator&& (MatcherBase<T> const& lhs, MatcherBase<T> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ||	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^    Detail::MatchAnyOf<T> operator|| (MatcherBase<T> const& lhs, MatcherBase<T> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator !	..\Catch2\src\catch2\matchers\catch_matchers.hpp	/^    Detail::MatchNotOf<T> operator! (MatcherBase<T> const& matcher) {$/;"	f	namespace:Catch::Matchers
CATCH_REQUIRE_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	204;"	d
CATCH_REQUIRE_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	205;"	d
CATCH_CHECK_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	207;"	d
CATCH_CHECK_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	208;"	d
CATCH_CHECK_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	210;"	d
CATCH_REQUIRE_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	211;"	d
CATCH_REQUIRE_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	215;"	d
CATCH_REQUIRE_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	216;"	d
CATCH_CHECK_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	218;"	d
CATCH_CHECK_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	219;"	d
CATCH_CHECK_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	221;"	d
CATCH_REQUIRE_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	222;"	d
REQUIRE_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	226;"	d
REQUIRE_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	227;"	d
CHECK_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	229;"	d
CHECK_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	230;"	d
CHECK_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	232;"	d
REQUIRE_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	233;"	d
REQUIRE_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	237;"	d
REQUIRE_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	238;"	d
CHECK_THROWS_WITH	..\Catch2\src\catch2\matchers\catch_matchers.hpp	240;"	d
CHECK_THROWS_MATCHES	..\Catch2\src\catch2\matchers\catch_matchers.hpp	241;"	d
CHECK_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	243;"	d
REQUIRE_THAT	..\Catch2\src\catch2\matchers\catch_matchers.hpp	244;"	d
CATCH_MATCHERS_ALL_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_all.hpp	21;"	d
CATCH_MATCHERS_CONTAINER_PROPERTIES_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^        class IsEmptyMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
match	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
override	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            std::string describe() const override;$/;"	m	class:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^        class HasSizeMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
m_target_size	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            std::size_t m_target_size;$/;"	m	class:Catch::Matchers::final
HasSizeMatcher	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            explicit HasSizeMatcher(std::size_t target_size):$/;"	f	class:Catch::Matchers::final
match	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
override	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            std::string describe() const override;$/;"	m	class:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^        class SizeMatchesMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
m_matcher	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
SizeMatchesMatcher	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            explicit SizeMatchesMatcher(Matcher m):$/;"	f	class:Catch::Matchers::final
match	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
SizeIs	..\Catch2\src\catch2\matchers\catch_matchers_container_properties.hpp	/^        SizeMatchesMatcher<Matcher>> SizeIs(Matcher&& m) {$/;"	f	namespace:Catch::Matchers
CATCH_MATCHERS_CONTAINS_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^        class ContainsElementMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
m_desired	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^            T m_desired;$/;"	m	class:Catch::Matchers::final
m_eq	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^            Equality m_eq;$/;"	m	class:Catch::Matchers::final
ContainsElementMatcher	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^            ContainsElementMatcher(T2&& target, Equality2&& predicate):$/;"	f	class:Catch::Matchers::final
match	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^        class ContainsMatcherMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
m_matcher	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
ContainsMatcherMatcher	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^            ContainsMatcherMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
match	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
Contains	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^        ContainsElementMatcher<T, std::equal_to<>>> Contains(T&& elem) {$/;"	f	namespace:Catch::Matchers
Contains	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^        ContainsMatcherMatcher<Matcher>> Contains(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
Contains	..\Catch2\src\catch2\matchers\catch_matchers_contains.hpp	/^        ContainsElementMatcher<T, Equality> Contains(T&& elem, Equality&& eq) {$/;"	f	namespace:Catch::Matchers
CATCH_MATCHERS_EXCEPTION_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	/^class ExceptionMessageMatcher final : public MatcherBase<std::exception> {$/;"	c	namespace:Catch::Matchers
m_message	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	/^    std::string m_message;$/;"	m	class:Catch::Matchers::final
ExceptionMessageMatcher	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	/^    ExceptionMessageMatcher(std::string const& message):$/;"	f	class:Catch::Matchers::final
override	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	/^    bool match(std::exception const& ex) const override;$/;"	m	class:Catch::Matchers::final
override	..\Catch2\src\catch2\matchers\catch_matchers_exception.hpp	/^    std::string describe() const override;$/;"	m	class:Catch::Matchers::final
Catch	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^namespace Catch {$/;"	n	file:
convert	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    int32_t convert(float f) {$/;"	f	namespace:Catch::__anon55
convert	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    int64_t convert(double d) {$/;"	f	namespace:Catch::__anon55
almostEqualUlps	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    bool almostEqualUlps(FP lhs, FP rhs, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::__anon55
nextafter	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    float nextafter(float x, float y) {$/;"	f	namespace:Catch::__anon55
nextafter	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    double nextafter(double x, double y) {$/;"	f	namespace:Catch::__anon55
step	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^FP step(FP start, FP direction, uint64_t steps) {$/;"	f	namespace:Catch::__anon55
marginComparison	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:Catch::__anon55
write	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^void write(std::ostream& out, FloatingPoint num) {$/;"	f	namespace:Catch::__anon55
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
FloatingPointKind	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    enum class FloatingPointKind : uint8_t {$/;"	c	namespace:Catch::Matchers::Detail	file:
Float	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^        Float,$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind	file:
WithinAbsMatcher	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    WithinAbsMatcher::WithinAbsMatcher(double target, double margin)$/;"	f	class:Catch::Matchers::WithinAbsMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    bool WithinAbsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
describe	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    std::string WithinAbsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
WithinUlpsMatcher	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    WithinUlpsMatcher::WithinUlpsMatcher(double target, uint64_t ulps, Detail::FloatingPointKind baseType)$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    bool WithinUlpsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
describe	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    std::string WithinUlpsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
WithinRelMatcher	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    WithinRelMatcher::WithinRelMatcher(double target, double epsilon):$/;"	f	class:Catch::Matchers::WithinRelMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    bool WithinRelMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
describe	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^    std::string WithinRelMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
WithinULP	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^WithinUlpsMatcher WithinULP(double target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinULP	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^WithinUlpsMatcher WithinULP(float target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinAbs	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^WithinAbsMatcher WithinAbs(double target, double margin) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(double target, double eps) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(double target) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(float target, float eps) {$/;"	f	namespace:Catch::Matchers
WithinRel	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(float target) {$/;"	f	namespace:Catch::Matchers
CATCH_MATCHERS_FLOATING_POINT_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers
FloatingPointKind	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        enum class FloatingPointKind : uint8_t;$/;"	c	namespace:Catch::Matchers::Detail
override	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        bool match(double const& matchee) const override;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
override	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        std::string describe() const override;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
m_target	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        double m_target;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
m_margin	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        double m_margin;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
final	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^    struct WithinUlpsMatcher final : MatcherBase<double> {$/;"	s	namespace:Catch::Matchers::Detail
override	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        bool match(double const& matchee) const override;$/;"	m	struct:Catch::Matchers::Detail::final
override	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        std::string describe() const override;$/;"	m	struct:Catch::Matchers::Detail::final
m_target	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        double m_target;$/;"	m	struct:Catch::Matchers::Detail::final
m_ulps	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        uint64_t m_ulps;$/;"	m	struct:Catch::Matchers::Detail::final
m_type	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        Detail::FloatingPointKind m_type;$/;"	m	struct:Catch::Matchers::Detail::final
final	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^    struct WithinRelMatcher final : MatcherBase<double> {$/;"	s	namespace:Catch::Matchers::Detail
override	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        bool match(double const& matchee) const override;$/;"	m	struct:Catch::Matchers::Detail::final
override	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        std::string describe() const override;$/;"	m	struct:Catch::Matchers::Detail::final
m_target	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        double m_target;$/;"	m	struct:Catch::Matchers::Detail::final
m_epsilon	..\Catch2\src\catch2\matchers\catch_matchers_floating_point.hpp	/^        double m_epsilon;$/;"	m	struct:Catch::Matchers::Detail::final
CATCH_MATCHERS_PREDICATE_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Detail	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^namespace Detail {$/;"	n	namespace:Catch::Matchers
final	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^class PredicateMatcher final : public MatcherBase<T> {$/;"	c	namespace:Catch::Matchers
m_predicate	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^    Predicate m_predicate;$/;"	m	class:Catch::Matchers::final
m_description	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^    std::string m_description;$/;"	m	class:Catch::Matchers::final
PredicateMatcher	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^    PredicateMatcher(Predicate&& elem, std::string const& descr)$/;"	f	class:Catch::Matchers::final
Predicate	..\Catch2\src\catch2\matchers\catch_matchers_predicate.hpp	/^    PredicateMatcher<T, Pred> Predicate(Pred&& predicate, std::string const& description = "") {$/;"	f	namespace:Catch::Matchers
CATCH_MATCHERS_QUANTIFIERS_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^        class AllMatchMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
m_matcher	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
AllMatchMatcher	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            AllMatchMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
match	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^        class NoneMatchMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
m_matcher	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
NoneMatchMatcher	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            NoneMatchMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
match	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^        class AnyMatchMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
m_matcher	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
AnyMatchMatcher	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            AnyMatchMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
match	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
AllMatch	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^        AllMatchMatcher<Matcher> AllMatch(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
NoneMatch	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^        NoneMatchMatcher<Matcher> NoneMatch(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
AnyMatch	..\Catch2\src\catch2\matchers\catch_matchers_quantifiers.hpp	/^        AnyMatchMatcher<Matcher> AnyMatch(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
Catch	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
CasedString	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    CasedString::CasedString( std::string const& str, CaseSensitive caseSensitivity )$/;"	f	class:Catch::Matchers::CasedString
adjustString	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    std::string CasedString::adjustString( std::string const& str ) const {$/;"	f	class:Catch::Matchers::CasedString
caseSensitivitySuffix	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StringRef CasedString::caseSensitivitySuffix() const {$/;"	f	class:Catch::Matchers::CasedString
StringMatcherBase	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StringMatcherBase::StringMatcherBase( std::string const& operation, CasedString const& comparator )$/;"	f	class:Catch::Matchers::StringMatcherBase
describe	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    std::string StringMatcherBase::describe() const {$/;"	f	class:Catch::Matchers::StringMatcherBase
StringEqualsMatcher	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StringEqualsMatcher::StringEqualsMatcher( CasedString const& comparator ) : StringMatcherBase( "equals", comparator ) {}$/;"	f	class:Catch::Matchers::StringEqualsMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    bool StringEqualsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringEqualsMatcher
StringContainsMatcher	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StringContainsMatcher::StringContainsMatcher( CasedString const& comparator ) : StringMatcherBase( "contains", comparator ) {}$/;"	f	class:Catch::Matchers::StringContainsMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    bool StringContainsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringContainsMatcher
StartsWithMatcher	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StartsWithMatcher::StartsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "starts with", comparator ) {}$/;"	f	class:Catch::Matchers::StartsWithMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    bool StartsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StartsWithMatcher
EndsWithMatcher	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    EndsWithMatcher::EndsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "ends with", comparator ) {}$/;"	f	class:Catch::Matchers::EndsWithMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    bool EndsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::EndsWithMatcher
RegexMatcher	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    RegexMatcher::RegexMatcher(std::string regex, CaseSensitive caseSensitivity): m_regex(std::move(regex)), m_caseSensitivity(caseSensitivity) {}$/;"	f	class:Catch::Matchers::RegexMatcher
match	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    bool RegexMatcher::match(std::string const& matchee) const {$/;"	f	class:Catch::Matchers::RegexMatcher
describe	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    std::string RegexMatcher::describe() const {$/;"	f	class:Catch::Matchers::RegexMatcher
Equals	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StringEqualsMatcher Equals( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
Contains	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StringContainsMatcher Contains( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
EndsWith	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    EndsWithMatcher EndsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
StartsWith	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    StartsWithMatcher StartsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
Matches	..\Catch2\src\catch2\matchers\catch_matchers_string.cpp	/^    RegexMatcher Matches(std::string const& regex, CaseSensitive caseSensitivity) {$/;"	f	namespace:Catch::Matchers
CATCH_MATCHERS_STRING_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
CasedString	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^    struct CasedString {$/;"	s	namespace:Catch::Matchers
m_caseSensitivity	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        CaseSensitive m_caseSensitivity;$/;"	m	struct:Catch::Matchers::CasedString
m_str	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        std::string m_str;$/;"	m	struct:Catch::Matchers::CasedString
StringMatcherBase	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^    struct StringMatcherBase : MatcherBase<std::string> {$/;"	s	namespace:Catch::Matchers
override	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        std::string describe() const override;$/;"	m	struct:Catch::Matchers::StringMatcherBase
m_comparator	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        CasedString m_comparator;$/;"	m	struct:Catch::Matchers::StringMatcherBase
m_operation	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        std::string m_operation;$/;"	m	struct:Catch::Matchers::StringMatcherBase
final	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^    struct StringEqualsMatcher final : StringMatcherBase {$/;"	s	namespace:Catch::Matchers
override	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        bool match( std::string const& source ) const override;$/;"	m	struct:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^    struct StringContainsMatcher final : StringMatcherBase {$/;"	s	namespace:Catch::Matchers
override	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        bool match( std::string const& source ) const override;$/;"	m	struct:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^    struct StartsWithMatcher final : StringMatcherBase {$/;"	s	namespace:Catch::Matchers
override	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        bool match( std::string const& source ) const override;$/;"	m	struct:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^    struct EndsWithMatcher final : StringMatcherBase {$/;"	s	namespace:Catch::Matchers
override	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        bool match( std::string const& source ) const override;$/;"	m	struct:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^    struct RegexMatcher final : MatcherBase<std::string> {$/;"	s	namespace:Catch::Matchers
override	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        bool match( std::string const& matchee ) const override;$/;"	m	struct:Catch::Matchers::final
override	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        std::string describe() const override;$/;"	m	struct:Catch::Matchers::final
m_regex	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        std::string m_regex;$/;"	m	struct:Catch::Matchers::final
m_caseSensitivity	..\Catch2\src\catch2\matchers\catch_matchers_string.hpp	/^        CaseSensitive m_caseSensitivity;$/;"	m	struct:Catch::Matchers::final
Catch	..\Catch2\src\catch2\matchers\catch_matchers_templated.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_templated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Detail	..\Catch2\src\catch2\matchers\catch_matchers_templated.cpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
describe_multi_matcher	..\Catch2\src\catch2\matchers\catch_matchers_templated.cpp	/^        std::string describe_multi_matcher(StringRef combine, std::string const* descriptions_begin, std::string const* descriptions_end) {$/;"	f	namespace:Catch::Matchers::Detail
CATCH_MATCHERS_TEMPLATED_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
MatcherGenericBase	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^    struct MatcherGenericBase : MatcherUntypedBase {$/;"	s	namespace:Catch::Matchers
Detail	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers
array_cat	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        std::array<void const*, N + M> array_cat(std::array<void const*, N> && lhs, std::array<void const*, M> && rhs) {$/;"	f	namespace:Catch::Matchers::Detail
array_cat	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        std::array<void const*, N+1> array_cat(std::array<void const*, N> && lhs, void const* rhs) {$/;"	f	namespace:Catch::Matchers::Detail
array_cat	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        std::array<void const*, N+1> array_cat(void const* lhs, std::array<void const*, N> && rhs) {$/;"	f	namespace:Catch::Matchers::Detail
match_all_of	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        bool match_all_of(Arg&&, std::array<void const*, N> const&, std::index_sequence<>) {$/;"	f	namespace:Catch::Matchers::Detail
match_all_of	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        bool match_all_of(Arg&& arg, std::array<void const*, N> const& matchers, std::index_sequence<Idx, Indices...>) {$/;"	f	namespace:Catch::Matchers::Detail
match_any_of	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        bool match_any_of(Arg&&, std::array<void const*, N> const&, std::index_sequence<>) {$/;"	f	namespace:Catch::Matchers::Detail
match_any_of	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        bool match_any_of(Arg&& arg, std::array<void const*, N> const& matchers, std::index_sequence<Idx, Indices...>) {$/;"	f	namespace:Catch::Matchers::Detail
describe_multi_matcher	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        std::string describe_multi_matcher(StringRef combine, std::array<void const*, sizeof...(MatcherTs)> const& matchers, std::index_sequence<Idx...>) {$/;"	f	namespace:Catch::Matchers::Detail
final	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        struct MatchAllOfGeneric final : MatcherGenericBase {$/;"	s	namespace:Catch::Matchers::Detail
MatchAllOfGeneric	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatchAllOfGeneric(MatcherTs const&... matchers) : m_matchers{ {std::addressof(matchers)...} } {}$/;"	f	struct:Catch::Matchers::Detail::final
MatchAllOfGeneric	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            explicit MatchAllOfGeneric(std::array<void const*, sizeof...(MatcherTs)> matchers) : m_matchers{matchers} {}$/;"	f	struct:Catch::Matchers::Detail::final
match	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            bool match(Arg&& arg) const {$/;"	f	struct:Catch::Matchers::Detail::final
m_matchers	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            std::array<void const*, sizeof...(MatcherTs)> m_matchers;$/;"	m	struct:Catch::Matchers::Detail::final
operator &&	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatchAllOfGeneric<MatcherTs..., MatchersRHS...> operator && ($/;"	f	struct:Catch::Matchers::Detail::final
operator &&	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatchAllOfGeneric<MatcherTs..., MatcherRHS>> operator && ($/;"	f	struct:Catch::Matchers::Detail::final
operator &&	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatchAllOfGeneric<MatcherLHS, MatcherTs...>> operator && ($/;"	f	struct:Catch::Matchers::Detail::final
final	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        struct MatchAnyOfGeneric final : MatcherGenericBase {$/;"	s	namespace:Catch::Matchers::Detail
MatchAnyOfGeneric	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatchAnyOfGeneric(MatcherTs const&... matchers) : m_matchers{ {std::addressof(matchers)...} } {}$/;"	f	struct:Catch::Matchers::Detail::final
MatchAnyOfGeneric	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            explicit MatchAnyOfGeneric(std::array<void const*, sizeof...(MatcherTs)> matchers) : m_matchers{matchers} {}$/;"	f	struct:Catch::Matchers::Detail::final
match	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            bool match(Arg&& arg) const {$/;"	f	struct:Catch::Matchers::Detail::final
m_matchers	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            std::array<void const*, sizeof...(MatcherTs)> m_matchers;$/;"	m	struct:Catch::Matchers::Detail::final
operator ||	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            friend MatchAnyOfGeneric<MatcherTs..., MatchersRHS...> operator || ($/;"	f	struct:Catch::Matchers::Detail::final
operator ||	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatchAnyOfGeneric<MatcherTs..., MatcherRHS>> operator || ($/;"	f	struct:Catch::Matchers::Detail::final
operator ||	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatchAnyOfGeneric<MatcherLHS, MatcherTs...>> operator || ($/;"	f	struct:Catch::Matchers::Detail::final
final	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        struct MatchNotOfGeneric final : MatcherGenericBase {$/;"	s	namespace:Catch::Matchers::Detail
MatchNotOfGeneric	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            explicit MatchNotOfGeneric(MatcherT const& matcher) : m_matcher{matcher} {}$/;"	f	struct:Catch::Matchers::Detail::final
match	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            bool match(Arg&& arg) const {$/;"	f	struct:Catch::Matchers::Detail::final
operator !	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            friend MatcherT const& operator ! (MatchNotOfGeneric<MatcherT> const& matcher) {$/;"	f	struct:Catch::Matchers::Detail::final
m_matcher	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^            MatcherT const& m_matcher;$/;"	m	struct:Catch::Matchers::Detail::final
operator &&	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        operator && (MatcherLHS const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ||	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        operator || (MatcherLHS const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
operator !	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        operator ! (MatcherT const& matcher) {$/;"	f	namespace:Catch::Matchers
operator &&	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        operator && (MatcherLHS const& lhs, MatcherBase<ArgRHS> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator &&	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        operator && (MatcherBase<ArgLHS> const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ||	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        operator || (MatcherLHS const& lhs, MatcherBase<ArgRHS> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ||	..\Catch2\src\catch2\matchers\catch_matchers_templated.hpp	/^        operator || (MatcherBase<ArgLHS> const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
CATCH_MATCHERS_VECTOR_HPP_INCLUDED	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^namespace Catch {$/;"	n
Matchers	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
final	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    struct VectorContainsElementMatcher final : MatcherBase<std::vector<T, Alloc>> {$/;"	s	namespace:Catch::Matchers
VectorContainsElementMatcher	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        VectorContainsElementMatcher(T const& comparator):$/;"	f	struct:Catch::Matchers::final
m_comparator	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        T const& m_comparator;$/;"	m	struct:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    struct ContainsMatcher final : MatcherBase<std::vector<T, AllocMatch>> {$/;"	s	namespace:Catch::Matchers
ContainsMatcher	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        ContainsMatcher(std::vector<T, AllocComp> const& comparator):$/;"	f	struct:Catch::Matchers::final
m_comparator	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        std::vector<T, AllocComp> const& m_comparator;$/;"	m	class:Catch::Matchers::final::std
final	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    struct EqualsMatcher final : MatcherBase<std::vector<T, AllocMatch>> {$/;"	s	namespace:Catch::Matchers
EqualsMatcher	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        EqualsMatcher(std::vector<T, AllocComp> const& comparator):$/;"	f	struct:Catch::Matchers::final
m_comparator	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        std::vector<T, AllocComp> const& m_comparator;$/;"	m	class:Catch::Matchers::final::std
final	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    struct ApproxMatcher final : MatcherBase<std::vector<T, AllocMatch>> {$/;"	s	namespace:Catch::Matchers
ApproxMatcher	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        ApproxMatcher(std::vector<T, AllocComp> const& comparator):$/;"	f	struct:Catch::Matchers::final
epsilon	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        ApproxMatcher& epsilon( T const& newEpsilon ) {$/;"	f	struct:Catch::Matchers::final
margin	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        ApproxMatcher& margin( T const& newMargin ) {$/;"	f	struct:Catch::Matchers::final
scale	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        ApproxMatcher& scale( T const& newScale ) {$/;"	f	struct:Catch::Matchers::final
m_comparator	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        std::vector<T, AllocComp> const& m_comparator;$/;"	m	class:Catch::Matchers::final::std
approx	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        mutable Catch::Approx approx = Catch::Approx::custom();$/;"	m	struct:Catch::Matchers::final
final	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    struct UnorderedEqualsMatcher final : MatcherBase<std::vector<T, AllocMatch>> {$/;"	s	namespace:Catch::Matchers
UnorderedEqualsMatcher	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        UnorderedEqualsMatcher(std::vector<T, AllocComp> const& target):$/;"	f	struct:Catch::Matchers::final
m_target	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^        std::vector<T, AllocComp> const& m_target;$/;"	m	class:Catch::Matchers::final::std
Contains	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    ContainsMatcher<T, AllocComp, AllocMatch> Contains( std::vector<T, AllocComp> const& comparator ) {$/;"	f	namespace:Catch::Matchers
VectorContains	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    VectorContainsElementMatcher<T, Alloc> VectorContains( T const& comparator ) {$/;"	f	namespace:Catch::Matchers
Equals	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    EqualsMatcher<T, AllocComp, AllocMatch> Equals( std::vector<T, AllocComp> const& comparator ) {$/;"	f	namespace:Catch::Matchers
Approx	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    ApproxMatcher<T, AllocComp, AllocMatch> Approx( std::vector<T, AllocComp> const& comparator ) {$/;"	f	namespace:Catch::Matchers
UnorderedEquals	..\Catch2\src\catch2\matchers\catch_matchers_vector.hpp	/^    UnorderedEqualsMatcher<T, AllocComp, AllocMatch> UnorderedEquals(std::vector<T, AllocComp> const& target) {$/;"	f	namespace:Catch::Matchers
Catch	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
handleExceptionMatchExpr	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, StringMatcher const& matcher, StringRef const& matcherString  ) {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
describe	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^    std::string IsEmptyMatcher::describe() const {$/;"	f	class:Catch::Matchers::IsEmptyMatcher
describe	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^    std::string HasSizeMatcher::describe() const {$/;"	f	class:Catch::Matchers::HasSizeMatcher
IsEmpty	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^    IsEmptyMatcher IsEmpty() {$/;"	f	namespace:Catch::Matchers
SizeIs	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^    HasSizeMatcher SizeIs(std::size_t sz) {$/;"	f	namespace:Catch::Matchers
Catch	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
toString	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^    std::string MatcherUntypedBase::toString() const {$/;"	f	class:Catch::Matchers::MatcherUntypedBase
finalizeDescription	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^std::string Catch::Matchers::Detail::finalizeDescription(const std::string& desc) {$/;"	f	class:Catch::Matchers::Detail
Catch	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
Matchers	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
match	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^bool ExceptionMessageMatcher::match(std::exception const& ex) const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
describe	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^std::string ExceptionMessageMatcher::describe() const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
Message	..\Catch2\src\catch2\matchers\internal\catch_matchers_combined_tu.cpp	/^ExceptionMessageMatcher Message(std::string const& message) {$/;"	f	namespace:Catch::Matchers
CATCH_MATCHERS_IMPL_HPP_INCLUDED	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	9;"	d
Catch	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^namespace Catch {$/;"	n
MatchExpr	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^    class MatchExpr : public ITransientExpression {$/;"	c	namespace:Catch
m_arg	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^        ArgT && m_arg;$/;"	m	class:Catch::MatchExpr
m_matcher	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^        MatcherT const& m_matcher;$/;"	m	class:Catch::MatchExpr
m_matcherString	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^        StringRef m_matcherString;$/;"	m	class:Catch::MatchExpr
MatchExpr	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^        MatchExpr( ArgT && arg, MatcherT const& matcher, StringRef const& matcherString )$/;"	f	class:Catch::MatchExpr
m_matcherString	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^            m_matcherString( matcherString )$/;"	f	class:Catch::MatchExpr
Matchers	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
INTERNAL_CHECK_THAT	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	57;"	d
INTERNAL_CATCH_THROWS_MATCHES	..\Catch2\src\catch2\matchers\internal\catch_matchers_impl.hpp	68;"	d
CATCH_REPORTERS_ALL_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporters_all.hpp	22;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_automake.cpp	/^namespace Catch {$/;"	n	file:
~AutomakeReporter	..\Catch2\src\catch2\reporters\catch_reporter_automake.cpp	/^    AutomakeReporter::~AutomakeReporter() {}$/;"	f	class:Catch::AutomakeReporter
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_automake.cpp	/^    void AutomakeReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::AutomakeReporter
skipTest	..\Catch2\src\catch2\reporters\catch_reporter_automake.cpp	/^    void AutomakeReporter::skipTest(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::AutomakeReporter
CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	/^namespace Catch {$/;"	n
AutomakeReporter	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	/^    struct AutomakeReporter : StreamingReporterBase {$/;"	s	namespace:Catch
AutomakeReporter	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	/^        AutomakeReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::AutomakeReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	/^        ~AutomakeReporter() override;$/;"	m	struct:Catch::AutomakeReporter
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::AutomakeReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	/^        void testCaseEnded(TestCaseStats const& _testCaseStats) override;$/;"	m	struct:Catch::AutomakeReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_automake.hpp	/^        void skipTest(TestCaseInfo const& testInfo) override;$/;"	m	struct:Catch::AutomakeReporter
Catch	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
listTestNamesOnly	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^        void listTestNamesOnly(std::ostream& out,$/;"	f	namespace:Catch::__anon56
getFormattedDuration	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    std::string getFormattedDuration( double duration ) {$/;"	f	namespace:Catch
shouldShowDuration	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    bool shouldShowDuration( IConfig const& config, double duration ) {$/;"	f	namespace:Catch
serializeFilters	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    std::string serializeFilters( std::vector<std::string> const& filters ) {$/;"	f	namespace:Catch
operator <<	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    std::ostream& operator<<( std::ostream& out, lineOfChars value ) {$/;"	f	namespace:Catch
defaultListReporters	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    defaultListReporters( std::ostream& out,$/;"	f	namespace:Catch
defaultListTags	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void defaultListTags( std::ostream& out,$/;"	f	namespace:Catch
defaultListTests	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void defaultListTests(std::ostream& out, std::vector<TestCaseHandle> const& tests, bool isFiltered, Verbosity verbosity) {$/;"	f	namespace:Catch
Catch	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^namespace Catch {$/;"	n	file:
assertionStarting	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::assertionStarting( AssertionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    bool EventListenerBase::assertionEnded( AssertionStats const& ) {$/;"	f	class:Catch::EventListenerBase
listReporters	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::listReporters($/;"	f	class:Catch::EventListenerBase
listTests	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::listTests( std::vector<TestCaseHandle> const& ) {}$/;"	f	class:Catch::EventListenerBase
listTags	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::listTags( std::vector<TagInfo> const& ) {}$/;"	f	class:Catch::EventListenerBase
noMatchingTestCases	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::noMatchingTestCases( std::string const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunStarting	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::testRunStarting( TestRunInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testGroupStarting	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::testGroupStarting( GroupInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseStarting	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::testCaseStarting( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionStarting	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::sectionStarting( SectionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionEnded	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::sectionEnded( SectionStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::testCaseEnded( TestCaseStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::testGroupEnded( TestGroupStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::testRunEnded( TestRunStats const& ) {}$/;"	f	class:Catch::EventListenerBase
skipTest	..\Catch2\src\catch2\reporters\catch_reporter_combined_tu.cpp	/^    void EventListenerBase::skipTest( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
dimColour	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    Catch::Colour::Code dimColour() { return Catch::Colour::FileName; }$/;"	f	namespace:__anon57
bothOrAll	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    Catch::StringRef bothOrAll( std::size_t count ) {$/;"	f	namespace:__anon57
Catch	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^namespace Catch {$/;"	n	file:
compactFailedString	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    static constexpr Catch::StringRef compactFailedString = "FAILED"_sr;$/;"	v	file:
compactPassedString	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    static constexpr Catch::StringRef compactPassedString = "PASSED"_sr;$/;"	v	file:
printTotals	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^void printTotals(std::ostream& out, const Totals& totals) {$/;"	f	namespace:Catch::__anon58
AssertionPrinter	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^class AssertionPrinter {$/;"	c	namespace:Catch::__anon58	file:
AssertionPrinter	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    AssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfoMessages)$/;"	f	class:Catch::__anon58::AssertionPrinter
print	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void print() {$/;"	f	class:Catch::__anon58::AssertionPrinter
printSourceInfo	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
printResultType	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printResultType(Colour::Code colour, StringRef passOrFail) const {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
printIssue	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printIssue(char const* issue) const {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
printExpressionWas	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printExpressionWas() {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
printOriginalExpression	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
printReconstructedExpression	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
printMessage	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printMessage() {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
printRemainingMessages	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    void printRemainingMessages(Colour::Code colour = dimColour()) {$/;"	f	class:Catch::__anon58::AssertionPrinter	file:
stream	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon58::AssertionPrinter	file:
result	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon58::AssertionPrinter	file:
messages	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon58::AssertionPrinter	file:
itMessage	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon58::AssertionPrinter	file:
printInfoMessages	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon58::AssertionPrinter	file:
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^        std::string CompactReporter::getDescription() {$/;"	f	class:Catch::CompactReporter
noMatchingTestCases	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^        void CompactReporter::noMatchingTestCases( std::string const& spec ) {$/;"	f	class:Catch::CompactReporter
assertionStarting	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^        void CompactReporter::assertionStarting( AssertionInfo const& ) {}$/;"	f	class:Catch::CompactReporter
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^        bool CompactReporter::assertionEnded( AssertionStats const& _assertionStats ) {$/;"	f	class:Catch::CompactReporter
sectionEnded	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^        void CompactReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::CompactReporter
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^        void CompactReporter::testRunEnded( TestRunStats const& _testRunStats ) {$/;"	f	class:Catch::CompactReporter
~CompactReporter	..\Catch2\src\catch2\reporters\catch_reporter_compact.cpp	/^        CompactReporter::~CompactReporter() {}$/;"	f	class:Catch::CompactReporter
CATCH_REPORTER_COMPACT_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^namespace Catch {$/;"	n
CompactReporter	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^    struct CompactReporter : StreamingReporterBase {$/;"	s	namespace:Catch
override	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^        ~CompactReporter() override;$/;"	m	struct:Catch::CompactReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^        void noMatchingTestCases(std::string const& spec) override;$/;"	m	struct:Catch::CompactReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^        void assertionStarting(AssertionInfo const&) override;$/;"	m	struct:Catch::CompactReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^        bool assertionEnded(AssertionStats const& _assertionStats) override;$/;"	m	struct:Catch::CompactReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^        void sectionEnded(SectionStats const& _sectionStats) override;$/;"	m	struct:Catch::CompactReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_compact.hpp	/^        void testRunEnded(TestRunStats const& _testRunStats) override;$/;"	m	struct:Catch::CompactReporter
Catch	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^namespace Catch {$/;"	n	file:
ConsoleAssertionPrinter	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^class ConsoleAssertionPrinter {$/;"	c	namespace:Catch::__anon59	file:
ConsoleAssertionPrinter	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    ConsoleAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfoMessages)$/;"	f	class:Catch::__anon59::ConsoleAssertionPrinter
print	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void print() const {$/;"	f	class:Catch::__anon59::ConsoleAssertionPrinter
printResultType	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void printResultType() const {$/;"	f	class:Catch::__anon59::ConsoleAssertionPrinter	file:
printOriginalExpression	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon59::ConsoleAssertionPrinter	file:
printReconstructedExpression	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon59::ConsoleAssertionPrinter	file:
printMessage	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void printMessage() const {$/;"	f	class:Catch::__anon59::ConsoleAssertionPrinter	file:
printSourceInfo	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon59::ConsoleAssertionPrinter	file:
stream	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
stats	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    AssertionStats const& stats;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
result	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
colour	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    Colour::Code colour;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
passOrFail	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::string passOrFail;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
messageLabel	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::string messageLabel;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
message	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::string message;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
messages	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
printInfoMessages	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon59::ConsoleAssertionPrinter	file:
makeRatio	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^std::size_t makeRatio(std::size_t number, std::size_t total) {$/;"	f	namespace:Catch::__anon59
findMax	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^std::size_t& findMax(std::size_t& i, std::size_t& j, std::size_t& k) {$/;"	f	namespace:Catch::__anon59
Justification	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^enum class Justification { Left, Right };$/;"	c	namespace:Catch::__anon59	file:
Left	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^enum class Justification { Left, Right };$/;"	m	class:Catch::__anon59::Justification	file:
ColumnInfo	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^struct ColumnInfo {$/;"	s	namespace:Catch::__anon59	file:
name	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::string name;$/;"	m	struct:Catch::__anon59::ColumnInfo	file:
width	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    int width;$/;"	m	struct:Catch::__anon59::ColumnInfo	file:
justification	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    Justification justification;$/;"	m	struct:Catch::__anon59::ColumnInfo	file:
ColumnBreak	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^struct ColumnBreak {};$/;"	s	namespace:Catch::__anon59	file:
RowBreak	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^struct RowBreak {};$/;"	s	namespace:Catch::__anon59	file:
Duration	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^class Duration {$/;"	c	namespace:Catch::__anon59	file:
Unit	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    enum class Unit {$/;"	c	class:Catch::__anon59::Duration	file:
Auto	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^        Auto,$/;"	m	class:Catch::__anon59::Duration::Unit	file:
Nanoseconds	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^        Nanoseconds,$/;"	m	class:Catch::__anon59::Duration::Unit	file:
Microseconds	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^        Microseconds,$/;"	m	class:Catch::__anon59::Duration::Unit	file:
Milliseconds	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^        Milliseconds,$/;"	m	class:Catch::__anon59::Duration::Unit	file:
Seconds	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^        Seconds,$/;"	m	class:Catch::__anon59::Duration::Unit	file:
s_nanosecondsInAMicrosecond	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMicrosecond = 1000;$/;"	m	class:Catch::__anon59::Duration	file:
s_nanosecondsInAMillisecond	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMillisecond = 1000 * s_nanosecondsInAMicrosecond;$/;"	m	class:Catch::__anon59::Duration	file:
s_nanosecondsInASecond	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInASecond = 1000 * s_nanosecondsInAMillisecond;$/;"	m	class:Catch::__anon59::Duration	file:
s_nanosecondsInAMinute	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMinute = 60 * s_nanosecondsInASecond;$/;"	m	class:Catch::__anon59::Duration	file:
m_inNanoseconds	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    double m_inNanoseconds;$/;"	m	class:Catch::__anon59::Duration	file:
m_units	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    Unit m_units;$/;"	m	class:Catch::__anon59::Duration	file:
Duration	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    explicit Duration(double inNanoseconds, Unit units = Unit::Auto)$/;"	f	class:Catch::__anon59::Duration
unitsAsString	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    StringRef unitsAsString() const {$/;"	f	class:Catch::__anon59::Duration
TablePrinter	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^class TablePrinter {$/;"	c	namespace:Catch	file:
m_os	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::ostream& m_os;$/;"	m	class:Catch::TablePrinter	file:
m_columnInfos	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::vector<ColumnInfo> m_columnInfos;$/;"	m	class:Catch::TablePrinter	file:
m_oss	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    ReusableStringStream m_oss;$/;"	m	class:Catch::TablePrinter	file:
m_currentColumn	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    int m_currentColumn = -1;$/;"	m	class:Catch::TablePrinter	file:
m_isOpen	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    bool m_isOpen = false;$/;"	m	class:Catch::TablePrinter	file:
TablePrinter	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    TablePrinter( std::ostream& os, std::vector<ColumnInfo> columnInfos )$/;"	f	class:Catch::TablePrinter
open	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void open() {$/;"	f	class:Catch::TablePrinter
close	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    void close() {$/;"	f	class:Catch::TablePrinter
operator <<	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, T const& value) {$/;"	f	class:Catch::TablePrinter
operator <<	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, ColumnBreak) {$/;"	f	class:Catch::TablePrinter
operator <<	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    friend TablePrinter& operator << (TablePrinter& tp, RowBreak) {$/;"	f	class:Catch::TablePrinter
ConsoleReporter	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^ConsoleReporter::ConsoleReporter(ReporterConfig const& config)$/;"	f	class:Catch::ConsoleReporter
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^std::string ConsoleReporter::getDescription() {$/;"	f	class:Catch::ConsoleReporter
noMatchingTestCases	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::noMatchingTestCases(std::string const& spec) {$/;"	f	class:Catch::ConsoleReporter
reportInvalidArguments	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::reportInvalidArguments(std::string const&arg){$/;"	f	class:Catch::ConsoleReporter
assertionStarting	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::assertionStarting(AssertionInfo const&) {}$/;"	f	class:Catch::ConsoleReporter
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^bool ConsoleReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::ConsoleReporter
sectionStarting	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::sectionStarting(SectionInfo const& _sectionInfo) {$/;"	f	class:Catch::ConsoleReporter
sectionEnded	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::ConsoleReporter
benchmarkPreparing	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::ConsoleReporter
benchmarkStarting	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkStarting(BenchmarkInfo const& info) {$/;"	f	class:Catch::ConsoleReporter
benchmarkEnded	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkEnded(BenchmarkStats<> const& stats) {$/;"	f	class:Catch::ConsoleReporter
benchmarkFailed	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkFailed(std::string const& error) {$/;"	f	class:Catch::ConsoleReporter
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::ConsoleReporter
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::testGroupEnded(TestGroupStats const& _testGroupStats) {$/;"	f	class:Catch::ConsoleReporter
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::ConsoleReporter
testRunStarting	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::testRunStarting(TestRunInfo const& _testInfo) {$/;"	f	class:Catch::ConsoleReporter
lazyPrint	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrint() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintWithoutClosingBenchmarkTable	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintWithoutClosingBenchmarkTable() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintRunInfo	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintRunInfo() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintGroupInfo	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintGroupInfo() {$/;"	f	class:Catch::ConsoleReporter
printTestCaseAndSectionHeader	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printTestCaseAndSectionHeader() {$/;"	f	class:Catch::ConsoleReporter
printClosedHeader	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printClosedHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printOpenHeader	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printOpenHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printHeaderString	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printHeaderString(std::string const& _string, std::size_t indent) {$/;"	f	class:Catch::ConsoleReporter
SummaryColumn	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^struct SummaryColumn {$/;"	s	namespace:Catch	file:
SummaryColumn	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    SummaryColumn( std::string _label, Colour::Code _colour )$/;"	f	struct:Catch::SummaryColumn
addRow	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    SummaryColumn addRow( std::size_t count ) {$/;"	f	struct:Catch::SummaryColumn
label	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::string label;$/;"	m	struct:Catch::SummaryColumn	file:
colour	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    Colour::Code colour;$/;"	m	struct:Catch::SummaryColumn	file:
rows	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^    std::vector<std::string> rows;$/;"	m	struct:Catch::SummaryColumn	file:
printTotals	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printTotals( Totals const& totals ) {$/;"	f	class:Catch::ConsoleReporter
printSummaryRow	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printSummaryRow(std::string const& label, std::vector<SummaryColumn> const& cols, std::size_t row) {$/;"	f	class:Catch::ConsoleReporter
printTotalsDivider	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printTotalsDivider(Totals const& totals) {$/;"	f	class:Catch::ConsoleReporter
printSummaryDivider	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printSummaryDivider() {$/;"	f	class:Catch::ConsoleReporter
printTestFilters	..\Catch2\src\catch2\reporters\catch_reporter_console.cpp	/^void ConsoleReporter::printTestFilters() {$/;"	f	class:Catch::ConsoleReporter
CATCH_REPORTER_CONSOLE_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^namespace Catch {$/;"	n
ConsoleReporter	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^    struct ConsoleReporter : StreamingReporterBase {$/;"	s	namespace:Catch
m_tablePrinter	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        Detail::unique_ptr<TablePrinter> m_tablePrinter;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        ~ConsoleReporter() override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void noMatchingTestCases(std::string const& spec) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void reportInvalidArguments(std::string const&arg) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void assertionStarting(AssertionInfo const&) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        bool assertionEnded(AssertionStats const& _assertionStats) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void sectionStarting(SectionInfo const& _sectionInfo) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void sectionEnded(SectionStats const& _sectionStats) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void benchmarkPreparing(std::string const& name) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void benchmarkStarting(BenchmarkInfo const& info) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void benchmarkEnded(BenchmarkStats<> const& stats) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void benchmarkFailed(std::string const& error) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void testCaseEnded(TestCaseStats const& _testCaseStats) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void testGroupEnded(TestGroupStats const& _testGroupStats) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void testRunEnded(TestRunStats const& _testRunStats) override;$/;"	m	struct:Catch::ConsoleReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        void testRunStarting(TestRunInfo const& _testRunInfo) override;$/;"	m	struct:Catch::ConsoleReporter
m_headerPrinted	..\Catch2\src\catch2\reporters\catch_reporter_console.hpp	/^        bool m_headerPrinted = false;$/;"	m	struct:Catch::ConsoleReporter
Catch	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^namespace Catch {$/;"	n	file:
BySectionInfo	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^        struct BySectionInfo {$/;"	s	namespace:Catch::__anon60	file:
BySectionInfo	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^            BySectionInfo( SectionInfo const& other ): m_other( other ) {}$/;"	f	struct:Catch::__anon60::BySectionInfo
BySectionInfo	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^            BySectionInfo( BySectionInfo const& other ):$/;"	f	struct:Catch::__anon60::BySectionInfo
operator ()	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^            bool operator()($/;"	f	struct:Catch::__anon60::BySectionInfo
m_other	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^            SectionInfo const& m_other;$/;"	m	struct:Catch::__anon60::BySectionInfo	file:
sectionStarting	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    CumulativeReporterBase::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::CumulativeReporterBase
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    bool CumulativeReporterBase::assertionEnded($/;"	f	class:Catch::CumulativeReporterBase
sectionEnded	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::CumulativeReporterBase
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::testCaseEnded($/;"	f	class:Catch::CumulativeReporterBase
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::testGroupEnded($/;"	f	class:Catch::CumulativeReporterBase
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::CumulativeReporterBase
listReporters	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::CumulativeReporterBase
listTests	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::CumulativeReporterBase
listTags	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::CumulativeReporterBase
CATCH_REPORTER_CUMULATIVE_BASE_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^namespace Catch {$/;"	n
CumulativeReporterBase	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^    struct CumulativeReporterBase : IStreamingReporter {$/;"	s	namespace:Catch
Node	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        struct Node {$/;"	s	struct:Catch::CumulativeReporterBase
Node	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            explicit Node( T const& _value ) : value( _value ) {}$/;"	f	struct:Catch::CumulativeReporterBase::Node
children	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            ChildNodes children;$/;"	m	struct:Catch::CumulativeReporterBase::Node
SectionNode	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        struct SectionNode {$/;"	s	struct:Catch::CumulativeReporterBase
SectionNode	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            explicit SectionNode(SectionStats const& _stats) : stats(_stats) {}$/;"	f	struct:Catch::CumulativeReporterBase::SectionNode
operator ==	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            bool operator == (SectionNode const& other) const {$/;"	f	struct:Catch::CumulativeReporterBase::SectionNode
stats	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            SectionStats stats;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
childSections	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            std::vector<Detail::unique_ptr<SectionNode>> childSections;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
assertions	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            std::vector<AssertionStats> assertions;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
stdOut	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            std::string stdOut;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
stdErr	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^            std::string stdErr;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
CumulativeReporterBase	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        CumulativeReporterBase( ReporterConfig const& _config ):$/;"	f	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        ~CumulativeReporterBase() override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        bool assertionEnded( AssertionStats const& assertionStats ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void sectionEnded( SectionStats const& sectionStats ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void testGroupEnded( TestGroupStats const& testGroupStats ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void testRunEnded( TestRunStats const& testRunStats ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void listReporters( std::vector<ReporterDescription> const& descriptions ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void listTests( std::vector<TestCaseHandle> const& tests ) override;$/;"	m	struct:Catch::CumulativeReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        void listTags( std::vector<TagInfo> const& tags ) override;$/;"	m	struct:Catch::CumulativeReporterBase
stream	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        std::ostream& stream;$/;"	m	struct:Catch::CumulativeReporterBase
m_testCases	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        std::vector<Detail::unique_ptr<TestCaseNode>> m_testCases;$/;"	m	struct:Catch::CumulativeReporterBase
m_testGroups	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        std::vector<Detail::unique_ptr<TestGroupNode>> m_testGroups;$/;"	m	struct:Catch::CumulativeReporterBase
m_testRuns	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        std::vector<TestRunNode> m_testRuns;$/;"	m	struct:Catch::CumulativeReporterBase
m_rootSection	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        Detail::unique_ptr<SectionNode> m_rootSection;$/;"	m	struct:Catch::CumulativeReporterBase
m_deepestSection	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        SectionNode* m_deepestSection = nullptr;$/;"	m	struct:Catch::CumulativeReporterBase
m_sectionStack	..\Catch2\src\catch2\reporters\catch_reporter_cumulative_base.hpp	/^        std::vector<SectionNode*> m_sectionStack;$/;"	m	struct:Catch::CumulativeReporterBase
CATCH_REPORTER_EVENT_LISTENER_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^namespace Catch {$/;"	n
EventListenerBase	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^    class EventListenerBase : public IStreamingReporter {$/;"	c	namespace:Catch
EventListenerBase	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        EventListenerBase( ReporterConfig const& config ):$/;"	f	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void assertionStarting( AssertionInfo const& assertionInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        bool assertionEnded( AssertionStats const& assertionStats ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^            std::vector<ReporterDescription> const& descriptions ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void listTests( std::vector<TestCaseHandle> const& tests ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void listTags( std::vector<TagInfo> const& tagInfos ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void noMatchingTestCases( std::string const& spec ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void testRunStarting( TestRunInfo const& testRunInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void testGroupStarting( GroupInfo const& groupInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void testCaseStarting( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void sectionEnded( SectionStats const& sectionStats ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void testGroupEnded( TestGroupStats const& testGroupStats ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void testRunEnded( TestRunStats const& testRunStats ) override;$/;"	m	class:Catch::EventListenerBase
override	..\Catch2\src\catch2\reporters\catch_reporter_event_listener.hpp	/^        void skipTest( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::EventListenerBase
CATCH_REPORTER_HELPERS_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_helpers.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_helpers.hpp	/^namespace Catch {$/;"	n
lineOfChars	..\Catch2\src\catch2\reporters\catch_reporter_helpers.hpp	/^    struct lineOfChars {$/;"	s	namespace:Catch
c	..\Catch2\src\catch2\reporters\catch_reporter_helpers.hpp	/^        char c;$/;"	m	struct:Catch::lineOfChars
lineOfChars	..\Catch2\src\catch2\reporters\catch_reporter_helpers.hpp	/^        constexpr lineOfChars( char c_ ): c( c_ ) {}$/;"	f	struct:Catch::lineOfChars
Catch	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^namespace Catch {$/;"	n	file:
getCurrentTimestamp	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^        std::string getCurrentTimestamp() {$/;"	f	namespace:Catch::__anon61
fileNameTag	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^        std::string fileNameTag(std::vector<Tag> const& tags) {$/;"	f	namespace:Catch::__anon61
JunitReporter	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    JunitReporter::JunitReporter( ReporterConfig const& _config )$/;"	f	class:Catch::JunitReporter
~JunitReporter	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    JunitReporter::~JunitReporter() {}$/;"	f	class:Catch::JunitReporter
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    std::string JunitReporter::getDescription() {$/;"	f	class:Catch::JunitReporter
noMatchingTestCases	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::noMatchingTestCases( std::string const& \/*spec*\/ ) {}$/;"	f	class:Catch::JunitReporter
testRunStarting	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::testRunStarting( TestRunInfo const& runInfo )  {$/;"	f	class:Catch::JunitReporter
testGroupStarting	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::JunitReporter
testCaseStarting	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::testCaseStarting( TestCaseInfo const& testCaseInfo ) {$/;"	f	class:Catch::JunitReporter
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    bool JunitReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::JunitReporter
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::JunitReporter
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::JunitReporter
testRunEndedCumulative	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::testRunEndedCumulative() {$/;"	f	class:Catch::JunitReporter
writeGroup	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::writeGroup( TestGroupNode const& groupNode, double suiteTime ) {$/;"	f	class:Catch::JunitReporter
writeTestCase	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::writeTestCase( TestCaseNode const& testCaseNode ) {$/;"	f	class:Catch::JunitReporter
writeSection	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::writeSection(  std::string const& className,$/;"	f	class:Catch::JunitReporter
writeAssertions	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::writeAssertions( SectionNode const& sectionNode ) {$/;"	f	class:Catch::JunitReporter
writeAssertion	..\Catch2\src\catch2\reporters\catch_reporter_junit.cpp	/^    void JunitReporter::writeAssertion( AssertionStats const& stats ) {$/;"	f	class:Catch::JunitReporter
CATCH_REPORTER_JUNIT_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^namespace Catch {$/;"	n
JunitReporter	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^    class JunitReporter : public CumulativeReporterBase {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        ~JunitReporter() override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        void noMatchingTestCases(std::string const& \/*spec*\/) override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        void testRunStarting(TestRunInfo const& runInfo) override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        void testGroupStarting(GroupInfo const& groupInfo) override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        void testCaseStarting(TestCaseInfo const& testCaseInfo) override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        bool assertionEnded(AssertionStats const& assertionStats) override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        void testCaseEnded(TestCaseStats const& testCaseStats) override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        void testGroupEnded(TestGroupStats const& testGroupStats) override;$/;"	m	class:Catch::JunitReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        void testRunEndedCumulative() override;$/;"	m	class:Catch::JunitReporter
xml	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        XmlWriter xml;$/;"	m	class:Catch::JunitReporter
suiteTimer	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        Timer suiteTimer;$/;"	m	class:Catch::JunitReporter
stdOutForSuite	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        std::string stdOutForSuite;$/;"	m	class:Catch::JunitReporter
stdErrForSuite	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        std::string stdErrForSuite;$/;"	m	class:Catch::JunitReporter
unexpectedExceptions	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        unsigned int unexpectedExceptions = 0;$/;"	m	class:Catch::JunitReporter
m_okToFail	..\Catch2\src\catch2\reporters\catch_reporter_junit.hpp	/^        bool m_okToFail = false;$/;"	m	class:Catch::JunitReporter
Catch	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^namespace Catch {$/;"	n	file:
addListener	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::addListener( IStreamingReporterPtr&& listener ) {$/;"	f	class:Catch::ListeningReporter
addReporter	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::addReporter(IStreamingReporterPtr&& reporter) {$/;"	f	class:Catch::ListeningReporter
noMatchingTestCases	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::noMatchingTestCases( std::string const& spec ) {$/;"	f	class:Catch::ListeningReporter
reportInvalidArguments	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::reportInvalidArguments(std::string const&arg){$/;"	f	class:Catch::ListeningReporter
benchmarkPreparing	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::benchmarkPreparing( std::string const& name ) {$/;"	f	class:Catch::ListeningReporter
benchmarkStarting	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) {$/;"	f	class:Catch::ListeningReporter
benchmarkEnded	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) {$/;"	f	class:Catch::ListeningReporter
benchmarkFailed	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::benchmarkFailed( std::string const& error ) {$/;"	f	class:Catch::ListeningReporter
testRunStarting	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::testRunStarting( TestRunInfo const& testRunInfo ) {$/;"	f	class:Catch::ListeningReporter
testGroupStarting	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::ListeningReporter
testCaseStarting	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::ListeningReporter
sectionStarting	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::ListeningReporter
assertionStarting	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::assertionStarting( AssertionInfo const& assertionInfo ) {$/;"	f	class:Catch::ListeningReporter
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    bool ListeningReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::ListeningReporter
sectionEnded	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::ListeningReporter
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::ListeningReporter
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::ListeningReporter
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::ListeningReporter
skipTest	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::skipTest( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::ListeningReporter
listReporters	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::ListeningReporter
listTests	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::ListeningReporter
listTags	..\Catch2\src\catch2\reporters\catch_reporter_listening.cpp	/^    void ListeningReporter::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::ListeningReporter
CATCH_REPORTER_LISTENING_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^namespace Catch {$/;"	n
final	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^    class ListeningReporter final : public IStreamingReporter {$/;"	c	namespace:Catch
m_reporter	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        IStreamingReporterPtr m_reporter = nullptr;$/;"	m	class:Catch::final
ListeningReporter	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        ListeningReporter( IConfig const* config ):$/;"	f	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void noMatchingTestCases( std::string const& spec ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void reportInvalidArguments(std::string const&arg) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void benchmarkPreparing(std::string const& name) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void benchmarkFailed(std::string const&) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void testRunStarting( TestRunInfo const& testRunInfo ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void testGroupStarting( GroupInfo const& groupInfo ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void testCaseStarting( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void assertionStarting( AssertionInfo const& assertionInfo ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        bool assertionEnded( AssertionStats const& assertionStats ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void sectionEnded( SectionStats const& sectionStats ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void testGroupEnded( TestGroupStats const& testGroupStats ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void testRunEnded( TestRunStats const& testRunStats ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void skipTest( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void listReporters(std::vector<ReporterDescription> const& descriptions) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void listTests(std::vector<TestCaseHandle> const& tests) override;$/;"	m	class:Catch::final
override	..\Catch2\src\catch2\reporters\catch_reporter_listening.hpp	/^        void listTags(std::vector<TagInfo> const& tags) override;$/;"	m	class:Catch::final
Catch	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^namespace Catch {$/;"	n	file:
~SonarQubeReporter	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    SonarQubeReporter::~SonarQubeReporter() {}$/;"	f	class:Catch::SonarQubeReporter
testRunStarting	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::testRunStarting(TestRunInfo const& testRunInfo) {$/;"	f	class:Catch::SonarQubeReporter
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::testGroupEnded(TestGroupStats const& testGroupStats) {$/;"	f	class:Catch::SonarQubeReporter
writeGroup	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeGroup(TestGroupNode const& groupNode) {$/;"	f	class:Catch::SonarQubeReporter
writeTestFile	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeTestFile(std::string const& filename, std::vector<TestCaseNode const*> const& testCaseNodes) {$/;"	f	class:Catch::SonarQubeReporter
writeTestCase	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeTestCase(TestCaseNode const& testCaseNode) {$/;"	f	class:Catch::SonarQubeReporter
writeSection	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeSection(std::string const& rootName, SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAssertions	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeAssertions(SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAssertion	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeAssertion(AssertionStats const& stats, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
CATCH_REPORTER_SONARQUBE_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^namespace Catch {$/;"	n
SonarQubeReporter	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^    struct SonarQubeReporter : CumulativeReporterBase {$/;"	s	namespace:Catch
SonarQubeReporter	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^        SonarQubeReporter(ReporterConfig const& config)$/;"	f	struct:Catch::SonarQubeReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^        ~SonarQubeReporter() override;$/;"	m	struct:Catch::SonarQubeReporter
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::SonarQubeReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^        void testRunStarting(TestRunInfo const& testRunInfo) override;$/;"	m	struct:Catch::SonarQubeReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^        void testGroupEnded(TestGroupStats const& testGroupStats) override;$/;"	m	struct:Catch::SonarQubeReporter
xml	..\Catch2\src\catch2\reporters\catch_reporter_sonarqube.hpp	/^        XmlWriter xml;$/;"	m	struct:Catch::SonarQubeReporter
Catch	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^namespace Catch {$/;"	n	file:
testRunStarting	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^    StreamingReporterBase::testRunStarting( TestRunInfo const& _testRunInfo ) {$/;"	f	class:Catch::StreamingReporterBase
testGroupStarting	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^    StreamingReporterBase::testGroupStarting( GroupInfo const& _groupInfo ) {$/;"	f	class:Catch::StreamingReporterBase
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^    void StreamingReporterBase::testGroupEnded( TestGroupStats const& ) {$/;"	f	class:Catch::StreamingReporterBase
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^    void StreamingReporterBase::testRunEnded( TestRunStats const& ) {$/;"	f	class:Catch::StreamingReporterBase
listReporters	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^    void StreamingReporterBase::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::StreamingReporterBase
listTests	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^    void StreamingReporterBase::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::StreamingReporterBase
listTags	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.cpp	/^    void StreamingReporterBase::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::StreamingReporterBase
CATCH_REPORTER_STREAMING_BASE_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^namespace Catch {$/;"	n
LazyStat	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^    struct LazyStat : Option<T> {$/;"	s	namespace:Catch
operator =	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        LazyStat& operator=(T const& _value) {$/;"	f	struct:Catch::LazyStat
reset	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void reset() {$/;"	f	struct:Catch::LazyStat
used	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        bool used = false;$/;"	m	struct:Catch::LazyStat
StreamingReporterBase	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^    struct StreamingReporterBase : IStreamingReporter {$/;"	s	namespace:Catch
StreamingReporterBase	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        StreamingReporterBase( ReporterConfig const& _config ):$/;"	f	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        ~StreamingReporterBase() override;$/;"	m	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void testRunStarting( TestRunInfo const& _testRunInfo ) override;$/;"	m	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void testGroupStarting( GroupInfo const& _groupInfo ) override;$/;"	m	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void testGroupEnded( TestGroupStats const& ) override;$/;"	m	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void testRunEnded( TestRunStats const& \/* _testRunStats *\/ ) override;$/;"	m	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void listReporters( std::vector<ReporterDescription> const& descriptions ) override;$/;"	m	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void listTests( std::vector<TestCaseHandle> const& tests ) override;$/;"	m	struct:Catch::StreamingReporterBase
override	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        void listTags( std::vector<TagInfo> const& tags ) override;$/;"	m	struct:Catch::StreamingReporterBase
stream	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        std::ostream& stream;$/;"	m	struct:Catch::StreamingReporterBase
currentTestRunInfo	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        LazyStat<TestRunInfo> currentTestRunInfo;$/;"	m	struct:Catch::StreamingReporterBase
currentGroupInfo	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        LazyStat<GroupInfo> currentGroupInfo;$/;"	m	struct:Catch::StreamingReporterBase
currentTestCaseInfo	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        TestCaseInfo const* currentTestCaseInfo = nullptr;$/;"	m	struct:Catch::StreamingReporterBase
m_sectionStack	..\Catch2\src\catch2\reporters\catch_reporter_streaming_base.hpp	/^        std::vector<SectionInfo> m_sectionStack;$/;"	m	struct:Catch::StreamingReporterBase
Catch	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^namespace Catch {$/;"	n	file:
tapFailedString	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^        static constexpr StringRef tapFailedString = "not ok"_sr;$/;"	v	file:
tapPassedString	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^        static constexpr StringRef tapPassedString = "ok"_sr;$/;"	v	file:
TapAssertionPrinter	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^        class TapAssertionPrinter {$/;"	c	namespace:Catch::__anon62	file:
TapAssertionPrinter	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            TapAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, std::size_t _counter)$/;"	f	class:Catch::__anon62::TapAssertionPrinter
print	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void print() {$/;"	f	class:Catch::__anon62::TapAssertionPrinter
dimColour	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            static Colour::Code dimColour() { return Colour::FileName; }$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printSourceInfo	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printSourceInfo() const {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printResultType	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printResultType(StringRef passOrFail) const {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printIssue	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printIssue(StringRef issue) const {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printExpressionWas	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printExpressionWas() {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printOriginalExpression	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printOriginalExpression() const {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printReconstructedExpression	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printReconstructedExpression() const {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printMessage	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printMessage() {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
printRemainingMessages	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            void printRemainingMessages(Colour::Code colour = dimColour()) {$/;"	f	class:Catch::__anon62::TapAssertionPrinter	file:
stream	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            std::ostream& stream;$/;"	m	class:Catch::__anon62::TapAssertionPrinter	file:
result	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            AssertionResult const& result;$/;"	m	class:Catch::__anon62::TapAssertionPrinter	file:
messages	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            std::vector<MessageInfo> messages;$/;"	m	class:Catch::__anon62::TapAssertionPrinter	file:
itMessage	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon62::TapAssertionPrinter	file:
printInfoMessages	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            bool printInfoMessages;$/;"	m	class:Catch::__anon62::TapAssertionPrinter	file:
counter	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^            std::size_t counter;$/;"	m	class:Catch::__anon62::TapAssertionPrinter	file:
~TAPReporter	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^    TAPReporter::~TAPReporter() {}$/;"	f	class:Catch::TAPReporter
noMatchingTestCases	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^    void TAPReporter::noMatchingTestCases(std::string const& spec) {$/;"	f	class:Catch::TAPReporter
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^    bool TAPReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::TAPReporter
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_tap.cpp	/^    void TAPReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::TAPReporter
CATCH_REPORTER_TAP_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^namespace Catch {$/;"	n
TAPReporter	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^    struct TAPReporter : StreamingReporterBase {$/;"	s	namespace:Catch
TAPReporter	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^        TAPReporter( ReporterConfig const& config ):$/;"	f	struct:Catch::TAPReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^        ~TAPReporter() override;$/;"	m	struct:Catch::TAPReporter
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TAPReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^        void noMatchingTestCases(std::string const& spec) override;$/;"	m	struct:Catch::TAPReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^        bool assertionEnded(AssertionStats const& _assertionStats) override;$/;"	m	struct:Catch::TAPReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^        void testRunEnded(TestRunStats const& _testRunStats) override;$/;"	m	struct:Catch::TAPReporter
counter	..\Catch2\src\catch2\reporters\catch_reporter_tap.hpp	/^        std::size_t counter = 0;$/;"	m	struct:Catch::TAPReporter
Catch	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^namespace Catch {$/;"	n	file:
printHeaderString	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^        void printHeaderString(std::ostream& os, std::string const& _string, std::size_t indent = 0) {$/;"	f	namespace:Catch::__anon63
escape	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^        std::string escape(std::string const& str) {$/;"	f	namespace:Catch::__anon63
~TeamCityReporter	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^    TeamCityReporter::~TeamCityReporter() {}$/;"	f	class:Catch::TeamCityReporter
testGroupStarting	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testGroupStarting(GroupInfo const& groupInfo) {$/;"	f	class:Catch::TeamCityReporter
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testGroupEnded(TestGroupStats const& testGroupStats) {$/;"	f	class:Catch::TeamCityReporter
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^    bool TeamCityReporter::assertionEnded(AssertionStats const& assertionStats) {$/;"	f	class:Catch::TeamCityReporter
testCaseStarting	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testCaseStarting(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::TeamCityReporter
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testCaseEnded(TestCaseStats const& testCaseStats) {$/;"	f	class:Catch::TeamCityReporter
printSectionHeader	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.cpp	/^    void TeamCityReporter::printSectionHeader(std::ostream& os) {$/;"	f	class:Catch::TeamCityReporter
CATCH_REPORTER_TEAMCITY_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^namespace Catch {$/;"	n
TeamCityReporter	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^    struct TeamCityReporter : StreamingReporterBase {$/;"	s	namespace:Catch
TeamCityReporter	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        TeamCityReporter( ReporterConfig const& _config )$/;"	f	struct:Catch::TeamCityReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        ~TeamCityReporter() override;$/;"	m	struct:Catch::TeamCityReporter
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        static std::string getDescription() {$/;"	f	struct:Catch::TeamCityReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        void testGroupStarting(GroupInfo const& groupInfo) override;$/;"	m	struct:Catch::TeamCityReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        void testGroupEnded(TestGroupStats const& testGroupStats) override;$/;"	m	struct:Catch::TeamCityReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        bool assertionEnded(AssertionStats const& assertionStats) override;$/;"	m	struct:Catch::TeamCityReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        void testCaseStarting(TestCaseInfo const& testInfo) override;$/;"	m	struct:Catch::TeamCityReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        void testCaseEnded(TestCaseStats const& testCaseStats) override;$/;"	m	struct:Catch::TeamCityReporter
m_headerPrintedForThisSection	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        bool m_headerPrintedForThisSection = false;$/;"	m	struct:Catch::TeamCityReporter
m_testTimer	..\Catch2\src\catch2\reporters\catch_reporter_teamcity.hpp	/^        Timer m_testTimer;$/;"	m	struct:Catch::TeamCityReporter
Catch	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^namespace Catch {$/;"	n	file:
XmlReporter	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    XmlReporter::XmlReporter( ReporterConfig const& _config )$/;"	f	class:Catch::XmlReporter
getDescription	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    std::string XmlReporter::getDescription() {$/;"	f	class:Catch::XmlReporter
getStylesheetRef	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    std::string XmlReporter::getStylesheetRef() const {$/;"	f	class:Catch::XmlReporter
writeSourceInfo	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::writeSourceInfo( SourceLineInfo const& sourceInfo ) {$/;"	f	class:Catch::XmlReporter
noMatchingTestCases	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::noMatchingTestCases( std::string const& s ) {$/;"	f	class:Catch::XmlReporter
testRunStarting	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::testRunStarting( TestRunInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
testGroupStarting	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::testGroupStarting( GroupInfo const& groupInfo ) {$/;"	f	class:Catch::XmlReporter
testCaseStarting	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
sectionStarting	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::XmlReporter
assertionStarting	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::assertionStarting( AssertionInfo const& ) { }$/;"	f	class:Catch::XmlReporter
assertionEnded	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    bool XmlReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::XmlReporter
sectionEnded	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::XmlReporter
testCaseEnded	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::XmlReporter
testGroupEnded	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::testGroupEnded( TestGroupStats const& testGroupStats ) {$/;"	f	class:Catch::XmlReporter
testRunEnded	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::XmlReporter
benchmarkPreparing	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkPreparing(std::string const& name) {$/;"	f	class:Catch::XmlReporter
benchmarkStarting	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkStarting(BenchmarkInfo const &info) {$/;"	f	class:Catch::XmlReporter
benchmarkEnded	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkEnded(BenchmarkStats<> const& benchmarkStats) {$/;"	f	class:Catch::XmlReporter
benchmarkFailed	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkFailed(std::string const &error) {$/;"	f	class:Catch::XmlReporter
listReporters	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::XmlReporter
listTests	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::XmlReporter
listTags	..\Catch2\src\catch2\reporters\catch_reporter_xml.cpp	/^    void XmlReporter::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::XmlReporter
CATCH_REPORTER_XML_HPP_INCLUDED	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	9;"	d
Catch	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^namespace Catch {$/;"	n
XmlReporter	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^    class XmlReporter : public StreamingReporterBase {$/;"	c	namespace:Catch
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        ~XmlReporter() override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void noMatchingTestCases(std::string const& s) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void testRunStarting(TestRunInfo const& testInfo) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void testGroupStarting(GroupInfo const& groupInfo) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void testCaseStarting(TestCaseInfo const& testInfo) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void sectionStarting(SectionInfo const& sectionInfo) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void assertionStarting(AssertionInfo const&) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        bool assertionEnded(AssertionStats const& assertionStats) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void sectionEnded(SectionStats const& sectionStats) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void testCaseEnded(TestCaseStats const& testCaseStats) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void testGroupEnded(TestGroupStats const& testGroupStats) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void testRunEnded(TestRunStats const& testRunStats) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void benchmarkPreparing(std::string const& name) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void benchmarkStarting(BenchmarkInfo const&) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void benchmarkEnded(BenchmarkStats<> const&) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void benchmarkFailed(std::string const&) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void listReporters(std::vector<ReporterDescription> const& descriptions) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void listTests(std::vector<TestCaseHandle> const& tests) override;$/;"	m	class:Catch::XmlReporter
override	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        void listTags(std::vector<TagInfo> const& tags) override;$/;"	m	class:Catch::XmlReporter
m_testCaseTimer	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        Timer m_testCaseTimer;$/;"	m	class:Catch::XmlReporter
m_xml	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        XmlWriter m_xml;$/;"	m	class:Catch::XmlReporter
m_sectionDepth	..\Catch2\src\catch2\reporters\catch_reporter_xml.hpp	/^        int m_sectionDepth = 0;$/;"	m	class:Catch::XmlReporter
this_throws	..\Catch2\tests\ExtraTests\X01-PrefixedMacros.cpp	/^    void this_throws() {$/;"	f	namespace:__anon64
this_doesnt_throw	..\Catch2\tests\ExtraTests\X01-PrefixedMacros.cpp	/^    void this_doesnt_throw() {}$/;"	f	namespace:__anon64
foo	..\Catch2\tests\ExtraTests\X02-DisabledMacros.cpp	/^struct foo {$/;"	s	file:
foo	..\Catch2\tests\ExtraTests\X02-DisabledMacros.cpp	/^    foo(){$/;"	f	struct:foo
print	..\Catch2\tests\ExtraTests\X02-DisabledMacros.cpp	/^    void print() const {$/;"	f	struct:foo
f	..\Catch2\tests\ExtraTests\X02-DisabledMacros.cpp	/^foo f;$/;"	v
Catch	..\Catch2\tests\ExtraTests\X04-DisabledExceptions-CustomHandler.cpp	/^namespace Catch {$/;"	n	file:
throw_exception	..\Catch2\tests\ExtraTests\X04-DisabledExceptions-CustomHandler.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch
fallbackStringifier	..\Catch2\tests\ExtraTests\X10-FallbackStringifier.cpp	/^std::string fallbackStringifier(T const&) {$/;"	f
foo	..\Catch2\tests\ExtraTests\X10-FallbackStringifier.cpp	/^struct foo {$/;"	s	file:
operator bool	..\Catch2\tests\ExtraTests\X10-FallbackStringifier.cpp	/^    explicit operator bool() const {$/;"	f	struct:foo
Hidden	..\Catch2\tests\ExtraTests\X11-DisableStringification.cpp	/^    struct Hidden {};$/;"	s	namespace:__anon65	file:
operator ==	..\Catch2\tests\ExtraTests\X11-DisableStringification.cpp	/^    bool operator==(Hidden, Hidden) { return true; }$/;"	f	namespace:__anon65
custom_debug_break	..\Catch2\tests\ExtraTests\X12-CustomDebugBreakMacro.cpp	/^void custom_debug_break() {$/;"	f
CATCH_BREAK_INTO_DEBUGGER	..\Catch2\tests\ExtraTests\X12-CustomDebugBreakMacro.cpp	10;"	d	file:
CATCH_CONFIG_MAIN	..\Catch2\tests\ExtraTests\X12-CustomDebugBreakMacro.cpp	12;"	d	file:
fakeTestCase	..\Catch2\tests\SelfTest\IntrospectiveTests\CmdLine.tests.cpp	/^    auto fakeTestCase(const char* name, const char* desc = "") { return Catch::makeTestCaseInfo("", { name, desc }, CATCH_INTERNAL_LINEINFO); }$/;"	f	namespace:__anon66
non_copyable	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^struct non_copyable {$/;"	s	namespace:__anon67	file:
value	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^    int value = -1;$/;"	m	struct:__anon67::non_copyable	file:
TestGen	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^class TestGen : public Catch::Generators::IGenerator<int> {$/;"	c	namespace:__anon67	file:
current_number	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^    int current_number;$/;"	m	class:__anon67::TestGen	file:
TestGen	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^    TestGen(non_copyable const& nc):$/;"	f	class:__anon67::TestGen
override	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^    int const& get() const override;$/;"	m	class:__anon67::TestGen	file:
get	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^int const& TestGen::get() const {$/;"	f	class:__anon67::TestGen
always_true	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^    static bool always_true(int) {$/;"	f	namespace:__anon68	file:
is_even	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^    static bool is_even(int n) {$/;"	f	namespace:__anon68	file:
is_multiple_of_3	..\Catch2\tests\SelfTest\IntrospectiveTests\GeneratorsImpl.tests.cpp	/^    static bool is_multiple_of_3(int n) {$/;"	f	namespace:__anon68	file:
manual_clock	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^    struct manual_clock {$/;"	s	namespace:__anon69	file:
is_steady	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	e	enum:__anon69::manual_clock::__anon70	file:
now	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        static time_point now() {$/;"	f	struct:__anon69::manual_clock
advance	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        static void advance(int ticks = 1) {$/;"	f	struct:__anon69::manual_clock
tick	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        static rep& tick() {$/;"	f	struct:__anon69::manual_clock	file:
counting_clock	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^    struct counting_clock {$/;"	s	namespace:__anon69	file:
is_steady	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	e	enum:__anon69::counting_clock::__anon71	file:
now	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        static time_point now() {$/;"	f	struct:__anon69::counting_clock
set_rate	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        static void set_rate(rep new_rate) { rate() = new_rate; }$/;"	f	struct:__anon69::counting_clock
rate	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        static rep& rate() {$/;"	f	struct:__anon69::counting_clock	file:
TestChronometerModel	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^    struct TestChronometerModel : Catch::Benchmark::Detail::ChronometerConcept {$/;"	s	namespace:__anon69	file:
started	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        int started = 0;$/;"	m	struct:__anon69::TestChronometerModel	file:
finished	..\Catch2\tests\SelfTest\IntrospectiveTests\InternalBenchmark.tests.cpp	/^        int finished = 0;$/;"	m	struct:__anon69::TestChronometerModel	file:
makeNAL	..\Catch2\tests\SelfTest\IntrospectiveTests\PartTracker.tests.cpp	/^Catch::TestCaseTracking::NameAndLocation makeNAL( std::string const& name ) {$/;"	f	namespace:__anon72
previouslyRun	..\Catch2\tests\SelfTest\IntrospectiveTests\PartTracker.tests.cpp	/^static bool previouslyRun = false;$/;"	v	file:
previouslyRunNested	..\Catch2\tests\SelfTest\IntrospectiveTests\PartTracker.tests.cpp	/^static bool previouslyRunNested = false;$/;"	v	file:
no_whitespace	..\Catch2\tests\SelfTest\IntrospectiveTests\StringManip.tests.cpp	/^static const char * const no_whitespace = "There is no extra whitespace here";$/;"	v	file:
leading_whitespace	..\Catch2\tests\SelfTest\IntrospectiveTests\StringManip.tests.cpp	/^static const char * const leading_whitespace = " \\r \\t\\n There is no extra whitespace here";$/;"	v	file:
trailing_whitespace	..\Catch2\tests\SelfTest\IntrospectiveTests\StringManip.tests.cpp	/^static const char * const trailing_whitespace = "There is no extra whitespace here \\t \\n \\r ";$/;"	v	file:
whitespace_at_both_ends	..\Catch2\tests\SelfTest\IntrospectiveTests\StringManip.tests.cpp	/^static const char * const whitespace_at_both_ends = " \\r\\n \\t There is no extra whitespace here  \\t\\t\\t \\n";$/;"	v	file:
EnumClass3	..\Catch2\tests\SelfTest\IntrospectiveTests\ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	c	file:
Value1	..\Catch2\tests\SelfTest\IntrospectiveTests\ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
Value2	..\Catch2\tests\SelfTest\IntrospectiveTests\ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
Value3	..\Catch2\tests\SelfTest\IntrospectiveTests\ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
UsesSentinel	..\Catch2\tests\SelfTest\IntrospectiveTests\ToString.tests.cpp	/^struct UsesSentinel {$/;"	s	file:
begin	..\Catch2\tests\SelfTest\IntrospectiveTests\ToString.tests.cpp	/^    const_iterator begin() const { return nullptr; }$/;"	f	struct:UsesSentinel
end	..\Catch2\tests\SelfTest\IntrospectiveTests\ToString.tests.cpp	/^    const_iterator end() const { return nullptr; }$/;"	f	struct:UsesSentinel
unique_ptr_test_helper	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^    struct unique_ptr_test_helper {$/;"	s	namespace:__anon73	file:
dummy	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^        bool dummy = false;$/;"	m	struct:__anon73::unique_ptr_test_helper	file:
base	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^    struct base {$/;"	s	namespace:__anon74	file:
i	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^        int i;$/;"	m	struct:__anon74::base	file:
base	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^        base(int i_) :i(i_) {}$/;"	f	struct:__anon74::base
derived	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^    struct derived : base { using base::base; };$/;"	s	namespace:__anon74	file:
unrelated	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^    struct unrelated {};$/;"	s	namespace:__anon74	file:
move_detector	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^    struct move_detector {$/;"	s	namespace:__anon75	file:
has_moved	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^        bool has_moved = false;$/;"	m	struct:__anon75::move_detector	file:
rhs	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^        move_detector(move_detector const& rhs) = default;$/;"	m	struct:__anon75::move_detector	file:
rhs	..\Catch2\tests\SelfTest\IntrospectiveTests\UniquePtr.tests.cpp	/^        move_detector& operator=(move_detector const& rhs) = default;$/;"	m	struct:__anon75::move_detector	file:
encode	..\Catch2\tests\SelfTest\IntrospectiveTests\Xml.tests.cpp	/^static std::string encode( std::string const& str, Catch::XmlEncode::ForWhat forWhat = Catch::XmlEncode::ForTextNodes ) {$/;"	f	file:
ESC	..\Catch2\tests\SelfTest\IntrospectiveTests\Xml.tests.cpp	44;"	d	file:
ESC	..\Catch2\tests\SelfTest\IntrospectiveTests\Xml.tests.cpp	113;"	d	file:
TestListener	..\Catch2\tests\SelfTest\TestRegistrations.cpp	/^struct TestListener : Catch::EventListenerBase {$/;"	s	file:
ApproxTests	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	/^namespace { namespace ApproxTests {$/;"	n	namespace:__anon76	file:
APPROX_TEST_HELPERS_INCLUDED	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	19;"	d	file:
divide	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	/^    inline double divide( double a, double b ) {$/;"	f	namespace:__anon76::ApproxTests
StrongDoubleTypedef	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	/^    class StrongDoubleTypedef {$/;"	c	namespace:__anon76::ApproxTests	file:
d_	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	/^        double d_ = 0.0;$/;"	m	class:__anon76::ApproxTests::StrongDoubleTypedef	file:
StrongDoubleTypedef	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	/^        explicit StrongDoubleTypedef(double d) : d_(d) {}$/;"	f	class:__anon76::ApproxTests::StrongDoubleTypedef
operator double	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	/^        explicit operator double() const { return d_; }$/;"	f	class:__anon76::ApproxTests::StrongDoubleTypedef
operator <<	..\Catch2\tests\SelfTest\UsageTests\Approx.tests.cpp	/^    inline std::ostream& operator<<( std::ostream& os, StrongDoubleTypedef td ) {$/;"	f	namespace:__anon76::ApproxTests
BDDTests	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^namespace { namespace BDDTests {$/;"	n	namespace:__anon77	file:
BDD_TEST_HELPERS_INCLUDED	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	11;"	d	file:
itDoesThis	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^    inline bool itDoesThis() { return true; }$/;"	f	namespace:__anon77::BDDTests
itDoesThat	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^    inline bool itDoesThat() { return true; }$/;"	f	namespace:__anon77::BDDTests
Fixture	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^        struct Fixture {$/;"	s	namespace:__anon77::BDDTests::__anon78	file:
Fixture	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^            Fixture()$/;"	f	struct:__anon77::BDDTests::__anon78::Fixture
counter	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^            int counter() {$/;"	f	struct:__anon77::BDDTests::__anon78::Fixture
d_counter	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^            int d_counter;$/;"	m	struct:__anon77::BDDTests::__anon78::Fixture	file:
SCENARIO_METHOD	..\Catch2\tests\SelfTest\UsageTests\BDD.tests.cpp	/^    SCENARIO_METHOD(Fixture,$/;"	f	namespace:__anon77::BDDTests
Fibonacci	..\Catch2\tests\SelfTest\UsageTests\Benchmark.tests.cpp	/^    std::uint64_t Fibonacci(std::uint64_t number) {$/;"	f	namespace:__anon79
ClassTests	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^namespace{ namespace ClassTests {$/;"	n	namespace:__anon80	file:
CLASS_TEST_HELPERS_INCLUDED	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	13;"	d	file:
TestClass	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^class TestClass$/;"	c	namespace:__anon80::ClassTests	file:
s	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    std::string s;$/;"	m	class:__anon80::ClassTests::TestClass	file:
TestClass	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    TestClass()$/;"	f	class:__anon80::ClassTests::TestClass
succeedingCase	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    void succeedingCase()$/;"	f	class:__anon80::ClassTests::TestClass
failingCase	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    void failingCase()$/;"	f	class:__anon80::ClassTests::TestClass
Fixture	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^struct Fixture$/;"	s	namespace:__anon80::ClassTests	file:
Fixture	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    Fixture() : m_a( 1 ) {}$/;"	f	struct:__anon80::ClassTests::Fixture
m_a	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    int m_a;$/;"	m	struct:__anon80::ClassTests::Fixture	file:
Template_Fixture	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^struct Template_Fixture {$/;"	s	namespace:__anon80::ClassTests	file:
Template_Fixture	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    Template_Fixture(): m_a(1) {}$/;"	f	struct:__anon80::ClassTests::Template_Fixture
m_a	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    T m_a;$/;"	m	struct:__anon80::ClassTests::Template_Fixture	file:
Template_Fixture_2	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^struct Template_Fixture_2 {$/;"	s	namespace:__anon80::ClassTests	file:
Template_Fixture_2	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    Template_Fixture_2() {}$/;"	f	struct:__anon80::ClassTests::Template_Fixture_2
m_a	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    T m_a;$/;"	m	struct:__anon80::ClassTests::Template_Fixture_2	file:
Template_Foo	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^struct Template_Foo {$/;"	s	namespace:__anon80::ClassTests	file:
size	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    size_t size() { return 0; }$/;"	f	struct:__anon80::ClassTests::Template_Foo
Template_Foo_2	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^struct Template_Foo_2 {$/;"	s	namespace:__anon80::ClassTests	file:
size	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    size_t size() { return V; }$/;"	f	struct:__anon80::ClassTests::Template_Foo_2
Nttp_Fixture	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^struct Nttp_Fixture{$/;"	s	namespace:__anon80::ClassTests	file:
value	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    int value = V;$/;"	m	struct:__anon80::ClassTests::Nttp_Fixture	file:
TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^TEST_CASE_METHOD( Fixture, "A TEST_CASE_METHOD based test run that succeeds", "[class]" )$/;"	f	namespace:__anon80::ClassTests
TEMPLATE_TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^TEMPLATE_TEST_CASE_METHOD(Template_Fixture, "A TEMPLATE_TEST_CASE_METHOD based test run that succeeds", "[class][template]", int, float, double) {$/;"	f	namespace:__anon80::ClassTests
TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^TEMPLATE_TEST_CASE_METHOD_SIG(Nttp_Fixture, "A TEMPLATE_TEST_CASE_METHOD_SIG based test run that succeeds", "[class][template][nttp]",((int V), V), 1, 3, 6) {$/;"	f	namespace:__anon80::ClassTests
TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^TEMPLATE_PRODUCT_TEST_CASE_METHOD(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that succeeds","[class][template][product]",(std::vector,Template_Foo),(int,float))$/;"	f	namespace:__anon80::ClassTests
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG based test run that succeeds", "[class][template][product][nttp]", ((typename T, size_t S), T, S),(std::array, Template_Foo_2), ((int,2), (float,6)))$/;"	f	namespace:__anon80::ClassTests
TEMPLATE_LIST_TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^TEMPLATE_LIST_TEST_CASE_METHOD(Template_Fixture, "Template test case method with test types specified inside std::tuple", "[class][template][list]", MyTypes)$/;"	f	namespace:__anon80::ClassTests
Inner	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^namespace Inner$/;"	n	namespace:__anon80::ClassTests	file:
TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    TEST_CASE_METHOD( Fixture, "A TEST_CASE_METHOD based test run that fails", "[.][class][failing]" )$/;"	f	namespace:__anon80::ClassTests::Inner
TEMPLATE_TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    TEMPLATE_TEST_CASE_METHOD(Template_Fixture,"A TEMPLATE_TEST_CASE_METHOD based test run that fails", "[.][class][template][failing]", int, float, double)$/;"	f	namespace:__anon80::ClassTests::Inner
TEMPLATE_TEST_CASE_METHOD_SIG	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    TEMPLATE_TEST_CASE_METHOD_SIG(Nttp_Fixture, "A TEMPLATE_TEST_CASE_METHOD_SIG based test run that fails", "[.][class][template][nttp][failing]", ((int V), V), 1, 3, 6) {$/;"	f	namespace:__anon80::ClassTests::Inner
TEMPLATE_PRODUCT_TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    TEMPLATE_PRODUCT_TEST_CASE_METHOD(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that fails","[.][class][template][product][failing]",(std::vector,Template_Foo),(int,float))$/;"	f	namespace:__anon80::ClassTests::Inner
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	..\Catch2\tests\SelfTest\UsageTests\Class.tests.cpp	/^    TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG based test run that fails", "[.][class][template][product][nttp][failing]", ((typename T, size_t S), T, S), (std::array, Template_Foo_2), ((int, 2), (float, 6)))$/;"	f	namespace:__anon80::ClassTests::Inner
foo	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^namespace foo {$/;"	n	file:
helper_1403	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct helper_1403 {$/;"	s	namespace:foo	file:
operator ==	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        bool operator==(helper_1403) const { return true; }$/;"	f	struct:foo::helper_1403
bar	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^namespace bar {$/;"	n	file:
TypeList	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct TypeList {};$/;"	s	namespace:bar	file:
operator <<	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^std::ostream& operator<<(std::ostream& out, foo::helper_1403 const&) {$/;"	f
CompilationTests	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^namespace { namespace CompilationTests {$/;"	n	namespace:__anon81	file:
COMPILATION_TEST_HELPERS_INCLUDED	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	39;"	d	file:
logic_t	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct logic_t {$/;"	s	namespace:__anon81::CompilationTests	file:
operator <	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        logic_t operator< (logic_t) const { return {}; }$/;"	f	struct:__anon81::CompilationTests::logic_t
operator <=	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        logic_t operator<=(logic_t) const { return {}; }$/;"	f	struct:__anon81::CompilationTests::logic_t
operator >	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        logic_t operator> (logic_t) const { return {}; }$/;"	f	struct:__anon81::CompilationTests::logic_t
operator >=	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        logic_t operator>=(logic_t) const { return {}; }$/;"	f	struct:__anon81::CompilationTests::logic_t
operator ==	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        logic_t operator==(logic_t) const { return {}; }$/;"	f	struct:__anon81::CompilationTests::logic_t
operator !=	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        logic_t operator!=(logic_t) const { return {}; }$/;"	f	struct:__anon81::CompilationTests::logic_t
operator bool	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        explicit operator bool() const { return true; }$/;"	f	struct:__anon81::CompilationTests::logic_t
foo	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct foo {$/;"	s	namespace:__anon81::CompilationTests	file:
i	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        int i;$/;"	m	struct:__anon81::CompilationTests::foo	file:
operator ==	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    bool operator==(const T &val, foo f) {$/;"	f	namespace:__anon81::CompilationTests
throws_int	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    void throws_int(bool b) {$/;"	f	namespace:__anon81::CompilationTests
templated_tests	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    bool templated_tests(T t) {$/;"	f	namespace:__anon81::CompilationTests
A	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct A {$/;"	s	namespace:__anon81::CompilationTests	file:
operator <<	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    std::ostream &operator<<(std::ostream &o, const A &) { return o << 0; }$/;"	f	namespace:__anon81::CompilationTests
B	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct B : private A {$/;"	s	namespace:__anon81::CompilationTests	file:
operator ==	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        bool operator==(int) const { return true; }$/;"	f	struct:__anon81::CompilationTests::B
Fixture_1245	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct Fixture_1245 {};$/;"	s	namespace:__anon81::CompilationTests	file:
TEST_CASE_METHOD	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    TEST_CASE_METHOD((Fixture_1245<int, int>), "#1245", "[compilation]") {$/;"	f	namespace:__anon81::CompilationTests
TestClass	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct TestClass {$/;"	s	namespace:__anon81::CompilationTests	file:
testMethod_uponComplete_arg	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        signal_t testMethod_uponComplete_arg = nullptr;$/;"	m	struct:__anon81::CompilationTests::TestClass	file:
utility	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    namespace utility {$/;"	n	namespace:__anon81::CompilationTests	file:
synchronizing_callback	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        inline static void synchronizing_callback( void * ) { }$/;"	f	namespace:__anon81::CompilationTests::utility	file:
HasBitOperators	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^    struct HasBitOperators {$/;"	s	namespace:__anon82	file:
value	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        int value;$/;"	m	struct:__anon82::HasBitOperators	file:
operator |	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        friend HasBitOperators operator| (HasBitOperators lhs, HasBitOperators rhs) {$/;"	f	struct:__anon82::HasBitOperators
operator &	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        friend HasBitOperators operator& (HasBitOperators lhs, HasBitOperators rhs) {$/;"	f	struct:__anon82::HasBitOperators
operator ^	..\Catch2\tests\SelfTest\UsageTests\Compilation.tests.cpp	/^        friend HasBitOperators operator^ (HasBitO