!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	465;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	468;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	471;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	474;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	478;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	480;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	482;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	486;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	489;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	492;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	497;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	500;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	503;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	508;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	511;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	514;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	517;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	520;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	523;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	526;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	529;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	532;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	535;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	540;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	543;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	546;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	549;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	552;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	555;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	560;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	563;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	566;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	569;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	572;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	576;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	480;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	483;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	486;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	489;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	493;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	495;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	497;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	501;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	504;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	507;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	512;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	515;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	518;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	523;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	526;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	529;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	532;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	535;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	538;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	541;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	544;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	547;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	550;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	555;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	558;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	561;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	564;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	567;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	570;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	575;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	578;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	581;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	584;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	587;"	d	file:
ARCHITECTURE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	591;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	223;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	308;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	326;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	329;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	151;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	159;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	164;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	171;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	174;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	183;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	186;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	189;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	207;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	229;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	244;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	259;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	273;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	283;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	301;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	310;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	324;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	341;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	344;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	64;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	76;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_INTERNAL	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_INTERNAL	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	313;"	d	file:
COMPILER_VERSION_INTERNAL	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	318;"	d	file:
COMPILER_VERSION_INTERNAL	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_INTERNAL	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	315;"	d	file:
COMPILER_VERSION_INTERNAL	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	320;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	102;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	189;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	257;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	269;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	271;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	302;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	310;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	315;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	72;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	102;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	160;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	211;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	285;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	304;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	312;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	317;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	326;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	331;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	57;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	274;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	284;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	303;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	311;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	316;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	153;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	161;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	212;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	224;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	264;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	276;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	286;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	305;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	313;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	318;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	327;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	332;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	207;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	291;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	304;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	312;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	317;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	81;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	250;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	265;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	290;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	306;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	30;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	314;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	319;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	328;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	32;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	333;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	235;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	250;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	295;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	219;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	241;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_TWEAK	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	36;"	d	file:
CXX_STD	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	658;"	d	file:
CXX_STD	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	660;"	d	file:
CXX_STD	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	663;"	d	file:
CXX_STD	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	666;"	d	file:
CXX_STD	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	668;"	d	file:
C_DIALECT	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	673;"	d	file:
C_DIALECT	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	675;"	d	file:
C_DIALECT	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	678;"	d	file:
C_DIALECT	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	680;"	d	file:
C_DIALECT	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	682;"	d	file:
DEC	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	580;"	d	file:
DEC	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	595;"	d	file:
FMADD_LANE	.\simd\neon.h	125;"	d
FMADD_LANE	.\simd\neon.h	148;"	d
GENTYPE	.\detail\qualifier.hpp	/^		static const genTypeEnum GENTYPE = GENTYPE_MAT;$/;"	m	struct:glm::detail::genTypeTrait
GENTYPE_MAT	.\detail\qualifier.hpp	/^		GENTYPE_MAT,$/;"	e	enum:glm::detail::genTypeEnum
GENTYPE_QUAT	.\detail\qualifier.hpp	/^		GENTYPE_QUAT$/;"	e	enum:glm::detail::genTypeEnum
GENTYPE_VEC	.\detail\qualifier.hpp	/^		GENTYPE_VEC,$/;"	e	enum:glm::detail::genTypeEnum
GLM_ALIGNED_TYPEDEF	.\detail\setup.hpp	513;"	d
GLM_ALIGNED_TYPEDEF	.\detail\setup.hpp	516;"	d
GLM_ALIGNED_TYPEDEF	.\detail\setup.hpp	519;"	d
GLM_ALIGNED_TYPEDEF	.\detail\setup.hpp	522;"	d
GLM_ARCH	.\simd\platform.h	273;"	d
GLM_ARCH	.\simd\platform.h	276;"	d
GLM_ARCH	.\simd\platform.h	278;"	d
GLM_ARCH	.\simd\platform.h	282;"	d
GLM_ARCH	.\simd\platform.h	285;"	d
GLM_ARCH	.\simd\platform.h	288;"	d
GLM_ARCH	.\simd\platform.h	291;"	d
GLM_ARCH	.\simd\platform.h	294;"	d
GLM_ARCH	.\simd\platform.h	297;"	d
GLM_ARCH	.\simd\platform.h	300;"	d
GLM_ARCH	.\simd\platform.h	303;"	d
GLM_ARCH	.\simd\platform.h	307;"	d
GLM_ARCH	.\simd\platform.h	309;"	d
GLM_ARCH	.\simd\platform.h	311;"	d
GLM_ARCH	.\simd\platform.h	313;"	d
GLM_ARCH	.\simd\platform.h	315;"	d
GLM_ARCH	.\simd\platform.h	317;"	d
GLM_ARCH	.\simd\platform.h	319;"	d
GLM_ARCH	.\simd\platform.h	321;"	d
GLM_ARCH	.\simd\platform.h	323;"	d
GLM_ARCH	.\simd\platform.h	325;"	d
GLM_ARCH	.\simd\platform.h	327;"	d
GLM_ARCH	.\simd\platform.h	329;"	d
GLM_ARCH	.\simd\platform.h	331;"	d
GLM_ARCH	.\simd\platform.h	333;"	d
GLM_ARCH	.\simd\platform.h	337;"	d
GLM_ARCH	.\simd\platform.h	339;"	d
GLM_ARCH	.\simd\platform.h	341;"	d
GLM_ARCH	.\simd\platform.h	343;"	d
GLM_ARCH	.\simd\platform.h	345;"	d
GLM_ARCH_ARM	.\simd\platform.h	266;"	d
GLM_ARCH_ARMV8	.\simd\platform.h	267;"	d
GLM_ARCH_ARMV8_BIT	.\simd\platform.h	241;"	d
GLM_ARCH_ARM_BIT	.\simd\platform.h	240;"	d
GLM_ARCH_AVX	.\simd\platform.h	264;"	d
GLM_ARCH_AVX2	.\simd\platform.h	265;"	d
GLM_ARCH_AVX2_BIT	.\simd\platform.h	254;"	d
GLM_ARCH_AVX_BIT	.\simd\platform.h	253;"	d
GLM_ARCH_MIPS	.\simd\platform.h	269;"	d
GLM_ARCH_MIPS_BIT	.\simd\platform.h	238;"	d
GLM_ARCH_NEON	.\simd\platform.h	268;"	d
GLM_ARCH_NEON_BIT	.\simd\platform.h	246;"	d
GLM_ARCH_PPC	.\simd\platform.h	270;"	d
GLM_ARCH_PPC_BIT	.\simd\platform.h	239;"	d
GLM_ARCH_SIMD_BIT	.\simd\platform.h	244;"	d
GLM_ARCH_SSE	.\simd\platform.h	258;"	d
GLM_ARCH_SSE2	.\simd\platform.h	259;"	d
GLM_ARCH_SSE2_BIT	.\simd\platform.h	248;"	d
GLM_ARCH_SSE3	.\simd\platform.h	260;"	d
GLM_ARCH_SSE3_BIT	.\simd\platform.h	249;"	d
GLM_ARCH_SSE41	.\simd\platform.h	262;"	d
GLM_ARCH_SSE41_BIT	.\simd\platform.h	251;"	d
GLM_ARCH_SSE42	.\simd\platform.h	263;"	d
GLM_ARCH_SSE42_BIT	.\simd\platform.h	252;"	d
GLM_ARCH_SSE_BIT	.\simd\platform.h	247;"	d
GLM_ARCH_SSSE3	.\simd\platform.h	261;"	d
GLM_ARCH_SSSE3_BIT	.\simd\platform.h	250;"	d
GLM_ARCH_UNKNOWN	.\simd\platform.h	256;"	d
GLM_ARCH_X86	.\simd\platform.h	257;"	d
GLM_ARCH_X86_BIT	.\simd\platform.h	242;"	d
GLM_CLIP_CONTROL_LH_BIT	.\detail\setup.hpp	486;"	d
GLM_CLIP_CONTROL_LH_NO	.\detail\setup.hpp	490;"	d
GLM_CLIP_CONTROL_LH_ZO	.\detail\setup.hpp	489;"	d
GLM_CLIP_CONTROL_NO_BIT	.\detail\setup.hpp	485;"	d
GLM_CLIP_CONTROL_RH_BIT	.\detail\setup.hpp	487;"	d
GLM_CLIP_CONTROL_RH_NO	.\detail\setup.hpp	492;"	d
GLM_CLIP_CONTROL_RH_ZO	.\detail\setup.hpp	491;"	d
GLM_CLIP_CONTROL_ZO_BIT	.\detail\setup.hpp	484;"	d
GLM_COMPILER	.\simd\platform.h	105;"	d
GLM_COMPILER	.\simd\platform.h	109;"	d
GLM_COMPILER	.\simd\platform.h	111;"	d
GLM_COMPILER	.\simd\platform.h	113;"	d
GLM_COMPILER	.\simd\platform.h	115;"	d
GLM_COMPILER	.\simd\platform.h	126;"	d
GLM_COMPILER	.\simd\platform.h	128;"	d
GLM_COMPILER	.\simd\platform.h	130;"	d
GLM_COMPILER	.\simd\platform.h	137;"	d
GLM_COMPILER	.\simd\platform.h	145;"	d
GLM_COMPILER	.\simd\platform.h	147;"	d
GLM_COMPILER	.\simd\platform.h	149;"	d
GLM_COMPILER	.\simd\platform.h	155;"	d
GLM_COMPILER	.\simd\platform.h	157;"	d
GLM_COMPILER	.\simd\platform.h	159;"	d
GLM_COMPILER	.\simd\platform.h	161;"	d
GLM_COMPILER	.\simd\platform.h	163;"	d
GLM_COMPILER	.\simd\platform.h	165;"	d
GLM_COMPILER	.\simd\platform.h	167;"	d
GLM_COMPILER	.\simd\platform.h	169;"	d
GLM_COMPILER	.\simd\platform.h	171;"	d
GLM_COMPILER	.\simd\platform.h	173;"	d
GLM_COMPILER	.\simd\platform.h	180;"	d
GLM_COMPILER	.\simd\platform.h	182;"	d
GLM_COMPILER	.\simd\platform.h	184;"	d
GLM_COMPILER	.\simd\platform.h	186;"	d
GLM_COMPILER	.\simd\platform.h	188;"	d
GLM_COMPILER	.\simd\platform.h	190;"	d
GLM_COMPILER	.\simd\platform.h	192;"	d
GLM_COMPILER	.\simd\platform.h	194;"	d
GLM_COMPILER	.\simd\platform.h	196;"	d
GLM_COMPILER	.\simd\platform.h	198;"	d
GLM_COMPILER	.\simd\platform.h	206;"	d
GLM_COMPILER	.\simd\platform.h	208;"	d
GLM_COMPILER	.\simd\platform.h	210;"	d
GLM_COMPILER	.\simd\platform.h	212;"	d
GLM_COMPILER	.\simd\platform.h	214;"	d
GLM_COMPILER	.\simd\platform.h	216;"	d
GLM_COMPILER	.\simd\platform.h	218;"	d
GLM_COMPILER	.\simd\platform.h	220;"	d
GLM_COMPILER	.\simd\platform.h	226;"	d
GLM_COMPILER_CLANG	.\simd\platform.h	88;"	d
GLM_COMPILER_CLANG34	.\simd\platform.h	89;"	d
GLM_COMPILER_CLANG35	.\simd\platform.h	90;"	d
GLM_COMPILER_CLANG36	.\simd\platform.h	91;"	d
GLM_COMPILER_CLANG37	.\simd\platform.h	92;"	d
GLM_COMPILER_CLANG38	.\simd\platform.h	93;"	d
GLM_COMPILER_CLANG39	.\simd\platform.h	94;"	d
GLM_COMPILER_CLANG40	.\simd\platform.h	95;"	d
GLM_COMPILER_CLANG41	.\simd\platform.h	96;"	d
GLM_COMPILER_CLANG42	.\simd\platform.h	97;"	d
GLM_COMPILER_CUDA	.\simd\platform.h	79;"	d
GLM_COMPILER_CUDA75	.\simd\platform.h	80;"	d
GLM_COMPILER_CUDA80	.\simd\platform.h	81;"	d
GLM_COMPILER_CUDA90	.\simd\platform.h	82;"	d
GLM_COMPILER_GCC	.\simd\platform.h	68;"	d
GLM_COMPILER_GCC46	.\simd\platform.h	69;"	d
GLM_COMPILER_GCC47	.\simd\platform.h	70;"	d
GLM_COMPILER_GCC48	.\simd\platform.h	71;"	d
GLM_COMPILER_GCC49	.\simd\platform.h	72;"	d
GLM_COMPILER_GCC5	.\simd\platform.h	73;"	d
GLM_COMPILER_GCC6	.\simd\platform.h	74;"	d
GLM_COMPILER_GCC7	.\simd\platform.h	75;"	d
GLM_COMPILER_GCC8	.\simd\platform.h	76;"	d
GLM_COMPILER_INTEL	.\simd\platform.h	48;"	d
GLM_COMPILER_INTEL14	.\simd\platform.h	49;"	d
GLM_COMPILER_INTEL15	.\simd\platform.h	50;"	d
GLM_COMPILER_INTEL16	.\simd\platform.h	51;"	d
GLM_COMPILER_INTEL17	.\simd\platform.h	52;"	d
GLM_COMPILER_SYCL	.\simd\platform.h	85;"	d
GLM_COMPILER_UNKNOWN	.\simd\platform.h	45;"	d
GLM_COMPILER_VC	.\simd\platform.h	55;"	d
GLM_COMPILER_VC12	.\simd\platform.h	56;"	d
GLM_COMPILER_VC14	.\simd\platform.h	57;"	d
GLM_COMPILER_VC15	.\simd\platform.h	58;"	d
GLM_COMPILER_VC15_3	.\simd\platform.h	59;"	d
GLM_COMPILER_VC15_5	.\simd\platform.h	60;"	d
GLM_COMPILER_VC15_6	.\simd\platform.h	61;"	d
GLM_COMPILER_VC15_7	.\simd\platform.h	62;"	d
GLM_COMPILER_VC15_8	.\simd\platform.h	63;"	d
GLM_COMPILER_VC15_9	.\simd\platform.h	64;"	d
GLM_COMPILER_VC16	.\simd\platform.h	65;"	d
GLM_CONFIG_ALIGNED_GENTYPES	.\detail\setup.hpp	833;"	d
GLM_CONFIG_ALIGNED_GENTYPES	.\detail\setup.hpp	835;"	d
GLM_CONFIG_ANONYMOUS_STRUCT	.\detail\setup.hpp	842;"	d
GLM_CONFIG_ANONYMOUS_STRUCT	.\detail\setup.hpp	844;"	d
GLM_CONFIG_CLIP_CONTROL	.\detail\setup.hpp	496;"	d
GLM_CONFIG_CLIP_CONTROL	.\detail\setup.hpp	498;"	d
GLM_CONFIG_CLIP_CONTROL	.\detail\setup.hpp	502;"	d
GLM_CONFIG_CLIP_CONTROL	.\detail\setup.hpp	504;"	d
GLM_CONFIG_CONSTEXP	.\detail\setup.hpp	603;"	d
GLM_CONFIG_CONSTEXP	.\detail\setup.hpp	615;"	d
GLM_CONFIG_CONSTEXP	.\detail\setup.hpp	619;"	d
GLM_CONFIG_CTOR_INIT	.\detail\setup.hpp	794;"	d
GLM_CONFIG_CTOR_INIT	.\detail\setup.hpp	796;"	d
GLM_CONFIG_CTOR_INIT	.\detail\setup.hpp	798;"	d
GLM_CONFIG_DEFAULTED_FUNCTIONS	.\detail\setup.hpp	814;"	d
GLM_CONFIG_DEFAULTED_FUNCTIONS	.\detail\setup.hpp	817;"	d
GLM_CONFIG_LENGTH_TYPE	.\detail\setup.hpp	584;"	d
GLM_CONFIG_LENGTH_TYPE	.\detail\setup.hpp	586;"	d
GLM_CONFIG_NULLPTR	.\detail\setup.hpp	386;"	d
GLM_CONFIG_NULLPTR	.\detail\setup.hpp	388;"	d
GLM_CONFIG_PRECISION_BOOL	.\detail\setup.hpp	864;"	d
GLM_CONFIG_PRECISION_BOOL	.\detail\setup.hpp	866;"	d
GLM_CONFIG_PRECISION_BOOL	.\detail\setup.hpp	868;"	d
GLM_CONFIG_PRECISION_BOOL	.\detail\setup.hpp	870;"	d
GLM_CONFIG_PRECISION_DOUBLE	.\detail\setup.hpp	904;"	d
GLM_CONFIG_PRECISION_DOUBLE	.\detail\setup.hpp	906;"	d
GLM_CONFIG_PRECISION_DOUBLE	.\detail\setup.hpp	908;"	d
GLM_CONFIG_PRECISION_DOUBLE	.\detail\setup.hpp	910;"	d
GLM_CONFIG_PRECISION_FLOAT	.\detail\setup.hpp	894;"	d
GLM_CONFIG_PRECISION_FLOAT	.\detail\setup.hpp	896;"	d
GLM_CONFIG_PRECISION_FLOAT	.\detail\setup.hpp	898;"	d
GLM_CONFIG_PRECISION_FLOAT	.\detail\setup.hpp	900;"	d
GLM_CONFIG_PRECISION_INT	.\detail\setup.hpp	874;"	d
GLM_CONFIG_PRECISION_INT	.\detail\setup.hpp	876;"	d
GLM_CONFIG_PRECISION_INT	.\detail\setup.hpp	878;"	d
GLM_CONFIG_PRECISION_INT	.\detail\setup.hpp	880;"	d
GLM_CONFIG_PRECISION_UINT	.\detail\setup.hpp	884;"	d
GLM_CONFIG_PRECISION_UINT	.\detail\setup.hpp	886;"	d
GLM_CONFIG_PRECISION_UINT	.\detail\setup.hpp	888;"	d
GLM_CONFIG_PRECISION_UINT	.\detail\setup.hpp	890;"	d
GLM_CONFIG_SIMD	.\detail\setup.hpp	805;"	d
GLM_CONFIG_SIMD	.\detail\setup.hpp	807;"	d
GLM_CONFIG_SWIZZLE	.\detail\setup.hpp	460;"	d
GLM_CONFIG_SWIZZLE	.\detail\setup.hpp	462;"	d
GLM_CONFIG_SWIZZLE	.\detail\setup.hpp	464;"	d
GLM_CONFIG_UNRESTRICTED_GENTYPE	.\detail\setup.hpp	473;"	d
GLM_CONFIG_UNRESTRICTED_GENTYPE	.\detail\setup.hpp	475;"	d
GLM_CONFIG_XYZW_ONLY	.\detail\setup.hpp	781;"	d
GLM_CONFIG_XYZW_ONLY	.\detail\setup.hpp	783;"	d
GLM_CONSTEXPR	.\detail\setup.hpp	290;"	d
GLM_CONSTEXPR	.\detail\setup.hpp	292;"	d
GLM_COUNTOF	.\detail\setup.hpp	613;"	d
GLM_COUNTOF	.\detail\setup.hpp	617;"	d
GLM_COUNTOF	.\detail\setup.hpp	621;"	d
GLM_CTOR_INITIALISATION	.\detail\setup.hpp	791;"	d
GLM_CTOR_INITIALIZER_LIST	.\detail\setup.hpp	790;"	d
GLM_CTOR_INIT_DISABLE	.\detail\setup.hpp	789;"	d
GLM_CUDA_FUNC_DECL	.\detail\setup.hpp	413;"	d
GLM_CUDA_FUNC_DECL	.\detail\setup.hpp	416;"	d
GLM_CUDA_FUNC_DEF	.\detail\setup.hpp	412;"	d
GLM_CUDA_FUNC_DEF	.\detail\setup.hpp	415;"	d
GLM_CXX11_ACCESS_CONTROL_SFINAE	.\detail\_features.hpp	263;"	d
GLM_CXX11_ALIAS_TEMPLATE	.\detail\_features.hpp	267;"	d
GLM_CXX11_ALIGNAS	.\detail\_features.hpp	271;"	d
GLM_CXX11_ATTRIBUTES	.\detail\_features.hpp	275;"	d
GLM_CXX11_AUTO_TYPE	.\detail\_features.hpp	367;"	d
GLM_CXX11_CONSTEXPR	.\detail\_features.hpp	279;"	d
GLM_CXX11_DECLTYPE	.\detail\_features.hpp	283;"	d
GLM_CXX11_DEFAULTED_FUNCTIONS	.\detail\_features.hpp	291;"	d
GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS	.\detail\_features.hpp	287;"	d
GLM_CXX11_DELEGATING_CONSTRUCTORS	.\detail\_features.hpp	295;"	d
GLM_CXX11_DELETED_FUNCTIONS	.\detail\_features.hpp	299;"	d
GLM_CXX11_EXPLICIT_CONVERSIONS	.\detail\_features.hpp	303;"	d
GLM_CXX11_GENERALIZED_INITIALIZERS	.\detail\_features.hpp	307;"	d
GLM_CXX11_IMPLICIT_MOVES	.\detail\_features.hpp	311;"	d
GLM_CXX11_INHERITING_CONSTRUCTORS	.\detail\_features.hpp	315;"	d
GLM_CXX11_INLINE_NAMESPACES	.\detail\_features.hpp	319;"	d
GLM_CXX11_LAMBDAS	.\detail\_features.hpp	323;"	d
GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS	.\detail\_features.hpp	327;"	d
GLM_CXX11_NOEXCEPT	.\detail\_features.hpp	331;"	d
GLM_CXX11_NONSTATIC_MEMBER_INIT	.\detail\_features.hpp	335;"	d
GLM_CXX11_NULLPTR	.\detail\_features.hpp	339;"	d
GLM_CXX11_OVERRIDE_CONTROL	.\detail\_features.hpp	343;"	d
GLM_CXX11_RANGE_FOR	.\detail\_features.hpp	351;"	d
GLM_CXX11_RAW_STRING_LITERALS	.\detail\_features.hpp	355;"	d
GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS	.\detail\_features.hpp	347;"	d
GLM_CXX11_RVALUE_REFERENCES	.\detail\_features.hpp	359;"	d
GLM_CXX11_STATIC_ASSERT	.\detail\_features.hpp	251;"	d
GLM_CXX11_STATIC_ASSERT	.\detail\_features.hpp	363;"	d
GLM_CXX11_STRONG_ENUMS	.\detail\_features.hpp	371;"	d
GLM_CXX11_TRAILING_RETURN	.\detail\_features.hpp	375;"	d
GLM_CXX11_UNICODE_LITERALS	.\detail\_features.hpp	379;"	d
GLM_CXX11_UNRESTRICTED_UNIONS	.\detail\_features.hpp	383;"	d
GLM_CXX11_USER_LITERALS	.\detail\_features.hpp	387;"	d
GLM_CXX11_VARIADIC_TEMPLATES	.\detail\_features.hpp	391;"	d
GLM_CXX98_EXCEPTIONS	.\detail\_features.hpp	255;"	d
GLM_CXX98_RTTI	.\detail\_features.hpp	259;"	d
GLM_DEFAULT	.\detail\setup.hpp	815;"	d
GLM_DEFAULT	.\detail\setup.hpp	818;"	d
GLM_DEFAULT	.\detail\type_mat2x2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat2x3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat2x4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat3x2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat3x3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat3x4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat4x2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat4x3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_mat4x4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR mat() GLM_DEFAULT;$/;"	m	struct:glm::mat
GLM_DEFAULT	.\detail\type_quat.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR qua() GLM_DEFAULT;$/;"	m	struct:glm::qua
GLM_DEFAULT	.\detail\type_quat.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR qua(qua<T, Q> const& q) GLM_DEFAULT;$/;"	m	struct:glm::qua
GLM_DEFAULT	.\detail\type_quat.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR qua<T, Q>& operator=(qua<T, Q> const& q) GLM_DEFAULT;$/;"	m	struct:glm::qua
GLM_DEFAULT	.\detail\type_vec1.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec() GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec1.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec(vec const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec1.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec<1, T, Q> & operator=(vec const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec() GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec(vec const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec<2, T, Q> & operator=(vec const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec() GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec(vec const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec<3, T, Q>& operator=(vec<3, T, Q> const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec() GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec(vec<4, T, Q> const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\detail\type_vec4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR vec<4, T, Q>& operator=(vec<4, T, Q> const& v) GLM_DEFAULT;$/;"	m	struct:glm::vec
GLM_DEFAULT	.\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tdualquat() GLM_DEFAULT;$/;"	m	struct:glm::tdualquat
GLM_DEFAULT	.\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tdualquat(tdualquat<T, Q> const& d) GLM_DEFAULT;$/;"	m	struct:glm::tdualquat
GLM_DEFAULT	.\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL tdualquat<T, Q> & operator=(tdualquat<T, Q> const& m) GLM_DEFAULT;$/;"	m	struct:glm::tdualquat
GLM_DEPRECATED	.\detail\setup.hpp	512;"	d
GLM_DEPRECATED	.\detail\setup.hpp	515;"	d
GLM_DEPRECATED	.\detail\setup.hpp	518;"	d
GLM_DEPRECATED	.\detail\setup.hpp	521;"	d
GLM_DISABLE	.\detail\setup.hpp	18;"	d
GLM_ENABLE	.\detail\setup.hpp	19;"	d
GLM_ENABLE_EXPERIMENTAL	.\detail\glm.cpp	5;"	d	file:
GLM_EXPLICIT	.\detail\setup.hpp	528;"	d
GLM_EXPLICIT	.\detail\setup.hpp	530;"	d
GLM_FORCE_ALIGNED_GENTYPES	.\detail\setup.hpp	1106;"	d
GLM_FORCE_ALIGNED_GENTYPES	.\detail\setup.hpp	1109;"	d
GLM_FORCE_ALIGNED_GENTYPES	.\detail\setup.hpp	829;"	d
GLM_FORCE_DEFAULT_ALIGNED_GENTYPES	.\detail\setup.hpp	1115;"	d
GLM_FORCE_DEFAULT_ALIGNED_GENTYPES	.\detail\setup.hpp	825;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	280;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	283;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	286;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	289;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	292;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	295;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	298;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	301;"	d
GLM_FORCE_INTRINSICS	.\simd\platform.h	304;"	d
GLM_FORCE_SWIZZLE	.\detail\setup.hpp	451;"	d
GLM_FORCE_SWIZZLE	.\detail\setup.hpp	456;"	d
GLM_FUNC_DECL	.\detail\setup.hpp	438;"	d
GLM_FUNC_QUALIFIER	.\detail\setup.hpp	439;"	d
GLM_HAS_ALIGNOF	.\detail\setup.hpp	265;"	d
GLM_HAS_ALIGNOF	.\detail\setup.hpp	267;"	d
GLM_HAS_ALIGNOF	.\detail\setup.hpp	269;"	d
GLM_HAS_ASSIGNABLE	.\detail\setup.hpp	320;"	d
GLM_HAS_ASSIGNABLE	.\detail\setup.hpp	322;"	d
GLM_HAS_BITSCAN_WINDOWS	.\detail\setup.hpp	341;"	d
GLM_HAS_BITSCAN_WINDOWS	.\detail\setup.hpp	345;"	d
GLM_HAS_CONSTEXPR	.\detail\setup.hpp	278;"	d
GLM_HAS_CONSTEXPR	.\detail\setup.hpp	280;"	d
GLM_HAS_CONSTEXPR	.\detail\setup.hpp	282;"	d
GLM_HAS_CONSTEXPR	.\detail\setup.hpp	284;"	d
GLM_HAS_CXX11_STL	.\detail\setup.hpp	144;"	d
GLM_HAS_CXX11_STL	.\detail\setup.hpp	147;"	d
GLM_HAS_CXX11_STL	.\detail\setup.hpp	149;"	d
GLM_HAS_CXX11_STL	.\detail\setup.hpp	152;"	d
GLM_HAS_CXX11_STL	.\detail\setup.hpp	154;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	.\detail\setup.hpp	206;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	.\detail\setup.hpp	208;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	.\detail\setup.hpp	210;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	.\detail\setup.hpp	229;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	.\detail\setup.hpp	231;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	.\detail\setup.hpp	233;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	.\detail\setup.hpp	173;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	.\detail\setup.hpp	175;"	d
GLM_HAS_IF_CONSTEXPR	.\detail\setup.hpp	299;"	d
GLM_HAS_IF_CONSTEXPR	.\detail\setup.hpp	301;"	d
GLM_HAS_IF_CONSTEXPR	.\detail\setup.hpp	304;"	d
GLM_HAS_IF_CONSTEXPR	.\detail\setup.hpp	306;"	d
GLM_HAS_IF_CONSTEXPR	.\detail\setup.hpp	309;"	d
GLM_HAS_INITIALIZER_LISTS	.\detail\setup.hpp	183;"	d
GLM_HAS_INITIALIZER_LISTS	.\detail\setup.hpp	185;"	d
GLM_HAS_INITIALIZER_LISTS	.\detail\setup.hpp	187;"	d
GLM_HAS_MAKE_SIGNED	.\detail\setup.hpp	332;"	d
GLM_HAS_MAKE_SIGNED	.\detail\setup.hpp	334;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	353;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	355;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	357;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	359;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	363;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	365;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	368;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	371;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	373;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	376;"	d
GLM_HAS_OPENMP	.\detail\setup.hpp	379;"	d
GLM_HAS_RANGE_FOR	.\detail\setup.hpp	253;"	d
GLM_HAS_RANGE_FOR	.\detail\setup.hpp	255;"	d
GLM_HAS_RANGE_FOR	.\detail\setup.hpp	257;"	d
GLM_HAS_RVALUE_REFERENCES	.\detail\setup.hpp	218;"	d
GLM_HAS_RVALUE_REFERENCES	.\detail\setup.hpp	220;"	d
GLM_HAS_RVALUE_REFERENCES	.\detail\setup.hpp	222;"	d
GLM_HAS_STATIC_ASSERT	.\detail\setup.hpp	162;"	d
GLM_HAS_STATIC_ASSERT	.\detail\setup.hpp	164;"	d
GLM_HAS_STATIC_ASSERT	.\detail\setup.hpp	166;"	d
GLM_HAS_TEMPLATE_ALIASES	.\detail\setup.hpp	241;"	d
GLM_HAS_TEMPLATE_ALIASES	.\detail\setup.hpp	243;"	d
GLM_HAS_TEMPLATE_ALIASES	.\detail\setup.hpp	245;"	d
GLM_HAS_TRIVIAL_QUERIES	.\detail\setup.hpp	328;"	d
GLM_HAS_UNRESTRICTED_UNIONS	.\detail\setup.hpp	195;"	d
GLM_HAS_UNRESTRICTED_UNIONS	.\detail\setup.hpp	197;"	d
GLM_HAS_UNRESTRICTED_UNIONS	.\detail\setup.hpp	199;"	d
GLM_HIGHP	.\detail\setup.hpp	859;"	d
GLM_IF_CONSTEXPR	.\detail\setup.hpp	313;"	d
GLM_IF_CONSTEXPR	.\detail\setup.hpp	315;"	d
GLM_IMPLEMENT_SCAL_MULT	.\gtx\scalar_multiplication.hpp	41;"	d
GLM_IMPLEMENT_SCAL_MULT	.\gtx\scalar_multiplication.hpp	74;"	d
GLM_INLINE	.\detail\setup.hpp	421;"	d
GLM_INLINE	.\detail\setup.hpp	424;"	d
GLM_INLINE	.\detail\setup.hpp	427;"	d
GLM_INLINE	.\detail\setup.hpp	430;"	d
GLM_INLINE	.\detail\setup.hpp	434;"	d
GLM_LANG	.\detail\setup.hpp	100;"	d
GLM_LANG	.\detail\setup.hpp	119;"	d
GLM_LANG	.\detail\setup.hpp	121;"	d
GLM_LANG	.\detail\setup.hpp	123;"	d
GLM_LANG	.\detail\setup.hpp	125;"	d
GLM_LANG	.\detail\setup.hpp	127;"	d
GLM_LANG	.\detail\setup.hpp	129;"	d
GLM_LANG	.\detail\setup.hpp	131;"	d
GLM_LANG	.\detail\setup.hpp	84;"	d
GLM_LANG	.\detail\setup.hpp	86;"	d
GLM_LANG	.\detail\setup.hpp	89;"	d
GLM_LANG	.\detail\setup.hpp	92;"	d
GLM_LANG	.\detail\setup.hpp	95;"	d
GLM_LANG	.\detail\setup.hpp	98;"	d
GLM_LANG_CXX03	.\detail\setup.hpp	66;"	d
GLM_LANG_CXX03_FLAG	.\detail\setup.hpp	56;"	d
GLM_LANG_CXX0X	.\detail\setup.hpp	67;"	d
GLM_LANG_CXX0X_FLAG	.\detail\setup.hpp	57;"	d
GLM_LANG_CXX11	.\detail\setup.hpp	68;"	d
GLM_LANG_CXX11_FLAG	.\detail\setup.hpp	58;"	d
GLM_LANG_CXX14	.\detail\setup.hpp	69;"	d
GLM_LANG_CXX14_FLAG	.\detail\setup.hpp	59;"	d
GLM_LANG_CXX17	.\detail\setup.hpp	70;"	d
GLM_LANG_CXX17_FLAG	.\detail\setup.hpp	60;"	d
GLM_LANG_CXX2A	.\detail\setup.hpp	71;"	d
GLM_LANG_CXX2A_FLAG	.\detail\setup.hpp	61;"	d
GLM_LANG_CXX98	.\detail\setup.hpp	65;"	d
GLM_LANG_CXX98_FLAG	.\detail\setup.hpp	55;"	d
GLM_LANG_CXXGNU	.\detail\setup.hpp	73;"	d
GLM_LANG_CXXGNU_FLAG	.\detail\setup.hpp	63;"	d
GLM_LANG_CXXMS	.\detail\setup.hpp	72;"	d
GLM_LANG_CXXMS_FLAG	.\detail\setup.hpp	62;"	d
GLM_LANG_EXT	.\detail\setup.hpp	76;"	d
GLM_LANG_EXT	.\detail\setup.hpp	78;"	d
GLM_LANG_EXT	.\detail\setup.hpp	80;"	d
GLM_LANG_PLATFORM	.\detail\setup.hpp	104;"	d
GLM_LANG_PLATFORM	.\detail\setup.hpp	107;"	d
GLM_LANG_PLATFORM	.\detail\setup.hpp	109;"	d
GLM_LANG_PLATFORM	.\detail\setup.hpp	112;"	d
GLM_LANG_PLATFORM	.\detail\setup.hpp	115;"	d
GLM_LANG_STL11_FORCED	.\detail\setup.hpp	87;"	d
GLM_LANG_STL11_FORCED	.\detail\setup.hpp	90;"	d
GLM_LANG_STL11_FORCED	.\detail\setup.hpp	93;"	d
GLM_LANG_STL11_FORCED	.\detail\setup.hpp	96;"	d
GLM_LENGTH_INT	.\detail\setup.hpp	580;"	d
GLM_LENGTH_SIZE_T	.\detail\setup.hpp	581;"	d
GLM_LOWP	.\detail\setup.hpp	861;"	d
GLM_MEDIUMP	.\detail\setup.hpp	860;"	d
GLM_MESSAGES	.\detail\setup.hpp	25;"	d
GLM_MESSAGES	.\detail\setup.hpp	27;"	d
GLM_MESSAGE_DISPLAYED	.\detail\setup.hpp	924;"	d
GLM_MESSAGE_EXT_INCLUDED_DISPLAYED	.\ext.hpp	12;"	d
GLM_MODEL	.\detail\setup.hpp	39;"	d
GLM_MODEL	.\detail\setup.hpp	41;"	d
GLM_MODEL	.\detail\setup.hpp	43;"	d
GLM_MODEL_32	.\simd\platform.h	100;"	d
GLM_MODEL_64	.\simd\platform.h	101;"	d
GLM_MUTABLE	.\detail\_swizzle_func.hpp	42;"	d
GLM_NEVER_INLINE	.\detail\setup.hpp	422;"	d
GLM_NEVER_INLINE	.\detail\setup.hpp	425;"	d
GLM_NEVER_INLINE	.\detail\setup.hpp	428;"	d
GLM_NEVER_INLINE	.\detail\setup.hpp	431;"	d
GLM_NEVER_INLINE	.\detail\setup.hpp	435;"	d
GLM_NULLPTR	.\detail\setup.hpp	392;"	d
GLM_NULLPTR	.\detail\setup.hpp	394;"	d
GLM_PLATFORM	.\simd\platform.h	19;"	d
GLM_PLATFORM	.\simd\platform.h	21;"	d
GLM_PLATFORM	.\simd\platform.h	23;"	d
GLM_PLATFORM	.\simd\platform.h	25;"	d
GLM_PLATFORM	.\simd\platform.h	27;"	d
GLM_PLATFORM	.\simd\platform.h	29;"	d
GLM_PLATFORM	.\simd\platform.h	31;"	d
GLM_PLATFORM	.\simd\platform.h	33;"	d
GLM_PLATFORM	.\simd\platform.h	35;"	d
GLM_PLATFORM	.\simd\platform.h	37;"	d
GLM_PLATFORM	.\simd\platform.h	39;"	d
GLM_PLATFORM_ANDROID	.\simd\platform.h	11;"	d
GLM_PLATFORM_APPLE	.\simd\platform.h	9;"	d
GLM_PLATFORM_CHROME_NACL	.\simd\platform.h	12;"	d
GLM_PLATFORM_CYGWIN	.\simd\platform.h	16;"	d
GLM_PLATFORM_LINUX	.\simd\platform.h	8;"	d
GLM_PLATFORM_QNXNTO	.\simd\platform.h	14;"	d
GLM_PLATFORM_UNIX	.\simd\platform.h	13;"	d
GLM_PLATFORM_UNKNOWN	.\simd\platform.h	6;"	d
GLM_PLATFORM_WINCE	.\simd\platform.h	15;"	d
GLM_PLATFORM_WINDOWS	.\simd\platform.h	7;"	d
GLM_SETUP_INCLUDED	.\detail\setup.hpp	13;"	d
GLM_SILENT_WARNINGS	.\detail\setup.hpp	851;"	d
GLM_SILENT_WARNINGS	.\detail\setup.hpp	853;"	d
GLM_STATIC_ASSERT	.\detail\setup.hpp	401;"	d
GLM_STATIC_ASSERT	.\detail\setup.hpp	403;"	d
GLM_STATIC_ASSERT	.\detail\setup.hpp	405;"	d
GLM_STR	.\detail\setup.hpp	926;"	d
GLM_STR_HELPER	.\detail\setup.hpp	925;"	d
GLM_SWIZZLE2_2_MEMBERS	.\detail\_swizzle.hpp	307;"	d
GLM_SWIZZLE2_3_MEMBERS	.\detail\_swizzle.hpp	313;"	d
GLM_SWIZZLE2_4_MEMBERS	.\detail\_swizzle.hpp	323;"	d
GLM_SWIZZLE3_2_MEMBERS	.\detail\_swizzle.hpp	341;"	d
GLM_SWIZZLE3_3_MEMBERS	.\detail\_swizzle.hpp	352;"	d
GLM_SWIZZLE3_4_MEMBERS	.\detail\_swizzle.hpp	381;"	d
GLM_SWIZZLE4_2_MEMBERS	.\detail\_swizzle.hpp	464;"	d
GLM_SWIZZLE4_3_MEMBERS	.\detail\_swizzle.hpp	482;"	d
GLM_SWIZZLE4_4_MEMBERS	.\detail\_swizzle.hpp	548;"	d
GLM_SWIZZLE_DISABLED	.\detail\setup.hpp	446;"	d
GLM_SWIZZLE_FUNCTION	.\detail\setup.hpp	448;"	d
GLM_SWIZZLE_FUNCTION_1_ARGS	.\detail\_swizzle.hpp	213;"	d
GLM_SWIZZLE_FUNCTION_2_ARGS	.\detail\_swizzle.hpp	223;"	d
GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR	.\detail\_swizzle.hpp	248;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE	.\detail\_swizzle_func.hpp	44;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE	.\detail\_swizzle_func.hpp	53;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE	.\detail\_swizzle_func.hpp	78;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE	.\detail\_swizzle_func.hpp	61;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE	.\detail\_swizzle_func.hpp	92;"	d
GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE	.\detail\_swizzle_func.hpp	118;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC2	.\detail\_swizzle_func.hpp	48;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3	.\detail\_swizzle_func.hpp	73;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP	.\detail\_swizzle_func.hpp	69;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4	.\detail\_swizzle_func.hpp	149;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP	.\detail\_swizzle_func.hpp	144;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY	.\detail\_swizzle_func.hpp	3;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF	.\detail\_swizzle_func.hpp	21;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE	.\detail\_swizzle_func.hpp	154;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE	.\detail\_swizzle_func.hpp	198;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE	.\detail\_swizzle_func.hpp	331;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY	.\detail\_swizzle_func.hpp	9;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF	.\detail\_swizzle_func.hpp	28;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE	.\detail\_swizzle_func.hpp	160;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE	.\detail\_swizzle_func.hpp	209;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE	.\detail\_swizzle_func.hpp	349;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY	.\detail\_swizzle_func.hpp	15;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF	.\detail\_swizzle_func.hpp	35;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE	.\detail\_swizzle_func.hpp	170;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE	.\detail\_swizzle_func.hpp	238;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE	.\detail\_swizzle_func.hpp	415;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2	.\detail\_swizzle_func.hpp	193;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP	.\detail\_swizzle_func.hpp	188;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3	.\detail\_swizzle_func.hpp	326;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP	.\detail\_swizzle_func.hpp	321;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4	.\detail\_swizzle_func.hpp	678;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP	.\detail\_swizzle_func.hpp	673;"	d
GLM_SWIZZLE_OPERATOR	.\detail\setup.hpp	447;"	d
GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION	.\detail\_swizzle.hpp	198;"	d
GLM_SWIZZLE_TEMPLATE1	.\detail\_swizzle.hpp	170;"	d
GLM_SWIZZLE_TEMPLATE2	.\detail\_swizzle.hpp	171;"	d
GLM_SWIZZLE_TYPE1	.\detail\_swizzle.hpp	172;"	d
GLM_SWIZZLE_TYPE2	.\detail\_swizzle.hpp	173;"	d
GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION	.\detail\_swizzle.hpp	178;"	d
GLM_VERSION	.\detail\setup.hpp	10;"	d
GLM_VERSION_MAJOR	.\detail\setup.hpp	6;"	d
GLM_VERSION_MESSAGE	.\detail\setup.hpp	11;"	d
GLM_VERSION_MINOR	.\detail\setup.hpp	7;"	d
GLM_VERSION_PATCH	.\detail\setup.hpp	8;"	d
GLM_VERSION_REVISION	.\detail\setup.hpp	9;"	d
HEX	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	591;"	d	file:
HEX	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	606;"	d	file:
ID_VOID_MAIN	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	6;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	363;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	366;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	369;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	372;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	375;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	378;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	381;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	384;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	387;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	393;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	396;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	399;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	402;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	405;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	408;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	411;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	414;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	417;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	420;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	423;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	427;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	430;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	433;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	436;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	439;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	442;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	447;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	450;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	454;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	384;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	387;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	390;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	393;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	396;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	402;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	405;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	408;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	411;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	414;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	417;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	420;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	423;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	426;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	429;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	432;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	435;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	438;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	442;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	445;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	448;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	451;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	454;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	457;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	462;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	465;"	d	file:
PLATFORM_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	469;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	203;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	225;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	240;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	24;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	255;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	209;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	231;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	246;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	24;"	d	file:
SIMULATE_ID	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	261;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	210;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	232;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	247;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	262;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	40;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	44;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	46;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	216;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	238;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	253;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	268;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	40;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	44;"	d	file:
SIMULATE_VERSION_MAJOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	46;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	211;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	233;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	248;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	263;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	41;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	49;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	217;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	239;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	254;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	269;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	41;"	d	file:
SIMULATE_VERSION_MINOR	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	49;"	d	file:
SIMULATE_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	52;"	d	file:
SIMULATE_VERSION_PATCH	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	52;"	d	file:
STRINGIFY	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	350;"	d	file:
STRINGIFY	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	365;"	d	file:
STRINGIFY_HELPER	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	349;"	d	file:
STRINGIFY_HELPER	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	364;"	d	file:
Stub	.\detail\_swizzle.hpp	/^		struct Stub {};$/;"	s	struct:glm::detail::_swizzle_base2
_apply_op	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void _apply_op(vec<N, T, Q> const& that, const U& op)$/;"	f	struct:glm::detail::_swizzle_base2
_buffer	.\detail\_swizzle.hpp	/^		char    _buffer[1];$/;"	m	struct:glm::detail::_swizzle_base0
_swizzle	.\detail\_swizzle.hpp	/^	struct _swizzle : public _swizzle_base2<N, T, Q, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 || E1 == E3 || E2 == E3)>$/;"	s	namespace:glm::detail
_swizzle_base0	.\detail\_swizzle.hpp	/^	struct _swizzle_base0$/;"	s	namespace:glm::detail
_swizzle_base1	.\detail\_swizzle.hpp	/^	struct _swizzle_base1 : public _swizzle_base0<T, N>$/;"	s	namespace:glm::detail
_swizzle_base1	.\detail\_swizzle.hpp	/^	struct _swizzle_base1<2, T, Q, E0,E1,-1,-2, Aligned> : public _swizzle_base0<T, 2>$/;"	s	namespace:glm::detail
_swizzle_base1	.\detail\_swizzle.hpp	/^	struct _swizzle_base1<3, T, Q, E0,E1,E2,-1, Aligned> : public _swizzle_base0<T, 3>$/;"	s	namespace:glm::detail
_swizzle_base1	.\detail\_swizzle.hpp	/^	struct _swizzle_base1<4, T, Q, E0,E1,E2,E3, Aligned> : public _swizzle_base0<T, 4>$/;"	s	namespace:glm::detail
_swizzle_base2	.\detail\_swizzle.hpp	/^	struct _swizzle_base2 : public _swizzle_base1<N, T, Q, E0,E1,E2,E3, detail::is_aligned<Q>::value>$/;"	s	namespace:glm::detail
_swizzle_base2	.\detail\_swizzle.hpp	/^	struct _swizzle_base2<N, T, Q, E0,E1,E2,E3, 1> : public _swizzle_base1<N, T, Q, E0,E1,E2,E3, detail::is_aligned<Q>::value>$/;"	s	namespace:glm::detail
a	.\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon18::__anon20
a	.\detail\type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::vec::__anon25
aligned	.\detail\qualifier.hpp	/^			aligned = aligned_highp, \/\/\/< By default aligned qualifier is also high precision$/;"	e	enum:glm::qualifier
aligned_bvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec1			aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec1			aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec1		aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec2			aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec2			aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec2		aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec3			aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec3			aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec3		aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec4			aligned_bvec4;$/;"	t	namespace:glm
aligned_bvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec4			aligned_bvec4;$/;"	t	namespace:glm
aligned_bvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec4		aligned_bvec4;$/;"	t	namespace:glm
aligned_dmat2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat2			aligned_dmat2;$/;"	t	namespace:glm
aligned_dmat2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat2			aligned_dmat2;$/;"	t	namespace:glm
aligned_dmat2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat2		aligned_dmat2;$/;"	t	namespace:glm
aligned_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm
aligned_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm
aligned_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm
aligned_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm
aligned_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm
aligned_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm
aligned_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm
aligned_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm
aligned_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm
aligned_dmat3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat3			aligned_dmat3;$/;"	t	namespace:glm
aligned_dmat3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat3			aligned_dmat3;$/;"	t	namespace:glm
aligned_dmat3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat3		aligned_dmat3;$/;"	t	namespace:glm
aligned_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm
aligned_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm
aligned_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm
aligned_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm
aligned_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm
aligned_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm
aligned_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm
aligned_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm
aligned_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm
aligned_dmat4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat4			aligned_dmat4;$/;"	t	namespace:glm
aligned_dmat4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat4			aligned_dmat4;$/;"	t	namespace:glm
aligned_dmat4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat4		aligned_dmat4;$/;"	t	namespace:glm
aligned_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm
aligned_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm
aligned_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm
aligned_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm
aligned_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm
aligned_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm
aligned_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm
aligned_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm
aligned_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm
aligned_dvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec1			aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec1			aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec1		aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec2			aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec2			aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec2		aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec3			aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec3			aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec3		aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec4			aligned_dvec4;$/;"	t	namespace:glm
aligned_dvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec4			aligned_dvec4;$/;"	t	namespace:glm
aligned_dvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec4		aligned_dvec4;$/;"	t	namespace:glm
aligned_highp	.\detail\qualifier.hpp	/^			aligned_highp, \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and operations are executed with high precision in term of ULPs$/;"	e	enum:glm::qualifier
aligned_highp_bvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, bool, aligned_highp>		aligned_highp_bvec1;$/;"	t	namespace:glm
aligned_highp_bvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, bool, aligned_highp>		aligned_highp_bvec2;$/;"	t	namespace:glm
aligned_highp_bvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, bool, aligned_highp>		aligned_highp_bvec3;$/;"	t	namespace:glm
aligned_highp_bvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, bool, aligned_highp>		aligned_highp_bvec4;$/;"	t	namespace:glm
aligned_highp_dmat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_highp>	aligned_highp_dmat2;$/;"	t	namespace:glm
aligned_highp_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_highp>	aligned_highp_dmat2x2;$/;"	t	namespace:glm
aligned_highp_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_highp>	aligned_highp_dmat2x3;$/;"	t	namespace:glm
aligned_highp_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_highp>	aligned_highp_dmat2x4;$/;"	t	namespace:glm
aligned_highp_dmat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_highp>	aligned_highp_dmat3;$/;"	t	namespace:glm
aligned_highp_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_highp>	aligned_highp_dmat3x2;$/;"	t	namespace:glm
aligned_highp_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_highp>	aligned_highp_dmat3x3;$/;"	t	namespace:glm
aligned_highp_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_highp>	aligned_highp_dmat3x4;$/;"	t	namespace:glm
aligned_highp_dmat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_highp>	aligned_highp_dmat4;$/;"	t	namespace:glm
aligned_highp_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_highp>	aligned_highp_dmat4x2;$/;"	t	namespace:glm
aligned_highp_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_highp>	aligned_highp_dmat4x3;$/;"	t	namespace:glm
aligned_highp_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_highp>	aligned_highp_dmat4x4;$/;"	t	namespace:glm
aligned_highp_dvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, double, aligned_highp>	aligned_highp_dvec1;$/;"	t	namespace:glm
aligned_highp_dvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, double, aligned_highp>	aligned_highp_dvec2;$/;"	t	namespace:glm
aligned_highp_dvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, double, aligned_highp>	aligned_highp_dvec3;$/;"	t	namespace:glm
aligned_highp_dvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, double, aligned_highp>	aligned_highp_dvec4;$/;"	t	namespace:glm
aligned_highp_ivec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, int, aligned_highp>		aligned_highp_ivec1;$/;"	t	namespace:glm
aligned_highp_ivec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, int, aligned_highp>		aligned_highp_ivec2;$/;"	t	namespace:glm
aligned_highp_ivec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, int, aligned_highp>		aligned_highp_ivec3;$/;"	t	namespace:glm
aligned_highp_ivec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, int, aligned_highp>		aligned_highp_ivec4;$/;"	t	namespace:glm
aligned_highp_mat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_highp>		aligned_highp_mat2;$/;"	t	namespace:glm
aligned_highp_mat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_highp>		aligned_highp_mat2x2;$/;"	t	namespace:glm
aligned_highp_mat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_highp>		aligned_highp_mat2x3;$/;"	t	namespace:glm
aligned_highp_mat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_highp>		aligned_highp_mat2x4;$/;"	t	namespace:glm
aligned_highp_mat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_highp>		aligned_highp_mat3;$/;"	t	namespace:glm
aligned_highp_mat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_highp>		aligned_highp_mat3x2;$/;"	t	namespace:glm
aligned_highp_mat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_highp>		aligned_highp_mat3x3;$/;"	t	namespace:glm
aligned_highp_mat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_highp>		aligned_highp_mat3x4;$/;"	t	namespace:glm
aligned_highp_mat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_highp>		aligned_highp_mat4;$/;"	t	namespace:glm
aligned_highp_mat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_highp>		aligned_highp_mat4x2;$/;"	t	namespace:glm
aligned_highp_mat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_highp>		aligned_highp_mat4x3;$/;"	t	namespace:glm
aligned_highp_mat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_highp>		aligned_highp_mat4x4;$/;"	t	namespace:glm
aligned_highp_uvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, uint, aligned_highp>		aligned_highp_uvec1;$/;"	t	namespace:glm
aligned_highp_uvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, uint, aligned_highp>		aligned_highp_uvec2;$/;"	t	namespace:glm
aligned_highp_uvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, uint, aligned_highp>		aligned_highp_uvec3;$/;"	t	namespace:glm
aligned_highp_uvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, uint, aligned_highp>		aligned_highp_uvec4;$/;"	t	namespace:glm
aligned_highp_vec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, float, aligned_highp>	aligned_highp_vec1;$/;"	t	namespace:glm
aligned_highp_vec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, float, aligned_highp>	aligned_highp_vec2;$/;"	t	namespace:glm
aligned_highp_vec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, float, aligned_highp>	aligned_highp_vec3;$/;"	t	namespace:glm
aligned_highp_vec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, float, aligned_highp>	aligned_highp_vec4;$/;"	t	namespace:glm
aligned_ivec1	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec1			aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec1	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec1			aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec1	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec1		aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec2			aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec2			aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec2		aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec3			aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec3			aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec3		aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec4			aligned_ivec4;$/;"	t	namespace:glm
aligned_ivec4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec4			aligned_ivec4;$/;"	t	namespace:glm
aligned_ivec4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec4		aligned_ivec4;$/;"	t	namespace:glm
aligned_lowp	.\detail\qualifier.hpp	/^			aligned_lowp, \/\/ \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and operations are executed with high precision in term of ULPs to maximize performance$/;"	e	enum:glm::qualifier
aligned_lowp_bvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, bool, aligned_lowp>		aligned_lowp_bvec1;$/;"	t	namespace:glm
aligned_lowp_bvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, bool, aligned_lowp>		aligned_lowp_bvec2;$/;"	t	namespace:glm
aligned_lowp_bvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, bool, aligned_lowp>		aligned_lowp_bvec3;$/;"	t	namespace:glm
aligned_lowp_bvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, bool, aligned_lowp>		aligned_lowp_bvec4;$/;"	t	namespace:glm
aligned_lowp_dmat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_lowp>		aligned_lowp_dmat2;$/;"	t	namespace:glm
aligned_lowp_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_lowp>		aligned_lowp_dmat2x2;$/;"	t	namespace:glm
aligned_lowp_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_lowp>		aligned_lowp_dmat2x3;$/;"	t	namespace:glm
aligned_lowp_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_lowp>		aligned_lowp_dmat2x4;$/;"	t	namespace:glm
aligned_lowp_dmat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_lowp>		aligned_lowp_dmat3;$/;"	t	namespace:glm
aligned_lowp_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_lowp>		aligned_lowp_dmat3x2;$/;"	t	namespace:glm
aligned_lowp_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_lowp>		aligned_lowp_dmat3x3;$/;"	t	namespace:glm
aligned_lowp_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_lowp>		aligned_lowp_dmat3x4;$/;"	t	namespace:glm
aligned_lowp_dmat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_lowp>		aligned_lowp_dmat4;$/;"	t	namespace:glm
aligned_lowp_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_lowp>		aligned_lowp_dmat4x2;$/;"	t	namespace:glm
aligned_lowp_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_lowp>		aligned_lowp_dmat4x3;$/;"	t	namespace:glm
aligned_lowp_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_lowp>		aligned_lowp_dmat4x4;$/;"	t	namespace:glm
aligned_lowp_dvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, double, aligned_lowp>	aligned_lowp_dvec1;$/;"	t	namespace:glm
aligned_lowp_dvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, double, aligned_lowp>	aligned_lowp_dvec2;$/;"	t	namespace:glm
aligned_lowp_dvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, double, aligned_lowp>	aligned_lowp_dvec3;$/;"	t	namespace:glm
aligned_lowp_dvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, double, aligned_lowp>	aligned_lowp_dvec4;$/;"	t	namespace:glm
aligned_lowp_ivec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, int, aligned_lowp>		aligned_lowp_ivec1;$/;"	t	namespace:glm
aligned_lowp_ivec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, int, aligned_lowp>		aligned_lowp_ivec2;$/;"	t	namespace:glm
aligned_lowp_ivec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, int, aligned_lowp>		aligned_lowp_ivec3;$/;"	t	namespace:glm
aligned_lowp_ivec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, int, aligned_lowp>		aligned_lowp_ivec4;$/;"	t	namespace:glm
aligned_lowp_mat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_lowp>		aligned_lowp_mat2;$/;"	t	namespace:glm
aligned_lowp_mat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_lowp>		aligned_lowp_mat2x2;$/;"	t	namespace:glm
aligned_lowp_mat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_lowp>		aligned_lowp_mat2x3;$/;"	t	namespace:glm
aligned_lowp_mat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_lowp>		aligned_lowp_mat2x4;$/;"	t	namespace:glm
aligned_lowp_mat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_lowp>		aligned_lowp_mat3;$/;"	t	namespace:glm
aligned_lowp_mat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_lowp>		aligned_lowp_mat3x2;$/;"	t	namespace:glm
aligned_lowp_mat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_lowp>		aligned_lowp_mat3x3;$/;"	t	namespace:glm
aligned_lowp_mat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_lowp>		aligned_lowp_mat3x4;$/;"	t	namespace:glm
aligned_lowp_mat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_lowp>		aligned_lowp_mat4;$/;"	t	namespace:glm
aligned_lowp_mat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_lowp>		aligned_lowp_mat4x2;$/;"	t	namespace:glm
aligned_lowp_mat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_lowp>		aligned_lowp_mat4x3;$/;"	t	namespace:glm
aligned_lowp_mat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_lowp>		aligned_lowp_mat4x4;$/;"	t	namespace:glm
aligned_lowp_uvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, uint, aligned_lowp>		aligned_lowp_uvec1;$/;"	t	namespace:glm
aligned_lowp_uvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, uint, aligned_lowp>		aligned_lowp_uvec2;$/;"	t	namespace:glm
aligned_lowp_uvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, uint, aligned_lowp>		aligned_lowp_uvec3;$/;"	t	namespace:glm
aligned_lowp_uvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, uint, aligned_lowp>		aligned_lowp_uvec4;$/;"	t	namespace:glm
aligned_lowp_vec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, float, aligned_lowp>		aligned_lowp_vec1;$/;"	t	namespace:glm
aligned_lowp_vec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, float, aligned_lowp>		aligned_lowp_vec2;$/;"	t	namespace:glm
aligned_lowp_vec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, float, aligned_lowp>		aligned_lowp_vec3;$/;"	t	namespace:glm
aligned_lowp_vec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, float, aligned_lowp>		aligned_lowp_vec4;$/;"	t	namespace:glm
aligned_mat2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat2			aligned_mat2;$/;"	t	namespace:glm
aligned_mat2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat2			aligned_mat2;$/;"	t	namespace:glm
aligned_mat2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat2		aligned_mat2;$/;"	t	namespace:glm
aligned_mat2x2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat2x2		aligned_mat2x2;$/;"	t	namespace:glm
aligned_mat2x2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat2x2			aligned_mat2x2;$/;"	t	namespace:glm
aligned_mat2x2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat2x2		aligned_mat2x2;$/;"	t	namespace:glm
aligned_mat2x3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat2x3		aligned_mat2x3;$/;"	t	namespace:glm
aligned_mat2x3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat2x3			aligned_mat2x3;$/;"	t	namespace:glm
aligned_mat2x3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat2x3		aligned_mat2x3;$/;"	t	namespace:glm
aligned_mat2x4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat2x4		aligned_mat2x4;$/;"	t	namespace:glm
aligned_mat2x4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat2x4			aligned_mat2x4;$/;"	t	namespace:glm
aligned_mat2x4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat2x4		aligned_mat2x4;$/;"	t	namespace:glm
aligned_mat3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat3			aligned_mat3;$/;"	t	namespace:glm
aligned_mat3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat3			aligned_mat3;$/;"	t	namespace:glm
aligned_mat3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat3		aligned_mat3;$/;"	t	namespace:glm
aligned_mat3x2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat3x2		aligned_mat3x2;$/;"	t	namespace:glm
aligned_mat3x2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat3x2			aligned_mat3x2;$/;"	t	namespace:glm
aligned_mat3x2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat3x2		aligned_mat3x2;$/;"	t	namespace:glm
aligned_mat3x3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat3x3		aligned_mat3x3;$/;"	t	namespace:glm
aligned_mat3x3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat3x3			aligned_mat3x3;$/;"	t	namespace:glm
aligned_mat3x3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat3x3		aligned_mat3x3;$/;"	t	namespace:glm
aligned_mat3x4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat3x4		aligned_mat3x4;$/;"	t	namespace:glm
aligned_mat3x4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat3x4			aligned_mat3x4;$/;"	t	namespace:glm
aligned_mat3x4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat3x4		aligned_mat3x4;$/;"	t	namespace:glm
aligned_mat4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat4			aligned_mat4;$/;"	t	namespace:glm
aligned_mat4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat4			aligned_mat4;$/;"	t	namespace:glm
aligned_mat4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat4		aligned_mat4;$/;"	t	namespace:glm
aligned_mat4x2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat4x2		aligned_mat4x2;$/;"	t	namespace:glm
aligned_mat4x2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat4x2			aligned_mat4x2;$/;"	t	namespace:glm
aligned_mat4x2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat4x2		aligned_mat4x2;$/;"	t	namespace:glm
aligned_mat4x3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat4x3		aligned_mat4x3;$/;"	t	namespace:glm
aligned_mat4x3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat4x3			aligned_mat4x3;$/;"	t	namespace:glm
aligned_mat4x3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat4x3		aligned_mat4x3;$/;"	t	namespace:glm
aligned_mat4x4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_mat4x4		aligned_mat4x4;$/;"	t	namespace:glm
aligned_mat4x4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_mat4x4			aligned_mat4x4;$/;"	t	namespace:glm
aligned_mat4x4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_mat4x4		aligned_mat4x4;$/;"	t	namespace:glm
aligned_mediump	.\detail\qualifier.hpp	/^			aligned_mediump, \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and operations are executed with high precision in term of ULPs for higher performance$/;"	e	enum:glm::qualifier
aligned_mediump_bvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, bool, aligned_mediump>	aligned_mediump_bvec1;$/;"	t	namespace:glm
aligned_mediump_bvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, bool, aligned_mediump>	aligned_mediump_bvec2;$/;"	t	namespace:glm
aligned_mediump_bvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, bool, aligned_mediump>	aligned_mediump_bvec3;$/;"	t	namespace:glm
aligned_mediump_bvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, bool, aligned_mediump>	aligned_mediump_bvec4;$/;"	t	namespace:glm
aligned_mediump_dmat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_mediump>	aligned_mediump_dmat2;$/;"	t	namespace:glm
aligned_mediump_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_mediump>	aligned_mediump_dmat2x2;$/;"	t	namespace:glm
aligned_mediump_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_mediump>	aligned_mediump_dmat2x3;$/;"	t	namespace:glm
aligned_mediump_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_mediump>	aligned_mediump_dmat2x4;$/;"	t	namespace:glm
aligned_mediump_dmat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_mediump>	aligned_mediump_dmat3;$/;"	t	namespace:glm
aligned_mediump_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_mediump>	aligned_mediump_dmat3x2;$/;"	t	namespace:glm
aligned_mediump_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_mediump>	aligned_mediump_dmat3x3;$/;"	t	namespace:glm
aligned_mediump_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_mediump>	aligned_mediump_dmat3x4;$/;"	t	namespace:glm
aligned_mediump_dmat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_mediump>	aligned_mediump_dmat4;$/;"	t	namespace:glm
aligned_mediump_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_mediump>	aligned_mediump_dmat4x2;$/;"	t	namespace:glm
aligned_mediump_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_mediump>	aligned_mediump_dmat4x3;$/;"	t	namespace:glm
aligned_mediump_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_mediump>	aligned_mediump_dmat4x4;$/;"	t	namespace:glm
aligned_mediump_dvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, double, aligned_mediump>	aligned_mediump_dvec1;$/;"	t	namespace:glm
aligned_mediump_dvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, double, aligned_mediump>	aligned_mediump_dvec2;$/;"	t	namespace:glm
aligned_mediump_dvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, double, aligned_mediump>	aligned_mediump_dvec3;$/;"	t	namespace:glm
aligned_mediump_dvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, double, aligned_mediump>	aligned_mediump_dvec4;$/;"	t	namespace:glm
aligned_mediump_ivec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, int, aligned_mediump>	aligned_mediump_ivec1;$/;"	t	namespace:glm
aligned_mediump_ivec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, int, aligned_mediump>	aligned_mediump_ivec2;$/;"	t	namespace:glm
aligned_mediump_ivec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, int, aligned_mediump>	aligned_mediump_ivec3;$/;"	t	namespace:glm
aligned_mediump_ivec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, int, aligned_mediump>	aligned_mediump_ivec4;$/;"	t	namespace:glm
aligned_mediump_mat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_mediump>	aligned_mediump_mat2;$/;"	t	namespace:glm
aligned_mediump_mat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_mediump>	aligned_mediump_mat2x2;$/;"	t	namespace:glm
aligned_mediump_mat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_mediump>	aligned_mediump_mat2x3;$/;"	t	namespace:glm
aligned_mediump_mat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_mediump>	aligned_mediump_mat2x4;$/;"	t	namespace:glm
aligned_mediump_mat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_mediump>	aligned_mediump_mat3;$/;"	t	namespace:glm
aligned_mediump_mat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_mediump>	aligned_mediump_mat3x2;$/;"	t	namespace:glm
aligned_mediump_mat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_mediump>	aligned_mediump_mat3x3;$/;"	t	namespace:glm
aligned_mediump_mat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_mediump>	aligned_mediump_mat3x4;$/;"	t	namespace:glm
aligned_mediump_mat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_mediump>	aligned_mediump_mat4;$/;"	t	namespace:glm
aligned_mediump_mat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_mediump>	aligned_mediump_mat4x2;$/;"	t	namespace:glm
aligned_mediump_mat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_mediump>	aligned_mediump_mat4x3;$/;"	t	namespace:glm
aligned_mediump_mat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_mediump>	aligned_mediump_mat4x4;$/;"	t	namespace:glm
aligned_mediump_uvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, uint, aligned_mediump>	aligned_mediump_uvec1;$/;"	t	namespace:glm
aligned_mediump_uvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, uint, aligned_mediump>	aligned_mediump_uvec2;$/;"	t	namespace:glm
aligned_mediump_uvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, uint, aligned_mediump>	aligned_mediump_uvec3;$/;"	t	namespace:glm
aligned_mediump_uvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, uint, aligned_mediump>	aligned_mediump_uvec4;$/;"	t	namespace:glm
aligned_mediump_vec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, float, aligned_mediump>	aligned_mediump_vec1;$/;"	t	namespace:glm
aligned_mediump_vec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, float, aligned_mediump>	aligned_mediump_vec2;$/;"	t	namespace:glm
aligned_mediump_vec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, float, aligned_mediump>	aligned_mediump_vec3;$/;"	t	namespace:glm
aligned_mediump_vec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, float, aligned_mediump>	aligned_mediump_vec4;$/;"	t	namespace:glm
aligned_uvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec1			aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec1			aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec1	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec1		aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec2			aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec2			aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec2		aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec3			aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec3			aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec3		aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec4			aligned_uvec4;$/;"	t	namespace:glm
aligned_uvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec4			aligned_uvec4;$/;"	t	namespace:glm
aligned_uvec4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec4		aligned_uvec4;$/;"	t	namespace:glm
aligned_vec1	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec1			aligned_vec1;$/;"	t	namespace:glm
aligned_vec1	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec1			aligned_vec1;$/;"	t	namespace:glm
aligned_vec1	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec1		aligned_vec1;$/;"	t	namespace:glm
aligned_vec2	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec2			aligned_vec2;$/;"	t	namespace:glm
aligned_vec2	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec2			aligned_vec2;$/;"	t	namespace:glm
aligned_vec2	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec2		aligned_vec2;$/;"	t	namespace:glm
aligned_vec3	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec3			aligned_vec3;$/;"	t	namespace:glm
aligned_vec3	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec3			aligned_vec3;$/;"	t	namespace:glm
aligned_vec3	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec3		aligned_vec3;$/;"	t	namespace:glm
aligned_vec4	.\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec4 			aligned_vec4;$/;"	t	namespace:glm
aligned_vec4	.\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec4			aligned_vec4;$/;"	t	namespace:glm
aligned_vec4	.\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec4		aligned_vec4;$/;"	t	namespace:glm
atan2	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER T atan2(T x, T y){return atan(x, y);}																\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> atan2(const vec<2, T, Q>& x, const vec<2, T, Q>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> atan2(const vec<3, T, Q>& x, const vec<3, T, Q>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> atan2(const vec<4, T, Q>& x, const vec<4, T, Q>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
b	.\detail\type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::vec::__anon11::__anon13
b	.\detail\type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon17
b	.\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon18::__anon20
b	.\detail\type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon24
base_type	.\detail\_swizzle.hpp	/^		typedef _swizzle_base2<N, T, Q, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 || E1 == E3 || E2 == E3)> base_type;$/;"	t	struct:glm::detail::_swizzle
basic_format_saver	.\gtx\io.hpp	/^		class basic_format_saver$/;"	c	namespace:glm::io
basic_state_saver	.\gtx\io.hpp	/^		class basic_state_saver {$/;"	c	namespace:glm::io
begin	.\gtx\range.hpp	/^	inline typename genType::value_type * begin(genType& v)$/;"	f	namespace:glm
begin	.\gtx\range.hpp	/^	inline typename genType::value_type const * begin(genType const& v)$/;"	f	class:glm::genType
bool1	.\gtx\compatibility.hpp	/^	typedef bool						bool1;			\/\/!< \\brief boolean type with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool1x1	.\gtx\compatibility.hpp	/^	typedef bool						bool1x1;		\/\/!< \\brief boolean matrix with 1 x 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2	.\gtx\compatibility.hpp	/^	typedef vec<2, bool, highp>			bool2;			\/\/!< \\brief boolean type with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x2	.\gtx\compatibility.hpp	/^	typedef mat<2, 2, bool, highp>		bool2x2;		\/\/!< \\brief boolean matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x3	.\gtx\compatibility.hpp	/^	typedef mat<2, 3, bool, highp>		bool2x3;		\/\/!< \\brief boolean matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x4	.\gtx\compatibility.hpp	/^	typedef mat<2, 4, bool, highp>		bool2x4;		\/\/!< \\brief boolean matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3	.\gtx\compatibility.hpp	/^	typedef vec<3, bool, highp>			bool3;			\/\/!< \\brief boolean type with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x2	.\gtx\compatibility.hpp	/^	typedef mat<3, 2, bool, highp>		bool3x2;		\/\/!< \\brief boolean matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x3	.\gtx\compatibility.hpp	/^	typedef mat<3, 3, bool, highp>		bool3x3;		\/\/!< \\brief boolean matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x4	.\gtx\compatibility.hpp	/^	typedef mat<3, 4, bool, highp>		bool3x4;		\/\/!< \\brief boolean matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4	.\gtx\compatibility.hpp	/^	typedef vec<4, bool, highp>			bool4;			\/\/!< \\brief boolean type with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x2	.\gtx\compatibility.hpp	/^	typedef mat<4, 2, bool, highp>		bool4x2;		\/\/!< \\brief boolean matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x3	.\gtx\compatibility.hpp	/^	typedef mat<4, 3, bool, highp>		bool4x3;		\/\/!< \\brief boolean matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x4	.\gtx\compatibility.hpp	/^	typedef mat<4, 4, bool, highp>		bool4x4;		\/\/!< \\brief boolean matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool_type	.\detail\type_vec1.hpp	/^		typedef vec<1, bool, Q> bool_type;$/;"	t	struct:glm::vec
bool_type	.\detail\type_vec2.hpp	/^		typedef vec<2, bool, Q> bool_type;$/;"	t	struct:glm::vec
bool_type	.\detail\type_vec3.hpp	/^		typedef vec<3, bool, Q> bool_type;$/;"	t	struct:glm::vec
bool_type	.\detail\type_vec4.hpp	/^		typedef vec<4, bool, Q> bool_type;$/;"	t	struct:glm::vec
bss_	.\gtx\io.hpp	/^			basic_state_saver<CTy> const bss_;$/;"	m	class:glm::io::basic_format_saver
bvec1	.\ext\vector_bool1.hpp	/^	typedef vec<1, bool, defaultp>		bvec1;$/;"	t	namespace:glm
bvec1	.\fwd.hpp	/^	typedef vec<1, bool, defaultp>	bvec1;$/;"	t	namespace:glm
bvec2	.\ext\vector_bool2.hpp	/^	typedef vec<2, bool, defaultp>		bvec2;$/;"	t	namespace:glm
bvec2	.\fwd.hpp	/^	typedef vec<2, bool, defaultp>	bvec2;$/;"	t	namespace:glm
bvec3	.\ext\vector_bool3.hpp	/^	typedef vec<3, bool, defaultp>		bvec3;$/;"	t	namespace:glm
bvec3	.\fwd.hpp	/^	typedef vec<3, bool, defaultp>	bvec3;$/;"	t	namespace:glm
bvec4	.\ext\vector_bool4.hpp	/^	typedef vec<4, bool, defaultp>		bvec4;$/;"	t	namespace:glm
bvec4	.\fwd.hpp	/^	typedef vec<4, bool, defaultp>	bvec4;$/;"	t	namespace:glm
byte	.\gtx\raw_data.hpp	/^	typedef detail::uint8		byte;$/;"	t	namespace:glm
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<1, R, Q> call(R (*Func) (T x), vec<1, T, Q> const& v)$/;"	f	struct:glm::detail::functor1
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<2, R, Q> call(R (*Func) (T x), vec<2, T, Q> const& v)$/;"	f	struct:glm::detail::functor1
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<3, R, Q> call(R (*Func) (T x), vec<3, T, Q> const& v)$/;"	f	struct:glm::detail::functor1
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, R, Q> call(R (*Func) (T x), vec<4, T, Q> const& v)$/;"	f	struct:glm::detail::functor1
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, T, Q> call(T (*Func) (T x, T y), vec<1, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, T, Q> call(T (*Func) (T x, T y), vec<1, T, Q> const& a, vec<1, T, Q> const& b)$/;"	f	struct:glm::detail::functor2
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, int, Q> call(int (*Func) (T x, int y), vec<1, T, Q> const& a, vec<1, int, Q> const& b)$/;"	f	struct:glm::detail::functor2_vec_int
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, T, Q> call(T (*Func) (T x, T y), vec<2, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, T, Q> call(T (*Func) (T x, T y), vec<2, T, Q> const& a, vec<2, T, Q> const& b)$/;"	f	struct:glm::detail::functor2
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, int, Q> call(int (*Func) (T x, int y), vec<2, T, Q> const& a, vec<2, int, Q> const& b)$/;"	f	struct:glm::detail::functor2_vec_int
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(T (*Func) (T x, T y), vec<3, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(T (*Func) (T x, T y), vec<3, T, Q> const& a, vec<3, T, Q> const& b)$/;"	f	struct:glm::detail::functor2
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, int, Q> call(int (*Func) (T x, int y), vec<3, T, Q> const& a, vec<3, int, Q> const& b)$/;"	f	struct:glm::detail::functor2_vec_int
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(T (*Func) (T x, T y), vec<4, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(T (*Func) (T x, T y), vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::functor2
call	.\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(int (*Func) (T x, int y), vec<4, T, Q> const& a, vec<4, int, Q> const& b)$/;"	f	struct:glm::detail::functor2_vec_int
call	.\detail\compute_common.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static float call(float x)$/;"	f	struct:glm::detail::compute_abs
call	.\detail\compute_common.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static genFIType call(genFIType x)$/;"	f	struct:glm::detail::compute_abs
call	.\detail\compute_vector_relational.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(T a, T b)$/;"	f	struct:glm::detail::compute_equal
char_type	.\gtx\io.hpp	/^			typedef CTy char_type;$/;"	t	class:glm::io::format_punct
char_type	.\gtx\io.hpp	/^			typedef typename state_type::char_type char_type;$/;"	t	class:glm::io::basic_state_saver
col_type	.\detail\type_mat2x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat2x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat2x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat3x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat3x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat3x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat4x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat4x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat
col_type	.\detail\type_mat4x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat
cols	.\gtx\type_trait.hpp	/^		static length_t const cols = 0;$/;"	m	struct:glm::type
cols	.\gtx\type_trait.hpp	/^		static length_t const cols = C;$/;"	m	struct:glm::type
column_major	.\gtx\io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
components	.\gtx\range.hpp	/^	inline length_t components(genType const& m)$/;"	f	namespace:glm
components	.\gtx\range.hpp	/^	inline length_t components(vec<1, T, Q> const& v)$/;"	f	namespace:glm
components	.\gtx\range.hpp	/^	inline length_t components(vec<2, T, Q> const& v)$/;"	f	namespace:glm
components	.\gtx\range.hpp	/^	inline length_t components(vec<3, T, Q> const& v)$/;"	f	namespace:glm
components	.\gtx\range.hpp	/^	inline length_t components(vec<4, T, Q> const& v)$/;"	f	namespace:glm
components	.\gtx\type_trait.hpp	/^		static length_t const components = 0;$/;"	m	struct:glm::type
components	.\gtx\type_trait.hpp	/^		static length_t const components = 4;$/;"	m	struct:glm::type
components	.\gtx\type_trait.hpp	/^		static length_t const components = 8;$/;"	m	struct:glm::type
components	.\gtx\type_trait.hpp	/^		static length_t const components = C;$/;"	m	struct:glm::type
components	.\gtx\type_trait.hpp	/^		static length_t const components = L;$/;"	m	struct:glm::type
compute_abs	.\detail\compute_common.hpp	/^	struct compute_abs$/;"	s	namespace:glm::detail
compute_abs	.\detail\compute_common.hpp	/^	struct compute_abs<float, true>$/;"	s	namespace:glm::detail
compute_abs	.\detail\compute_common.hpp	/^	struct compute_abs<genFIType, false>$/;"	s	namespace:glm::detail
compute_abs	.\detail\compute_common.hpp	/^	struct compute_abs<genFIType, true>$/;"	s	namespace:glm::detail
compute_equal	.\detail\compute_vector_relational.hpp	/^	struct compute_equal$/;"	s	namespace:glm::detail
const	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	10;"	d	file:
copy_lane	.\simd\neon.h	/^		static float32x4_t copy_lane(float32x4_t vdst, int dlane, float32x4_t vsrc, int slane) {$/;"	f	namespace:glm::neon
countof	.\detail\setup.hpp	/^		constexpr std::size_t countof(T const (&)[N])$/;"	f	namespace:glm
data	.\detail\qualifier.hpp	/^				T data[L];$/;"	m	struct:glm::detail::storage::type
data	.\detail\qualifier.hpp	/^			T data[L];$/;"	m	struct:glm::detail::storage::type
data	.\detail\type_quat.hpp	/^				typename detail::storage<4, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::qua::__anon1
data	.\detail\type_vec1.hpp	/^				typename detail::storage<1, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon3
data	.\detail\type_vec2.hpp	/^				typename detail::storage<2, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon5
data	.\detail\type_vec3.hpp	/^				typename detail::storage<3, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon11
data	.\detail\type_vec4.hpp	/^				typename detail::storage<4, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon18
ddualquat	.\gtx\dual_quaternion.hpp	/^	typedef highp_ddualquat			ddualquat;$/;"	t	namespace:glm
ddualquat	.\gtx\dual_quaternion.hpp	/^	typedef lowp_ddualquat			ddualquat;$/;"	t	namespace:glm
ddualquat	.\gtx\dual_quaternion.hpp	/^	typedef mediump_ddualquat		ddualquat;$/;"	t	namespace:glm
defaultp	.\detail\qualifier.hpp	/^			defaultp = aligned_highp$/;"	e	enum:glm::qualifier
delim_left	.\gtx\io.hpp	/^			char_type  delim_left;$/;"	m	class:glm::io::format_punct
delim_right	.\gtx\io.hpp	/^			char_type  delim_right;$/;"	m	class:glm::io::format_punct
delimeter	.\gtx\io.hpp	/^		struct delimeter$/;"	s	namespace:glm::io
detail	.\detail\_noise.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\_swizzle.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	.\detail\_swizzle.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\_vectorize.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\compute_common.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\compute_vector_relational.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\qualifier.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\setup.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\type_float.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\detail\type_half.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\ext\scalar_int_sized.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\ext\scalar_uint_sized.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\matrix.hpp	/^namespace detail$/;"	n	namespace:glm
dmat2	.\ext\matrix_double2x2.hpp	/^	typedef mat<2, 2, double, defaultp>		dmat2;$/;"	t	namespace:glm
dmat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	dmat2;$/;"	t	namespace:glm
dmat2x2	.\ext\matrix_double2x2.hpp	/^	typedef mat<2, 2, double, defaultp>		dmat2x2;$/;"	t	namespace:glm
dmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, double, defaultp>	dmat2x2;$/;"	t	namespace:glm
dmat2x3	.\ext\matrix_double2x3.hpp	/^	typedef mat<2, 3, double, defaultp>		dmat2x3;$/;"	t	namespace:glm
dmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, double, defaultp>	dmat2x3;$/;"	t	namespace:glm
dmat2x4	.\ext\matrix_double2x4.hpp	/^	typedef mat<2, 4, double, defaultp>		dmat2x4;$/;"	t	namespace:glm
dmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, double, defaultp>	dmat2x4;$/;"	t	namespace:glm
dmat3	.\ext\matrix_double3x3.hpp	/^	typedef mat<3, 3, double, defaultp>		dmat3;$/;"	t	namespace:glm
dmat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	dmat3;$/;"	t	namespace:glm
dmat3x2	.\ext\matrix_double3x2.hpp	/^	typedef mat<3, 2, double, defaultp>		dmat3x2;$/;"	t	namespace:glm
dmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, double, defaultp>	dmat3x2;$/;"	t	namespace:glm
dmat3x3	.\ext\matrix_double3x3.hpp	/^	typedef mat<3, 3, double, defaultp>		dmat3x3;$/;"	t	namespace:glm
dmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, double, defaultp>	dmat3x3;$/;"	t	namespace:glm
dmat3x4	.\ext\matrix_double3x4.hpp	/^	typedef mat<3, 4, double, defaultp>		dmat3x4;$/;"	t	namespace:glm
dmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, double, defaultp>	dmat3x4;$/;"	t	namespace:glm
dmat4	.\ext\matrix_double4x4.hpp	/^	typedef mat<4, 4, double, defaultp>		dmat4;$/;"	t	namespace:glm
dmat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	dmat4;$/;"	t	namespace:glm
dmat4x2	.\ext\matrix_double4x2.hpp	/^	typedef mat<4, 2, double, defaultp>		dmat4x2;$/;"	t	namespace:glm
dmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, double, defaultp>	dmat4x2;$/;"	t	namespace:glm
dmat4x3	.\ext\matrix_double4x3.hpp	/^	typedef mat<4, 3, double, defaultp>		dmat4x3;$/;"	t	namespace:glm
dmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, double, defaultp>	dmat4x3;$/;"	t	namespace:glm
dmat4x4	.\ext\matrix_double4x4.hpp	/^	typedef mat<4, 4, double, defaultp>		dmat4x4;$/;"	t	namespace:glm
dmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, double, defaultp>	dmat4x4;$/;"	t	namespace:glm
double1	.\gtx\compatibility.hpp	/^	typedef double						double1;		\/\/!< \\brief double-qualifier floating-point vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double1x1	.\gtx\compatibility.hpp	/^	typedef double						double1x1;		\/\/!< \\brief double-qualifier floating-point matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2	.\gtx\compatibility.hpp	/^	typedef vec<2, double, highp>		double2;		\/\/!< \\brief double-qualifier floating-point vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x2	.\gtx\compatibility.hpp	/^	typedef mat<2, 2, double, highp>		double2x2;		\/\/!< \\brief double-qualifier floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x3	.\gtx\compatibility.hpp	/^	typedef mat<2, 3, double, highp>		double2x3;		\/\/!< \\brief double-qualifier floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x4	.\gtx\compatibility.hpp	/^	typedef mat<2, 4, double, highp>		double2x4;		\/\/!< \\brief double-qualifier floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3	.\gtx\compatibility.hpp	/^	typedef vec<3, double, highp>		double3;		\/\/!< \\brief double-qualifier floating-point vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x2	.\gtx\compatibility.hpp	/^	typedef mat<3, 2, double, highp>		double3x2;		\/\/!< \\brief double-qualifier floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x3	.\gtx\compatibility.hpp	/^	typedef mat<3, 3, double, highp>		double3x3;		\/\/!< \\brief double-qualifier floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x4	.\gtx\compatibility.hpp	/^	typedef mat<3, 4, double, highp>		double3x4;		\/\/!< \\brief double-qualifier floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4	.\gtx\compatibility.hpp	/^	typedef vec<4, double, highp>		double4;		\/\/!< \\brief double-qualifier floating-point vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x2	.\gtx\compatibility.hpp	/^	typedef mat<4, 2, double, highp>		double4x2;		\/\/!< \\brief double-qualifier floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x3	.\gtx\compatibility.hpp	/^	typedef mat<4, 3, double, highp>		double4x3;		\/\/!< \\brief double-qualifier floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x4	.\gtx\compatibility.hpp	/^	typedef mat<4, 4, double, highp>		double4x4;		\/\/!< \\brief double-qualifier floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
dquat	.\ext\quaternion_double.hpp	/^	typedef qua<double, defaultp>		dquat;$/;"	t	namespace:glm
dquat	.\fwd.hpp	/^	typedef qua<double, defaultp>		dquat;$/;"	t	namespace:glm
dual	.\gtx\dual_quaternion.hpp	/^		qua<T, Q> real, dual;$/;"	m	struct:glm::tdualquat
dualquat	.\gtx\dual_quaternion.hpp	/^	typedef highp_fdualquat			dualquat;$/;"	t	namespace:glm
dualquat	.\gtx\dual_quaternion.hpp	/^	typedef lowp_fdualquat			dualquat;$/;"	t	namespace:glm
dualquat	.\gtx\dual_quaternion.hpp	/^	typedef mediump_fdualquat		dualquat;$/;"	t	namespace:glm
dup_lane	.\simd\neon.h	/^		static float32x2_t dup_lane(float32x4_t vsrc, int lane) {$/;"	f	namespace:glm::neon
dupq_lane	.\simd\neon.h	/^		static float32x4_t dupq_lane(float32x4_t vsrc, int lane) {$/;"	f	namespace:glm::neon
dvec1	.\ext\vector_double1.hpp	/^	typedef vec<1, double, defaultp>		dvec1;$/;"	t	namespace:glm
dvec1	.\fwd.hpp	/^	typedef vec<1, f64, defaultp>		dvec1;$/;"	t	namespace:glm
dvec2	.\ext\vector_double2.hpp	/^	typedef vec<2, double, defaultp>		dvec2;$/;"	t	namespace:glm
dvec2	.\fwd.hpp	/^	typedef vec<2, f64, defaultp>		dvec2;$/;"	t	namespace:glm
dvec3	.\ext\vector_double3.hpp	/^	typedef vec<3, double, defaultp>		dvec3;$/;"	t	namespace:glm
dvec3	.\fwd.hpp	/^	typedef vec<3, f64, defaultp>		dvec3;$/;"	t	namespace:glm
dvec4	.\ext\vector_double4.hpp	/^	typedef vec<4, double, defaultp>		dvec4;$/;"	t	namespace:glm
dvec4	.\fwd.hpp	/^	typedef vec<4, f64, defaultp>		dvec4;$/;"	t	namespace:glm
dword	.\gtx\raw_data.hpp	/^	typedef detail::uint32		dword;$/;"	t	namespace:glm
elem	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T const& elem(size_t i) const{ return (reinterpret_cast<const T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0
elem	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& elem(size_t i){ return (reinterpret_cast<T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0
end	.\gtx\range.hpp	/^	inline typename genType::value_type * end(genType& v)$/;"	f	namespace:glm
end	.\gtx\range.hpp	/^	inline typename genType::value_type const * end(genType const& v)$/;"	f	class:glm::genType
exponent	.\detail\type_float.hpp	/^		GLM_CONSTEXPR int_type exponent() const { return (i >> 23) & ((1 << 8) - 1); }$/;"	f	union:glm::detail::float_t
exponent	.\detail\type_float.hpp	/^		GLM_CONSTEXPR int_type exponent() const { return (i >> 52) & ((int_type(1) << 11) - 1); }$/;"	f	union:glm::detail::float_t
f	.\detail\type_float.hpp	/^		float_type f;$/;"	m	union:glm::detail::float_t
f32	.\fwd.hpp	/^	typedef float					f32;$/;"	t	namespace:glm
f32	.\gtc\type_precision.hpp	/^	typedef float32 f32;$/;"	t	namespace:glm
f32	.\gtc\type_precision.hpp	/^	typedef highp_float32_t f32;$/;"	t	namespace:glm
f32	.\gtc\type_precision.hpp	/^	typedef lowp_f32 f32;$/;"	t	namespace:glm
f32	.\gtc\type_precision.hpp	/^	typedef mediump_float32 f32;$/;"	t	namespace:glm
f32mat1	.\gtx\number_precision.hpp	/^	typedef f32			f32mat1;	\/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32mat1x1	.\gtx\number_precision.hpp	/^	typedef f32			f32mat1x1;	\/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	f32mat2;$/;"	t	namespace:glm
f32mat2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> f32mat2;$/;"	t	namespace:glm
f32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	f32mat2x2;$/;"	t	namespace:glm
f32mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> f32mat2x2;$/;"	t	namespace:glm
f32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	f32mat2x3;$/;"	t	namespace:glm
f32mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, defaultp> f32mat2x3;$/;"	t	namespace:glm
f32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	f32mat2x4;$/;"	t	namespace:glm
f32mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, defaultp> f32mat2x4;$/;"	t	namespace:glm
f32mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	f32mat3;$/;"	t	namespace:glm
f32mat3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> f32mat3;$/;"	t	namespace:glm
f32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	f32mat3x2;$/;"	t	namespace:glm
f32mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, defaultp> f32mat3x2;$/;"	t	namespace:glm
f32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	f32mat3x3;$/;"	t	namespace:glm
f32mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> f32mat3x3;$/;"	t	namespace:glm
f32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	f32mat3x4;$/;"	t	namespace:glm
f32mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, defaultp> f32mat3x4;$/;"	t	namespace:glm
f32mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	f32mat4;$/;"	t	namespace:glm
f32mat4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> f32mat4;$/;"	t	namespace:glm
f32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	f32mat4x2;$/;"	t	namespace:glm
f32mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, defaultp> f32mat4x2;$/;"	t	namespace:glm
f32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	f32mat4x3;$/;"	t	namespace:glm
f32mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, defaultp> f32mat4x3;$/;"	t	namespace:glm
f32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	f32mat4x4;$/;"	t	namespace:glm
f32mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> f32mat4x4;$/;"	t	namespace:glm
f32quat	.\fwd.hpp	/^	typedef qua<f32, defaultp>			f32quat;$/;"	t	namespace:glm
f32quat	.\gtc\type_precision.hpp	/^	typedef qua<f32, defaultp> f32quat;$/;"	t	namespace:glm
f32vec1	.\fwd.hpp	/^	typedef vec<1, f32, defaultp>		f32vec1;$/;"	t	namespace:glm
f32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, f32, defaultp> f32vec1;$/;"	t	namespace:glm
f32vec1	.\gtx\number_precision.hpp	/^	typedef f32			f32vec1;    \/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32vec2	.\fwd.hpp	/^	typedef vec<2, f32, defaultp>		f32vec2;$/;"	t	namespace:glm
f32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, f32, defaultp> f32vec2;$/;"	t	namespace:glm
f32vec3	.\fwd.hpp	/^	typedef vec<3, f32, defaultp>		f32vec3;$/;"	t	namespace:glm
f32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, f32, defaultp> f32vec3;$/;"	t	namespace:glm
f32vec4	.\fwd.hpp	/^	typedef vec<4, f32, defaultp>		f32vec4;$/;"	t	namespace:glm
f32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, f32, defaultp> f32vec4;$/;"	t	namespace:glm
f64	.\fwd.hpp	/^	typedef double					f64;$/;"	t	namespace:glm
f64	.\gtc\type_precision.hpp	/^		typedef float64 f64;$/;"	t	namespace:glm
f64	.\gtc\type_precision.hpp	/^	typedef highp_float64_t f64;$/;"	t	namespace:glm
f64	.\gtc\type_precision.hpp	/^	typedef lowp_f64 f64;$/;"	t	namespace:glm
f64	.\gtc\type_precision.hpp	/^	typedef mediump_float64 f64;$/;"	t	namespace:glm
f64mat1	.\gtx\number_precision.hpp	/^	typedef f64			f64mat1;	\/\/!< \\brief Double-qualifier floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64mat1x1	.\gtx\number_precision.hpp	/^	typedef f64			f64mat1x1;	\/\/!< \\brief Double-qualifier floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64mat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	f64mat2;$/;"	t	namespace:glm
f64mat2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f64, defaultp> f64mat2;$/;"	t	namespace:glm
f64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	f64mat2x2;$/;"	t	namespace:glm
f64mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f64, defaultp> f64mat2x2;$/;"	t	namespace:glm
f64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f64, defaultp>	f64mat2x3;$/;"	t	namespace:glm
f64mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f64, defaultp> f64mat2x3;$/;"	t	namespace:glm
f64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f64, defaultp>	f64mat2x4;$/;"	t	namespace:glm
f64mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f64, defaultp> f64mat2x4;$/;"	t	namespace:glm
f64mat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	f64mat3;$/;"	t	namespace:glm
f64mat3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f64, defaultp> f64mat3;$/;"	t	namespace:glm
f64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f64, defaultp>	f64mat3x2;$/;"	t	namespace:glm
f64mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f64, defaultp> f64mat3x2;$/;"	t	namespace:glm
f64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	f64mat3x3;$/;"	t	namespace:glm
f64mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f64, defaultp> f64mat3x3;$/;"	t	namespace:glm
f64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f64, defaultp>	f64mat3x4;$/;"	t	namespace:glm
f64mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f64, defaultp> f64mat3x4;$/;"	t	namespace:glm
f64mat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	f64mat4;$/;"	t	namespace:glm
f64mat4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f64, defaultp> f64mat4;$/;"	t	namespace:glm
f64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f64, defaultp>	f64mat4x2;$/;"	t	namespace:glm
f64mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f64, defaultp> f64mat4x2;$/;"	t	namespace:glm
f64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f64, defaultp>	f64mat4x3;$/;"	t	namespace:glm
f64mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f64, defaultp> f64mat4x3;$/;"	t	namespace:glm
f64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	f64mat4x4;$/;"	t	namespace:glm
f64mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f64, defaultp> f64mat4x4;$/;"	t	namespace:glm
f64quat	.\fwd.hpp	/^	typedef qua<f64, defaultp>			f64quat;$/;"	t	namespace:glm
f64quat	.\gtc\type_precision.hpp	/^	typedef qua<f64, defaultp> f64quat;$/;"	t	namespace:glm
f64vec1	.\fwd.hpp	/^	typedef vec<1, f64, defaultp>		f64vec1;$/;"	t	namespace:glm
f64vec1	.\gtc\type_precision.hpp	/^		typedef vec<1, f64, defaultp> f64vec1;$/;"	t	namespace:glm
f64vec1	.\gtx\number_precision.hpp	/^	typedef f64			f64vec1;    \/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64vec2	.\fwd.hpp	/^	typedef vec<2, f64, defaultp>		f64vec2;$/;"	t	namespace:glm
f64vec2	.\gtc\type_precision.hpp	/^		typedef vec<2, f64, defaultp> f64vec2;$/;"	t	namespace:glm
f64vec3	.\fwd.hpp	/^	typedef vec<3, f64, defaultp>		f64vec3;$/;"	t	namespace:glm
f64vec3	.\gtc\type_precision.hpp	/^		typedef vec<3, f64, defaultp> f64vec3;$/;"	t	namespace:glm
f64vec4	.\fwd.hpp	/^	typedef vec<4, f64, defaultp>		f64vec4;$/;"	t	namespace:glm
f64vec4	.\gtc\type_precision.hpp	/^		typedef vec<4, f64, defaultp> f64vec4;$/;"	t	namespace:glm
fade	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> fade(vec<2, T, Q> const& t)$/;"	f	namespace:glm::detail
fade	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> fade(vec<3, T, Q> const& t)$/;"	f	namespace:glm::detail
fade	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> fade(vec<4, T, Q> const& t)$/;"	f	namespace:glm::detail
fdualquat	.\gtx\dual_quaternion.hpp	/^	typedef highp_fdualquat			fdualquat;$/;"	t	namespace:glm
fdualquat	.\gtx\dual_quaternion.hpp	/^	typedef lowp_fdualquat			fdualquat;$/;"	t	namespace:glm
fdualquat	.\gtx\dual_quaternion.hpp	/^	typedef mediump_fdualquat		fdualquat;$/;"	t	namespace:glm
fill_	.\gtx\io.hpp	/^			char_type       fill_;$/;"	m	class:glm::io::basic_state_saver
flags_	.\gtx\io.hpp	/^			flags_type      flags_;$/;"	m	class:glm::io::basic_state_saver
flags_type	.\gtx\io.hpp	/^			typedef ::std::ios_base::fmtflags      flags_type;$/;"	t	class:glm::io::basic_state_saver
float1	.\gtx\compatibility.hpp	/^	typedef float						float1;			\/\/!< \\brief single-qualifier floating-point vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float1x1	.\gtx\compatibility.hpp	/^	typedef float						float1x1;		\/\/!< \\brief single-qualifier floating-point matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2	.\gtx\compatibility.hpp	/^	typedef vec<2, float, highp>		float2;			\/\/!< \\brief single-qualifier floating-point vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x2	.\gtx\compatibility.hpp	/^	typedef mat<2, 2, float, highp>		float2x2;		\/\/!< \\brief single-qualifier floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x3	.\gtx\compatibility.hpp	/^	typedef mat<2, 3, float, highp>		float2x3;		\/\/!< \\brief single-qualifier floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x4	.\gtx\compatibility.hpp	/^	typedef mat<2, 4, float, highp>		float2x4;		\/\/!< \\brief single-qualifier floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3	.\gtx\compatibility.hpp	/^	typedef vec<3, float, highp>		float3;			\/\/!< \\brief single-qualifier floating-point vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float32	.\fwd.hpp	/^	typedef float					float32;$/;"	t	namespace:glm
float32	.\gtc\type_precision.hpp	/^	typedef float float32;$/;"	t	namespace:glm
float32_t	.\fwd.hpp	/^	typedef float					float32_t;$/;"	t	namespace:glm
float32_t	.\gtc\type_precision.hpp	/^	typedef float32 float32_t;$/;"	t	namespace:glm
float32_t	.\gtc\type_precision.hpp	/^	typedef highp_float32_t float32_t;$/;"	t	namespace:glm
float32_t	.\gtc\type_precision.hpp	/^	typedef lowp_float32_t float32_t;$/;"	t	namespace:glm
float32_t	.\gtc\type_precision.hpp	/^	typedef mediump_float32 float32_t;$/;"	t	namespace:glm
float3x2	.\gtx\compatibility.hpp	/^	typedef mat<3, 2, float, highp>		float3x2;		\/\/!< \\brief single-qualifier floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3x3	.\gtx\compatibility.hpp	/^	typedef mat<3, 3, float, highp>		float3x3;		\/\/!< \\brief single-qualifier floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3x4	.\gtx\compatibility.hpp	/^	typedef mat<3, 4, float, highp>		float3x4;		\/\/!< \\brief single-qualifier floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4	.\gtx\compatibility.hpp	/^	typedef vec<4, float, highp>		float4;			\/\/!< \\brief single-qualifier floating-point vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x2	.\gtx\compatibility.hpp	/^	typedef mat<4, 2, float, highp>		float4x2;		\/\/!< \\brief single-qualifier floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x3	.\gtx\compatibility.hpp	/^	typedef mat<4, 3, float, highp>		float4x3;		\/\/!< \\brief single-qualifier floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x4	.\gtx\compatibility.hpp	/^	typedef mat<4, 4, float, highp>		float4x4;		\/\/!< \\brief single-qualifier floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float64	.\fwd.hpp	/^	typedef double					float64;$/;"	t	namespace:glm
float64	.\gtc\type_precision.hpp	/^	typedef double float64;$/;"	t	namespace:glm
float64_t	.\fwd.hpp	/^	typedef double					float64_t;$/;"	t	namespace:glm
float64_t	.\gtc\type_precision.hpp	/^		typedef float64 float64_t;$/;"	t	namespace:glm
float64_t	.\gtc\type_precision.hpp	/^	typedef highp_float64_t float64_t;$/;"	t	namespace:glm
float64_t	.\gtc\type_precision.hpp	/^	typedef lowp_float64_t float64_t;$/;"	t	namespace:glm
float64_t	.\gtc\type_precision.hpp	/^	typedef mediump_float64 float64_t;$/;"	t	namespace:glm
float_t	.\detail\type_float.hpp	/^		GLM_CONSTEXPR float_t(float_type Num = 0.0f) : f(Num) {}$/;"	f	union:glm::detail::float_t
float_t	.\detail\type_float.hpp	/^		GLM_CONSTEXPR float_t(float_type Num = static_cast<float_type>(0)) : f(Num) {}$/;"	f	union:glm::detail::float_t
float_t	.\detail\type_float.hpp	/^	union float_t$/;"	u	namespace:glm::detail
float_t	.\detail\type_float.hpp	/^	union float_t<double>$/;"	u	namespace:glm::detail
float_t	.\detail\type_float.hpp	/^	union float_t<float>$/;"	u	namespace:glm::detail
float_type	.\detail\type_float.hpp	/^		typedef double float_type;$/;"	t	union:glm::detail::float_t
float_type	.\detail\type_float.hpp	/^		typedef float float_type;$/;"	t	union:glm::detail::float_t
fmat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	fmat2;$/;"	t	namespace:glm
fmat2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> fmat2;$/;"	t	namespace:glm
fmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	fmat2x2;$/;"	t	namespace:glm
fmat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> fmat2x2;$/;"	t	namespace:glm
fmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	fmat2x3;$/;"	t	namespace:glm
fmat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, defaultp> fmat2x3;$/;"	t	namespace:glm
fmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	fmat2x4;$/;"	t	namespace:glm
fmat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, defaultp> fmat2x4;$/;"	t	namespace:glm
fmat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	fmat3;$/;"	t	namespace:glm
fmat3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> fmat3;$/;"	t	namespace:glm
fmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	fmat3x2;$/;"	t	namespace:glm
fmat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, defaultp> fmat3x2;$/;"	t	namespace:glm
fmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	fmat3x3;$/;"	t	namespace:glm
fmat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> fmat3x3;$/;"	t	namespace:glm
fmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	fmat3x4;$/;"	t	namespace:glm
fmat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, defaultp> fmat3x4;$/;"	t	namespace:glm
fmat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	fmat4;$/;"	t	namespace:glm
fmat4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> fmat4;$/;"	t	namespace:glm
fmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	fmat4x2;$/;"	t	namespace:glm
fmat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, defaultp> fmat4x2;$/;"	t	namespace:glm
fmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	fmat4x3;$/;"	t	namespace:glm
fmat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, defaultp> fmat4x3;$/;"	t	namespace:glm
fmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	fmat4x4;$/;"	t	namespace:glm
fmat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> fmat4x4;$/;"	t	namespace:glm
format_punct	.\gtx\io.hpp	/^		class format_punct : public std::locale::facet$/;"	c	namespace:glm::io
format_saver	.\gtx\io.hpp	/^		typedef basic_format_saver<char>     format_saver;$/;"	t	namespace:glm::io
formatted	.\gtx\io.hpp	/^			bool       formatted;$/;"	m	class:glm::io::format_punct
fquat	.\fwd.hpp	/^	typedef qua<float, defaultp>		fquat;$/;"	t	namespace:glm
functor1	.\detail\_vectorize.hpp	/^	struct functor1<vec, 1, R, T, Q>$/;"	s	namespace:glm::detail
functor1	.\detail\_vectorize.hpp	/^	struct functor1<vec, 2, R, T, Q>$/;"	s	namespace:glm::detail
functor1	.\detail\_vectorize.hpp	/^	struct functor1<vec, 3, R, T, Q>$/;"	s	namespace:glm::detail
functor1	.\detail\_vectorize.hpp	/^	struct functor1<vec, 4, R, T, Q>$/;"	s	namespace:glm::detail
functor1	.\detail\_vectorize.hpp	/^	struct functor1{};$/;"	s	namespace:glm::detail
functor2	.\detail\_vectorize.hpp	/^	struct functor2<vec, 1, T, Q>$/;"	s	namespace:glm::detail
functor2	.\detail\_vectorize.hpp	/^	struct functor2<vec, 2, T, Q>$/;"	s	namespace:glm::detail
functor2	.\detail\_vectorize.hpp	/^	struct functor2<vec, 3, T, Q>$/;"	s	namespace:glm::detail
functor2	.\detail\_vectorize.hpp	/^	struct functor2<vec, 4, T, Q>$/;"	s	namespace:glm::detail
functor2	.\detail\_vectorize.hpp	/^	struct functor2{};$/;"	s	namespace:glm::detail
functor2_vec_int	.\detail\_vectorize.hpp	/^	struct functor2_vec_int {};$/;"	s	namespace:glm::detail
functor2_vec_int	.\detail\_vectorize.hpp	/^	struct functor2_vec_int<1, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_int	.\detail\_vectorize.hpp	/^	struct functor2_vec_int<2, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_int	.\detail\_vectorize.hpp	/^	struct functor2_vec_int<3, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_int	.\detail\_vectorize.hpp	/^	struct functor2_vec_int<4, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\detail\_vectorize.hpp	/^	struct functor2_vec_sca<vec, 1, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\detail\_vectorize.hpp	/^	struct functor2_vec_sca<vec, 2, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\detail\_vectorize.hpp	/^	struct functor2_vec_sca<vec, 3, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\detail\_vectorize.hpp	/^	struct functor2_vec_sca<vec, 4, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\detail\_vectorize.hpp	/^	struct functor2_vec_sca{};$/;"	s	namespace:glm::detail
fvec1	.\fwd.hpp	/^	typedef vec<1, f32, defaultp>		fvec1;$/;"	t	namespace:glm
fvec1	.\gtc\type_precision.hpp	/^	typedef vec<1, float, defaultp> fvec1;$/;"	t	namespace:glm
fvec2	.\fwd.hpp	/^	typedef vec<2, f32, defaultp>		fvec2;$/;"	t	namespace:glm
fvec2	.\gtc\type_precision.hpp	/^	typedef vec<2, float, defaultp> fvec2;$/;"	t	namespace:glm
fvec3	.\fwd.hpp	/^	typedef vec<3, f32, defaultp>		fvec3;$/;"	t	namespace:glm
fvec3	.\gtc\type_precision.hpp	/^	typedef vec<3, float, defaultp> fvec3;$/;"	t	namespace:glm
fvec4	.\fwd.hpp	/^	typedef vec<4, f32, defaultp>		fvec4;$/;"	t	namespace:glm
fvec4	.\gtc\type_precision.hpp	/^	typedef vec<4, float, defaultp> fvec4;$/;"	t	namespace:glm
g	.\detail\type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::vec::__anon5::__anon7
g	.\detail\type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::vec::__anon10
g	.\detail\type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::vec::__anon11::__anon13
g	.\detail\type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon16
g	.\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon18::__anon20
g	.\detail\type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon23
genTypeEnum	.\detail\qualifier.hpp	/^	enum genTypeEnum$/;"	g	namespace:glm::detail
genTypeTrait	.\detail\qualifier.hpp	/^	struct genTypeTrait$/;"	s	namespace:glm::detail
genTypeTrait	.\detail\qualifier.hpp	/^	struct genTypeTrait<mat<C, R, T> >$/;"	s	namespace:glm::detail
glm	.\common.hpp	/^namespace glm$/;"	n
glm	.\detail\_noise.hpp	/^namespace glm{$/;"	n
glm	.\detail\_swizzle.hpp	/^namespace glm$/;"	n
glm	.\detail\_swizzle.hpp	/^namespace glm{$/;"	n
glm	.\detail\_vectorize.hpp	/^namespace glm{$/;"	n
glm	.\detail\compute_common.hpp	/^namespace glm{$/;"	n
glm	.\detail\compute_vector_relational.hpp	/^namespace glm{$/;"	n
glm	.\detail\glm.cpp	/^namespace glm$/;"	n	file:
glm	.\detail\qualifier.hpp	/^namespace glm$/;"	n
glm	.\detail\setup.hpp	/^	namespace glm$/;"	n
glm	.\detail\setup.hpp	/^namespace glm {$/;"	n
glm	.\detail\setup.hpp	/^namespace glm$/;"	n
glm	.\detail\setup.hpp	/^namespace glm{$/;"	n
glm	.\detail\type_float.hpp	/^namespace glm{$/;"	n
glm	.\detail\type_half.hpp	/^namespace glm{$/;"	n
glm	.\detail\type_mat2x2.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat2x3.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat2x4.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat3x2.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat3x3.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat3x4.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat4x2.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat4x3.hpp	/^namespace glm$/;"	n
glm	.\detail\type_mat4x4.hpp	/^namespace glm$/;"	n
glm	.\detail\type_quat.hpp	/^namespace glm$/;"	n
glm	.\detail\type_vec1.hpp	/^namespace glm$/;"	n
glm	.\detail\type_vec2.hpp	/^namespace glm$/;"	n
glm	.\detail\type_vec3.hpp	/^namespace glm$/;"	n
glm	.\detail\type_vec4.hpp	/^namespace glm$/;"	n
glm	.\exponential.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_clip_space.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_common.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double2x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double2x2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double2x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double2x3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double2x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double2x4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double3x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double3x2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double3x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double3x3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double3x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double3x4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double4x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double4x2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double4x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double4x3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double4x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_double4x4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float2x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float2x2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float2x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float2x3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float2x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float2x4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float3x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float3x2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float3x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float3x3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float3x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float3x4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float4x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float4x2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float4x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float4x3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float4x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_float4x4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int2x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int2x2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int2x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int2x3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int2x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int2x4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int3x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int3x2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int3x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int3x3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int3x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int3x4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int4x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int4x2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int4x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int4x3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int4x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_int4x4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_projection.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_relational.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_transform.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint2x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint2x2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint2x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint2x3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint2x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint2x4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint3x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint3x2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint3x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint3x3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint3x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint3x4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint4x2.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint4x2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint4x3.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint4x3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint4x4.hpp	/^namespace glm$/;"	n
glm	.\ext\matrix_uint4x4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_common.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_double.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_double_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_exponential.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_float.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_float_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_geometric.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_relational.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_transform.hpp	/^namespace glm$/;"	n
glm	.\ext\quaternion_trigonometric.hpp	/^namespace glm$/;"	n
glm	.\ext\scalar_common.hpp	/^namespace glm$/;"	n
glm	.\ext\scalar_constants.hpp	/^namespace glm$/;"	n
glm	.\ext\scalar_int_sized.hpp	/^namespace glm{$/;"	n
glm	.\ext\scalar_integer.hpp	/^namespace glm$/;"	n
glm	.\ext\scalar_packing.hpp	/^namespace glm$/;"	n
glm	.\ext\scalar_relational.hpp	/^namespace glm$/;"	n
glm	.\ext\scalar_uint_sized.hpp	/^namespace glm{$/;"	n
glm	.\ext\scalar_ulp.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool1.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool1_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool2.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool3.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool4.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_bool4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_common.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double1.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double1_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double2.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double3.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double4.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_double4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float1.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float1_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float2.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float2_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float3.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float3_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float4.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_float4_precision.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int1.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int1_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int2.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int3.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int4.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_int4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_integer.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_packing.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_relational.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint1.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint1_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint2.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint2_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint3.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint3_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint4.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_uint4_sized.hpp	/^namespace glm$/;"	n
glm	.\ext\vector_ulp.hpp	/^namespace glm$/;"	n
glm	.\fwd.hpp	/^namespace glm$/;"	n
glm	.\geometric.hpp	/^namespace glm$/;"	n
glm	.\gtc\bitfield.hpp	/^namespace glm$/;"	n
glm	.\gtc\color_space.hpp	/^namespace glm$/;"	n
glm	.\gtc\constants.hpp	/^namespace glm$/;"	n
glm	.\gtc\epsilon.hpp	/^namespace glm$/;"	n
glm	.\gtc\integer.hpp	/^namespace glm$/;"	n
glm	.\gtc\matrix_access.hpp	/^namespace glm$/;"	n
glm	.\gtc\matrix_integer.hpp	/^namespace glm$/;"	n
glm	.\gtc\matrix_inverse.hpp	/^namespace glm$/;"	n
glm	.\gtc\noise.hpp	/^namespace glm$/;"	n
glm	.\gtc\packing.hpp	/^namespace glm$/;"	n
glm	.\gtc\quaternion.hpp	/^namespace glm$/;"	n
glm	.\gtc\random.hpp	/^namespace glm$/;"	n
glm	.\gtc\reciprocal.hpp	/^namespace glm$/;"	n
glm	.\gtc\round.hpp	/^namespace glm$/;"	n
glm	.\gtc\type_aligned.hpp	/^namespace glm$/;"	n
glm	.\gtc\type_precision.hpp	/^namespace glm$/;"	n
glm	.\gtc\type_ptr.hpp	/^namespace glm$/;"	n
glm	.\gtc\ulp.hpp	/^namespace glm$/;"	n
glm	.\gtx\associated_min_max.hpp	/^namespace glm$/;"	n
glm	.\gtx\bit.hpp	/^namespace glm$/;"	n
glm	.\gtx\closest_point.hpp	/^namespace glm$/;"	n
glm	.\gtx\color_encoding.hpp	/^namespace glm$/;"	n
glm	.\gtx\color_space.hpp	/^namespace glm$/;"	n
glm	.\gtx\color_space_YCoCg.hpp	/^namespace glm$/;"	n
glm	.\gtx\common.hpp	/^namespace glm$/;"	n
glm	.\gtx\compatibility.hpp	/^namespace glm$/;"	n
glm	.\gtx\component_wise.hpp	/^namespace glm$/;"	n
glm	.\gtx\dual_quaternion.hpp	/^namespace glm$/;"	n
glm	.\gtx\easing.hpp	/^namespace glm{$/;"	n
glm	.\gtx\euler_angles.hpp	/^namespace glm$/;"	n
glm	.\gtx\extend.hpp	/^namespace glm$/;"	n
glm	.\gtx\extended_min_max.hpp	/^namespace glm$/;"	n
glm	.\gtx\exterior_product.hpp	/^namespace glm$/;"	n
glm	.\gtx\fast_exponential.hpp	/^namespace glm$/;"	n
glm	.\gtx\fast_square_root.hpp	/^namespace glm$/;"	n
glm	.\gtx\fast_trigonometry.hpp	/^namespace glm$/;"	n
glm	.\gtx\functions.hpp	/^namespace glm$/;"	n
glm	.\gtx\gradient_paint.hpp	/^namespace glm$/;"	n
glm	.\gtx\handed_coordinate_space.hpp	/^namespace glm$/;"	n
glm	.\gtx\integer.hpp	/^namespace glm$/;"	n
glm	.\gtx\intersect.hpp	/^namespace glm$/;"	n
glm	.\gtx\io.hpp	/^namespace glm$/;"	n
glm	.\gtx\log_base.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_cross_product.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_decompose.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_factorisation.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_interpolation.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_major_storage.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_operation.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_query.hpp	/^namespace glm$/;"	n
glm	.\gtx\matrix_transform_2d.hpp	/^namespace glm$/;"	n
glm	.\gtx\mixed_product.hpp	/^namespace glm$/;"	n
glm	.\gtx\norm.hpp	/^namespace glm$/;"	n
glm	.\gtx\normal.hpp	/^namespace glm$/;"	n
glm	.\gtx\normalize_dot.hpp	/^namespace glm$/;"	n
glm	.\gtx\number_precision.hpp	/^namespace glm{$/;"	n
glm	.\gtx\optimum_pow.hpp	/^namespace glm{$/;"	n
glm	.\gtx\orthonormalize.hpp	/^namespace glm$/;"	n
glm	.\gtx\perpendicular.hpp	/^namespace glm$/;"	n
glm	.\gtx\polar_coordinates.hpp	/^namespace glm$/;"	n
glm	.\gtx\projection.hpp	/^namespace glm$/;"	n
glm	.\gtx\quaternion.hpp	/^namespace glm$/;"	n
glm	.\gtx\range.hpp	/^namespace glm$/;"	n
glm	.\gtx\raw_data.hpp	/^namespace glm$/;"	n
glm	.\gtx\rotate_normalized_axis.hpp	/^namespace glm$/;"	n
glm	.\gtx\rotate_vector.hpp	/^namespace glm$/;"	n
glm	.\gtx\scalar_multiplication.hpp	/^namespace glm$/;"	n
glm	.\gtx\scalar_relational.hpp	/^namespace glm$/;"	n
glm	.\gtx\spline.hpp	/^namespace glm$/;"	n
glm	.\gtx\std_based_type.hpp	/^namespace glm$/;"	n
glm	.\gtx\string_cast.hpp	/^namespace glm$/;"	n
glm	.\gtx\texture.hpp	/^namespace glm$/;"	n
glm	.\gtx\transform.hpp	/^namespace glm$/;"	n
glm	.\gtx\transform2.hpp	/^namespace glm$/;"	n
glm	.\gtx\type_aligned.hpp	/^namespace glm$/;"	n
glm	.\gtx\type_trait.hpp	/^namespace glm$/;"	n
glm	.\gtx\vec_swizzle.hpp	/^namespace glm {$/;"	n
glm	.\gtx\vector_angle.hpp	/^namespace glm$/;"	n
glm	.\gtx\vector_query.hpp	/^namespace glm$/;"	n
glm	.\gtx\wrap.hpp	/^namespace glm$/;"	n
glm	.\integer.hpp	/^namespace glm$/;"	n
glm	.\matrix.hpp	/^namespace glm {$/;"	n
glm	.\packing.hpp	/^namespace glm$/;"	n
glm	.\simd\neon.h	/^namespace glm {$/;"	n
glm	.\trigonometric.hpp	/^namespace glm$/;"	n
glm	.\vector_relational.hpp	/^namespace glm$/;"	n
glm_dvec2	.\simd\platform.h	/^	typedef glm_f64vec2		glm_dvec2;$/;"	t
glm_dvec4	.\simd\platform.h	/^	typedef glm_f64vec4		glm_dvec4;$/;"	t
glm_f32vec4	.\simd\platform.h	/^	typedef __m128			glm_f32vec4;$/;"	t
glm_f32vec4	.\simd\platform.h	/^	typedef float32x4_t			glm_f32vec4;$/;"	t
glm_f64vec2	.\simd\platform.h	/^	typedef __m128d			glm_f64vec2;$/;"	t
glm_f64vec4	.\simd\platform.h	/^	typedef __m256d			glm_f64vec4;$/;"	t
glm_i128_interleave	.\simd\integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave(glm_uvec4 x)$/;"	f
glm_i128_interleave2	.\simd\integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave2(glm_uvec4 x, glm_uvec4 y)$/;"	f
glm_i32vec4	.\simd\platform.h	/^	typedef __m128i			glm_i32vec4;$/;"	t
glm_i32vec4	.\simd\platform.h	/^	typedef int32x4_t			glm_i32vec4;$/;"	t
glm_i64vec2	.\simd\platform.h	/^	typedef __m128i			glm_i64vec2;$/;"	t
glm_i64vec4	.\simd\platform.h	/^	typedef __m256i			glm_i64vec4;$/;"	t
glm_ivec4	.\simd\platform.h	/^	typedef glm_i32vec4		glm_ivec4;$/;"	t
glm_ivec4_abs	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_ivec4 glm_ivec4_abs(glm_ivec4 x)$/;"	f
glm_mat4_add	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_add(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_determinant	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant(glm_vec4 const m[4])$/;"	f
glm_mat4_determinant_highp	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_highp(glm_vec4 const in[4])$/;"	f
glm_mat4_determinant_lowp	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_lowp(glm_vec4 const m[4])$/;"	f
glm_mat4_inverse	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_mat4_inverse_lowp	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse_lowp(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_mat4_matrixCompMult	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_matrixCompMult(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_mul	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_mul(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_mul_vec4	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_mul_vec4(glm_vec4 const m[4], glm_vec4 v)$/;"	f
glm_mat4_outerProduct	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_outerProduct(__m128 const& c, __m128 const& r, __m128 out[4])$/;"	f
glm_mat4_sub	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_sub(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_transpose	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_transpose(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_u32vec4	.\simd\platform.h	/^	typedef __m128i			glm_u32vec4;$/;"	t
glm_u32vec4	.\simd\platform.h	/^	typedef uint32x4_t			glm_u32vec4;$/;"	t
glm_u64vec2	.\simd\platform.h	/^	typedef __m128i			glm_u64vec2;$/;"	t
glm_u64vec4	.\simd\platform.h	/^	typedef __m256i			glm_u64vec4;$/;"	t
glm_uvec4	.\simd\platform.h	/^	typedef glm_u32vec4		glm_uvec4;$/;"	t
glm_vec1_add	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_add(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec1_div	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_div(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec1_dot	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec1_fma	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_fma(glm_f32vec4 a, glm_f32vec4 b, glm_f32vec4 c)$/;"	f
glm_vec1_mul	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_mul(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec1_sqrt_lowp	.\simd\exponential.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_sqrt_lowp(glm_f32vec4 x)$/;"	f
glm_vec1_sub	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_sub(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec4	.\simd\platform.h	/^	typedef glm_f32vec4		glm_vec4;$/;"	t
glm_vec4_abs	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_abs(glm_f32vec4 x)$/;"	f
glm_vec4_add	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_add(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec4_ceil	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_ceil(glm_vec4 x)$/;"	f
glm_vec4_clamp	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_clamp(glm_vec4 v, glm_vec4 minVal, glm_vec4 maxVal)$/;"	f
glm_vec4_cross	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_cross(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec4_distance	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_distance(glm_vec4 p0, glm_vec4 p1)$/;"	f
glm_vec4_div	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_div(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec4_div_lowp	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_div_lowp(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec4_dot	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec4_faceforward	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_faceforward(glm_vec4 N, glm_vec4 I, glm_vec4 Nref)$/;"	f
glm_vec4_floor	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_floor(glm_vec4 x)$/;"	f
glm_vec4_fma	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_fma(glm_f32vec4 a, glm_f32vec4 b, glm_f32vec4 c)$/;"	f
glm_vec4_fract	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_fract(glm_vec4 x)$/;"	f
glm_vec4_inf	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_inf(glm_vec4 x)$/;"	f
glm_vec4_length	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_length(glm_vec4 x)$/;"	f
glm_vec4_mix	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mix(glm_vec4 v1, glm_vec4 v2, glm_vec4 a)$/;"	f
glm_vec4_mod	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mod(glm_vec4 x, glm_vec4 y)$/;"	f
glm_vec4_mul	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_mul(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec4_mul_mat4	.\simd\matrix.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_mul_mat4(glm_vec4 v, glm_vec4 const m[4])$/;"	f
glm_vec4_nan	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_nan(glm_vec4 x)$/;"	f
glm_vec4_normalize	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_normalize(glm_vec4 v)$/;"	f
glm_vec4_reflect	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_reflect(glm_vec4 I, glm_vec4 N)$/;"	f
glm_vec4_refract	.\simd\geometric.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_refract(glm_vec4 I, glm_vec4 N, glm_vec4 eta)$/;"	f
glm_vec4_round	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_round(glm_vec4 x)$/;"	f
glm_vec4_roundEven	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_roundEven(glm_vec4 x)$/;"	f
glm_vec4_sign	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sign(glm_vec4 x)$/;"	f
glm_vec4_smoothstep	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_smoothstep(glm_vec4 edge0, glm_vec4 edge1, glm_vec4 x)$/;"	f
glm_vec4_sqrt_lowp	.\simd\exponential.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_sqrt_lowp(glm_f32vec4 x)$/;"	f
glm_vec4_step	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_step(glm_vec4 edge, glm_vec4 x)$/;"	f
glm_vec4_sub	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_sub(glm_f32vec4 a, glm_f32vec4 b)$/;"	f
glm_vec4_swizzle_xyzw	.\simd\common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_swizzle_xyzw(glm_f32vec4 a)$/;"	f
gtx	.\gtx\number_precision.hpp	/^namespace gtx$/;"	n	namespace:glm
gtx	.\gtx\optimum_pow.hpp	/^namespace gtx$/;"	n	namespace:glm
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<2, 2, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<2, 3, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<2, 4, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<3, 2, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<3, 3, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<3, 4, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<4, 2, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<4, 3, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::mat<4, 4, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::qua<T,Q>>$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::tdualquat<T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::vec<1, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::vec<2, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::vec<3, T,Q> >$/;"	s	namespace:std
hash	.\gtx\hash.hpp	/^	struct hash<glm::vec<4, T,Q> >$/;"	s	namespace:std
hdata	.\detail\type_half.hpp	/^	typedef short hdata;$/;"	t	namespace:glm::detail
highp	.\detail\qualifier.hpp	/^		highp = packed_highp, \/\/\/< By default highp qualifier is also packed$/;"	e	enum:glm::qualifier
highp_bvec1	.\ext\vector_bool1_precision.hpp	/^	typedef vec<1, bool, highp>			highp_bvec1;$/;"	t	namespace:glm
highp_bvec1	.\fwd.hpp	/^	typedef vec<1, bool, highp>		highp_bvec1;$/;"	t	namespace:glm
highp_bvec2	.\ext\vector_bool2_precision.hpp	/^	typedef vec<2, bool, highp>		highp_bvec2;$/;"	t	namespace:glm
highp_bvec2	.\fwd.hpp	/^	typedef vec<2, bool, highp>		highp_bvec2;$/;"	t	namespace:glm
highp_bvec3	.\ext\vector_bool3_precision.hpp	/^	typedef vec<3, bool, highp>		highp_bvec3;$/;"	t	namespace:glm
highp_bvec3	.\fwd.hpp	/^	typedef vec<3, bool, highp>		highp_bvec3;$/;"	t	namespace:glm
highp_bvec4	.\ext\vector_bool4_precision.hpp	/^	typedef vec<4, bool, highp>		highp_bvec4;$/;"	t	namespace:glm
highp_bvec4	.\fwd.hpp	/^	typedef vec<4, bool, highp>		highp_bvec4;$/;"	t	namespace:glm
highp_ddualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<double, highp>	highp_ddualquat;$/;"	t	namespace:glm
highp_dmat2	.\ext\matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2;$/;"	t	namespace:glm
highp_dmat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_dmat2;$/;"	t	namespace:glm
highp_dmat2x2	.\ext\matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2x2;$/;"	t	namespace:glm
highp_dmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2x2;$/;"	t	namespace:glm
highp_dmat2x3	.\ext\matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, highp>	highp_dmat2x3;$/;"	t	namespace:glm
highp_dmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, double, highp>	highp_dmat2x3;$/;"	t	namespace:glm
highp_dmat2x4	.\ext\matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, highp>	highp_dmat2x4;$/;"	t	namespace:glm
highp_dmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, double, highp>	highp_dmat2x4;$/;"	t	namespace:glm
highp_dmat3	.\ext\matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3;$/;"	t	namespace:glm
highp_dmat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_dmat3;$/;"	t	namespace:glm
highp_dmat3x2	.\ext\matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, highp>	highp_dmat3x2;$/;"	t	namespace:glm
highp_dmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, double, highp>	highp_dmat3x2;$/;"	t	namespace:glm
highp_dmat3x3	.\ext\matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3x3;$/;"	t	namespace:glm
highp_dmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3x3;$/;"	t	namespace:glm
highp_dmat3x4	.\ext\matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, highp>	highp_dmat3x4;$/;"	t	namespace:glm
highp_dmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, double, highp>	highp_dmat3x4;$/;"	t	namespace:glm
highp_dmat4	.\ext\matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4;$/;"	t	namespace:glm
highp_dmat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_dmat4;$/;"	t	namespace:glm
highp_dmat4x2	.\ext\matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, highp>	highp_dmat4x2;$/;"	t	namespace:glm
highp_dmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, double, highp>	highp_dmat4x2;$/;"	t	namespace:glm
highp_dmat4x3	.\ext\matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, highp>	highp_dmat4x3;$/;"	t	namespace:glm
highp_dmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, double, highp>	highp_dmat4x3;$/;"	t	namespace:glm
highp_dmat4x4	.\ext\matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4x4;$/;"	t	namespace:glm
highp_dmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4x4;$/;"	t	namespace:glm
highp_dquat	.\ext\quaternion_double_precision.hpp	/^	typedef qua<double, highp>		highp_dquat;$/;"	t	namespace:glm
highp_dquat	.\fwd.hpp	/^	typedef qua<double, highp>			highp_dquat;$/;"	t	namespace:glm
highp_dualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_dualquat;$/;"	t	namespace:glm
highp_dvec1	.\ext\vector_double1_precision.hpp	/^	typedef vec<1, double, highp>		highp_dvec1;$/;"	t	namespace:glm
highp_dvec1	.\fwd.hpp	/^	typedef vec<1, f64, highp>			highp_dvec1;$/;"	t	namespace:glm
highp_dvec2	.\ext\vector_double2_precision.hpp	/^	typedef vec<2, double, highp>		highp_dvec2;$/;"	t	namespace:glm
highp_dvec2	.\fwd.hpp	/^	typedef vec<2, f64, highp>			highp_dvec2;$/;"	t	namespace:glm
highp_dvec3	.\ext\vector_double3_precision.hpp	/^	typedef vec<3, double, highp>		highp_dvec3;$/;"	t	namespace:glm
highp_dvec3	.\fwd.hpp	/^	typedef vec<3, f64, highp>			highp_dvec3;$/;"	t	namespace:glm
highp_dvec4	.\ext\vector_double4_precision.hpp	/^	typedef vec<4, double, highp>		highp_dvec4;$/;"	t	namespace:glm
highp_dvec4	.\fwd.hpp	/^	typedef vec<4, f64, highp>			highp_dvec4;$/;"	t	namespace:glm
highp_f32	.\fwd.hpp	/^	typedef float					highp_f32;$/;"	t	namespace:glm
highp_f32	.\gtc\type_precision.hpp	/^	typedef float32 highp_f32;$/;"	t	namespace:glm
highp_f32mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_f32mat2;$/;"	t	namespace:glm
highp_f32mat2	.\gtc\type_precision.hpp	/^	typedef highp_f32mat2x2 highp_f32mat2;$/;"	t	namespace:glm
highp_f32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_f32mat2x2;$/;"	t	namespace:glm
highp_f32mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, highp> highp_f32mat2x2;$/;"	t	namespace:glm
highp_f32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_f32mat2x3;$/;"	t	namespace:glm
highp_f32mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, highp> highp_f32mat2x3;$/;"	t	namespace:glm
highp_f32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_f32mat2x4;$/;"	t	namespace:glm
highp_f32mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, highp> highp_f32mat2x4;$/;"	t	namespace:glm
highp_f32mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_f32mat3;$/;"	t	namespace:glm
highp_f32mat3	.\gtc\type_precision.hpp	/^	typedef highp_f32mat3x3 highp_f32mat3;$/;"	t	namespace:glm
highp_f32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_f32mat3x2;$/;"	t	namespace:glm
highp_f32mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, highp> highp_f32mat3x2;$/;"	t	namespace:glm
highp_f32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_f32mat3x3;$/;"	t	namespace:glm
highp_f32mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, highp> highp_f32mat3x3;$/;"	t	namespace:glm
highp_f32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_f32mat3x4;$/;"	t	namespace:glm
highp_f32mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, highp> highp_f32mat3x4;$/;"	t	namespace:glm
highp_f32mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_f32mat4;$/;"	t	namespace:glm
highp_f32mat4	.\gtc\type_precision.hpp	/^	typedef highp_f32mat4x4 highp_f32mat4;$/;"	t	namespace:glm
highp_f32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_f32mat4x2;$/;"	t	namespace:glm
highp_f32mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, highp> highp_f32mat4x2;$/;"	t	namespace:glm
highp_f32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_f32mat4x3;$/;"	t	namespace:glm
highp_f32mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, highp> highp_f32mat4x3;$/;"	t	namespace:glm
highp_f32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_f32mat4x4;$/;"	t	namespace:glm
highp_f32mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, highp> highp_f32mat4x4;$/;"	t	namespace:glm
highp_f32quat	.\fwd.hpp	/^	typedef qua<f32, highp>				highp_f32quat;$/;"	t	namespace:glm
highp_f32quat	.\gtc\type_precision.hpp	/^	typedef qua<f32, highp> highp_f32quat;$/;"	t	namespace:glm
highp_f32vec1	.\fwd.hpp	/^	typedef vec<1, f32, highp>			highp_f32vec1;$/;"	t	namespace:glm
highp_f32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, f32, highp> highp_f32vec1;$/;"	t	namespace:glm
highp_f32vec2	.\fwd.hpp	/^	typedef vec<2, f32, highp>			highp_f32vec2;$/;"	t	namespace:glm
highp_f32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, f32, highp> highp_f32vec2;$/;"	t	namespace:glm
highp_f32vec3	.\fwd.hpp	/^	typedef vec<3, f32, highp>			highp_f32vec3;$/;"	t	namespace:glm
highp_f32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, f32, highp> highp_f32vec3;$/;"	t	namespace:glm
highp_f32vec4	.\fwd.hpp	/^	typedef vec<4, f32, highp>			highp_f32vec4;$/;"	t	namespace:glm
highp_f32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, f32, highp> highp_f32vec4;$/;"	t	namespace:glm
highp_f64	.\fwd.hpp	/^	typedef double					highp_f64;$/;"	t	namespace:glm
highp_f64	.\gtc\type_precision.hpp	/^	typedef float64 highp_f64;$/;"	t	namespace:glm
highp_f64mat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_f64mat2;$/;"	t	namespace:glm
highp_f64mat2	.\gtc\type_precision.hpp	/^	typedef highp_f64mat2x2 highp_f64mat2;$/;"	t	namespace:glm
highp_f64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_f64mat2x2;$/;"	t	namespace:glm
highp_f64mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f64, highp> highp_f64mat2x2;$/;"	t	namespace:glm
highp_f64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f64, highp>		highp_f64mat2x3;$/;"	t	namespace:glm
highp_f64mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f64, highp> highp_f64mat2x3;$/;"	t	namespace:glm
highp_f64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f64, highp>		highp_f64mat2x4;$/;"	t	namespace:glm
highp_f64mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f64, highp> highp_f64mat2x4;$/;"	t	namespace:glm
highp_f64mat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_f64mat3;$/;"	t	namespace:glm
highp_f64mat3	.\gtc\type_precision.hpp	/^	typedef highp_f64mat3x3 highp_f64mat3;$/;"	t	namespace:glm
highp_f64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f64, highp>		highp_f64mat3x2;$/;"	t	namespace:glm
highp_f64mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f64, highp> highp_f64mat3x2;$/;"	t	namespace:glm
highp_f64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_f64mat3x3;$/;"	t	namespace:glm
highp_f64mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f64, highp> highp_f64mat3x3;$/;"	t	namespace:glm
highp_f64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f64, highp>		highp_f64mat3x4;$/;"	t	namespace:glm
highp_f64mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f64, highp> highp_f64mat3x4;$/;"	t	namespace:glm
highp_f64mat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_f64mat4;$/;"	t	namespace:glm
highp_f64mat4	.\gtc\type_precision.hpp	/^	typedef highp_f64mat4x4 highp_f64mat4;$/;"	t	namespace:glm
highp_f64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f64, highp>		highp_f64mat4x2;$/;"	t	namespace:glm
highp_f64mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f64, highp> highp_f64mat4x2;$/;"	t	namespace:glm
highp_f64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f64, highp>		highp_f64mat4x3;$/;"	t	namespace:glm
highp_f64mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f64, highp> highp_f64mat4x3;$/;"	t	namespace:glm
highp_f64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_f64mat4x4;$/;"	t	namespace:glm
highp_f64mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f64, highp> highp_f64mat4x4;$/;"	t	namespace:glm
highp_f64quat	.\fwd.hpp	/^	typedef qua<f64, highp>				highp_f64quat;$/;"	t	namespace:glm
highp_f64quat	.\gtc\type_precision.hpp	/^	typedef qua<f64, highp> highp_f64quat;$/;"	t	namespace:glm
highp_f64vec1	.\fwd.hpp	/^	typedef vec<1, f64, highp>			highp_f64vec1;$/;"	t	namespace:glm
highp_f64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, f64, highp> highp_f64vec1;$/;"	t	namespace:glm
highp_f64vec2	.\fwd.hpp	/^	typedef vec<2, f64, highp>			highp_f64vec2;$/;"	t	namespace:glm
highp_f64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, f64, highp> highp_f64vec2;$/;"	t	namespace:glm
highp_f64vec3	.\fwd.hpp	/^	typedef vec<3, f64, highp>			highp_f64vec3;$/;"	t	namespace:glm
highp_f64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, f64, highp> highp_f64vec3;$/;"	t	namespace:glm
highp_f64vec4	.\fwd.hpp	/^	typedef vec<4, f64, highp>			highp_f64vec4;$/;"	t	namespace:glm
highp_f64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, f64, highp> highp_f64vec4;$/;"	t	namespace:glm
highp_fdualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_fdualquat;$/;"	t	namespace:glm
highp_float32	.\fwd.hpp	/^	typedef float					highp_float32;$/;"	t	namespace:glm
highp_float32	.\gtc\type_precision.hpp	/^	typedef float32 highp_float32;$/;"	t	namespace:glm
highp_float32_t	.\fwd.hpp	/^	typedef float					highp_float32_t;$/;"	t	namespace:glm
highp_float32_t	.\gtc\type_precision.hpp	/^	typedef float32 highp_float32_t;$/;"	t	namespace:glm
highp_float64	.\fwd.hpp	/^	typedef double					highp_float64;$/;"	t	namespace:glm
highp_float64	.\gtc\type_precision.hpp	/^	typedef float64 highp_float64;$/;"	t	namespace:glm
highp_float64_t	.\fwd.hpp	/^	typedef double					highp_float64_t;$/;"	t	namespace:glm
highp_float64_t	.\gtc\type_precision.hpp	/^	typedef float64 highp_float64_t;$/;"	t	namespace:glm
highp_fmat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_fmat2;$/;"	t	namespace:glm
highp_fmat2	.\gtc\type_precision.hpp	/^	typedef highp_fmat2x2 highp_fmat2;$/;"	t	namespace:glm
highp_fmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_fmat2x2;$/;"	t	namespace:glm
highp_fmat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, highp> highp_fmat2x2;$/;"	t	namespace:glm
highp_fmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_fmat2x3;$/;"	t	namespace:glm
highp_fmat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, highp> highp_fmat2x3;$/;"	t	namespace:glm
highp_fmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_fmat2x4;$/;"	t	namespace:glm
highp_fmat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, highp> highp_fmat2x4;$/;"	t	namespace:glm
highp_fmat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_fmat3;$/;"	t	namespace:glm
highp_fmat3	.\gtc\type_precision.hpp	/^	typedef highp_fmat3x3 highp_fmat3;$/;"	t	namespace:glm
highp_fmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_fmat3x2;$/;"	t	namespace:glm
highp_fmat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, highp> highp_fmat3x2;$/;"	t	namespace:glm
highp_fmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_fmat3x3;$/;"	t	namespace:glm
highp_fmat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, highp> highp_fmat3x3;$/;"	t	namespace:glm
highp_fmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_fmat3x4;$/;"	t	namespace:glm
highp_fmat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, highp> highp_fmat3x4;$/;"	t	namespace:glm
highp_fmat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_fmat4;$/;"	t	namespace:glm
highp_fmat4	.\gtc\type_precision.hpp	/^	typedef highp_fmat4x4 highp_fmat4;$/;"	t	namespace:glm
highp_fmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_fmat4x2;$/;"	t	namespace:glm
highp_fmat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, highp> highp_fmat4x2;$/;"	t	namespace:glm
highp_fmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_fmat4x3;$/;"	t	namespace:glm
highp_fmat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, highp> highp_fmat4x3;$/;"	t	namespace:glm
highp_fmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_fmat4x4;$/;"	t	namespace:glm
highp_fmat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, highp> highp_fmat4x4;$/;"	t	namespace:glm
highp_fquat	.\fwd.hpp	/^	typedef qua<float, highp>			highp_fquat;$/;"	t	namespace:glm
highp_fvec1	.\fwd.hpp	/^	typedef vec<1, float, highp>		highp_fvec1;$/;"	t	namespace:glm
highp_fvec1	.\gtc\type_precision.hpp	/^	typedef vec<1, float, highp> highp_fvec1;$/;"	t	namespace:glm
highp_fvec2	.\fwd.hpp	/^	typedef vec<2, float, highp>		highp_fvec2;$/;"	t	namespace:glm
highp_fvec2	.\gtc\type_precision.hpp	/^	typedef vec<2, float, highp> highp_fvec2;$/;"	t	namespace:glm
highp_fvec3	.\fwd.hpp	/^	typedef vec<3, float, highp>		highp_fvec3;$/;"	t	namespace:glm
highp_fvec3	.\gtc\type_precision.hpp	/^	typedef vec<3, float, highp> highp_fvec3;$/;"	t	namespace:glm
highp_fvec4	.\fwd.hpp	/^	typedef vec<4, float, highp>		highp_fvec4;$/;"	t	namespace:glm
highp_fvec4	.\gtc\type_precision.hpp	/^	typedef vec<4, float, highp> highp_fvec4;$/;"	t	namespace:glm
highp_i16	.\fwd.hpp	/^	typedef int16					highp_i16;$/;"	t	namespace:glm
highp_i16	.\gtc\type_precision.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm
highp_i16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int16, highp>		highp_i16mat2x2;$/;"	t	namespace:glm
highp_i16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int16, highp>		highp_i16mat2x3;$/;"	t	namespace:glm
highp_i16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int16, highp>		highp_i16mat2x4;$/;"	t	namespace:glm
highp_i16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int16, highp>		highp_i16mat3x2;$/;"	t	namespace:glm
highp_i16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int16, highp>		highp_i16mat3x3;$/;"	t	namespace:glm
highp_i16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int16, highp>		highp_i16mat3x4;$/;"	t	namespace:glm
highp_i16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int16, highp>		highp_i16mat4x2;$/;"	t	namespace:glm
highp_i16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int16, highp>		highp_i16mat4x3;$/;"	t	namespace:glm
highp_i16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int16, highp>		highp_i16mat4x4;$/;"	t	namespace:glm
highp_i16vec1	.\fwd.hpp	/^	typedef vec<1, i16, highp>		highp_i16vec1;$/;"	t	namespace:glm
highp_i16vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i16, highp>		highp_i16vec1;$/;"	t	namespace:glm
highp_i16vec2	.\fwd.hpp	/^	typedef vec<2, i16, highp>		highp_i16vec2;$/;"	t	namespace:glm
highp_i16vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i16, highp>		highp_i16vec2;$/;"	t	namespace:glm
highp_i16vec3	.\fwd.hpp	/^	typedef vec<3, i16, highp>		highp_i16vec3;$/;"	t	namespace:glm
highp_i16vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i16, highp>		highp_i16vec3;$/;"	t	namespace:glm
highp_i16vec4	.\fwd.hpp	/^	typedef vec<4, i16, highp>		highp_i16vec4;$/;"	t	namespace:glm
highp_i16vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i16, highp>		highp_i16vec4;$/;"	t	namespace:glm
highp_i32	.\fwd.hpp	/^	typedef int32					highp_i32;$/;"	t	namespace:glm
highp_i32	.\gtc\type_precision.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm
highp_i32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int32, highp>		highp_i32mat2x2;$/;"	t	namespace:glm
highp_i32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int32, highp>		highp_i32mat2x3;$/;"	t	namespace:glm
highp_i32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int32, highp>		highp_i32mat2x4;$/;"	t	namespace:glm
highp_i32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int32, highp>		highp_i32mat3x2;$/;"	t	namespace:glm
highp_i32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int32, highp>		highp_i32mat3x3;$/;"	t	namespace:glm
highp_i32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int32, highp>		highp_i32mat3x4;$/;"	t	namespace:glm
highp_i32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int32, highp>		highp_i32mat4x2;$/;"	t	namespace:glm
highp_i32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int32, highp>		highp_i32mat4x3;$/;"	t	namespace:glm
highp_i32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int32, highp>		highp_i32mat4x4;$/;"	t	namespace:glm
highp_i32vec1	.\fwd.hpp	/^	typedef vec<1, i32, highp>		highp_i32vec1;$/;"	t	namespace:glm
highp_i32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i32, highp>		highp_i32vec1;$/;"	t	namespace:glm
highp_i32vec2	.\fwd.hpp	/^	typedef vec<2, i32, highp>		highp_i32vec2;$/;"	t	namespace:glm
highp_i32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i32, highp>		highp_i32vec2;$/;"	t	namespace:glm
highp_i32vec3	.\fwd.hpp	/^	typedef vec<3, i32, highp>		highp_i32vec3;$/;"	t	namespace:glm
highp_i32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i32, highp>		highp_i32vec3;$/;"	t	namespace:glm
highp_i32vec4	.\fwd.hpp	/^	typedef vec<4, i32, highp>		highp_i32vec4;$/;"	t	namespace:glm
highp_i32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i32, highp>		highp_i32vec4;$/;"	t	namespace:glm
highp_i64	.\fwd.hpp	/^	typedef int64					highp_i64;$/;"	t	namespace:glm
highp_i64	.\gtc\type_precision.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm
highp_i64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int64, highp>		highp_i64mat2x2;$/;"	t	namespace:glm
highp_i64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int64, highp>		highp_i64mat2x3;$/;"	t	namespace:glm
highp_i64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int64, highp>		highp_i64mat2x4;$/;"	t	namespace:glm
highp_i64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int64, highp>		highp_i64mat3x2;$/;"	t	namespace:glm
highp_i64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int64, highp>		highp_i64mat3x3;$/;"	t	namespace:glm
highp_i64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int64, highp>		highp_i64mat3x4;$/;"	t	namespace:glm
highp_i64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int64, highp>		highp_i64mat4x2;$/;"	t	namespace:glm
highp_i64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int64, highp>		highp_i64mat4x3;$/;"	t	namespace:glm
highp_i64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int64, highp>		highp_i64mat4x4;$/;"	t	namespace:glm
highp_i64vec1	.\fwd.hpp	/^	typedef vec<1, i64, highp>		highp_i64vec1;$/;"	t	namespace:glm
highp_i64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i64, highp>		highp_i64vec1;$/;"	t	namespace:glm
highp_i64vec2	.\fwd.hpp	/^	typedef vec<2, i64, highp>		highp_i64vec2;$/;"	t	namespace:glm
highp_i64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i64, highp>		highp_i64vec2;$/;"	t	namespace:glm
highp_i64vec3	.\fwd.hpp	/^	typedef vec<3, i64, highp>		highp_i64vec3;$/;"	t	namespace:glm
highp_i64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i64, highp>		highp_i64vec3;$/;"	t	namespace:glm
highp_i64vec4	.\fwd.hpp	/^	typedef vec<4, i64, highp>		highp_i64vec4;$/;"	t	namespace:glm
highp_i64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i64, highp>		highp_i64vec4;$/;"	t	namespace:glm
highp_i8	.\fwd.hpp	/^	typedef int8					highp_i8;$/;"	t	namespace:glm
highp_i8	.\gtc\type_precision.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm
highp_i8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int8, highp>		highp_i8mat2x2;$/;"	t	namespace:glm
highp_i8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int8, highp>		highp_i8mat2x3;$/;"	t	namespace:glm
highp_i8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int8, highp>		highp_i8mat2x4;$/;"	t	namespace:glm
highp_i8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int8, highp>		highp_i8mat3x2;$/;"	t	namespace:glm
highp_i8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int8, highp>		highp_i8mat3x3;$/;"	t	namespace:glm
highp_i8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int8, highp>		highp_i8mat3x4;$/;"	t	namespace:glm
highp_i8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int8, highp>		highp_i8mat4x2;$/;"	t	namespace:glm
highp_i8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int8, highp>		highp_i8mat4x3;$/;"	t	namespace:glm
highp_i8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int8, highp>		highp_i8mat4x4;$/;"	t	namespace:glm
highp_i8vec1	.\fwd.hpp	/^	typedef vec<1, i8, highp>		highp_i8vec1;$/;"	t	namespace:glm
highp_i8vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i8, highp>		highp_i8vec1;$/;"	t	namespace:glm
highp_i8vec2	.\fwd.hpp	/^	typedef vec<2, i8, highp>		highp_i8vec2;$/;"	t	namespace:glm
highp_i8vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i8, highp>		highp_i8vec2;$/;"	t	namespace:glm
highp_i8vec3	.\fwd.hpp	/^	typedef vec<3, i8, highp>		highp_i8vec3;$/;"	t	namespace:glm
highp_i8vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i8, highp>		highp_i8vec3;$/;"	t	namespace:glm
highp_i8vec4	.\fwd.hpp	/^	typedef vec<4, i8, highp>		highp_i8vec4;$/;"	t	namespace:glm
highp_i8vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i8, highp>		highp_i8vec4;$/;"	t	namespace:glm
highp_imat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, highp>				highp_imat2;$/;"	t	namespace:glm
highp_imat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int, highp>		highp_imat2x2;$/;"	t	namespace:glm
highp_imat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, highp>				highp_imat2x2;$/;"	t	namespace:glm
highp_imat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int, highp>		highp_imat2x3;$/;"	t	namespace:glm
highp_imat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, int, highp>				highp_imat2x3;$/;"	t	namespace:glm
highp_imat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int, highp>		highp_imat2x4;$/;"	t	namespace:glm
highp_imat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, int, highp>				highp_imat2x4;$/;"	t	namespace:glm
highp_imat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, highp>				highp_imat3;$/;"	t	namespace:glm
highp_imat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int, highp>		highp_imat3x2;$/;"	t	namespace:glm
highp_imat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, int, highp>				highp_imat3x2;$/;"	t	namespace:glm
highp_imat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int, highp>		highp_imat3x3;$/;"	t	namespace:glm
highp_imat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, highp>				highp_imat3x3;$/;"	t	namespace:glm
highp_imat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int, highp>		highp_imat3x4;$/;"	t	namespace:glm
highp_imat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, int, highp>				highp_imat3x4;$/;"	t	namespace:glm
highp_imat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, highp>				highp_imat4;$/;"	t	namespace:glm
highp_imat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int, highp>		highp_imat4x2;$/;"	t	namespace:glm
highp_imat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, int, highp>				highp_imat4x2;$/;"	t	namespace:glm
highp_imat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int, highp>		highp_imat4x3;$/;"	t	namespace:glm
highp_imat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, int, highp>				highp_imat4x3;$/;"	t	namespace:glm
highp_imat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int, highp>		highp_imat4x4;$/;"	t	namespace:glm
highp_imat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, highp>				highp_imat4x4;$/;"	t	namespace:glm
highp_int16	.\fwd.hpp	/^	typedef int16					highp_int16;$/;"	t	namespace:glm
highp_int16	.\gtc\type_precision.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm
highp_int16_t	.\fwd.hpp	/^	typedef int16					highp_int16_t;$/;"	t	namespace:glm
highp_int16_t	.\gtc\type_precision.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm
highp_int32	.\fwd.hpp	/^	typedef int32					highp_int32;$/;"	t	namespace:glm
highp_int32	.\gtc\type_precision.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm
highp_int32_t	.\fwd.hpp	/^	typedef int32					highp_int32_t;$/;"	t	namespace:glm
highp_int32_t	.\gtc\type_precision.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm
highp_int64	.\fwd.hpp	/^	typedef int64					highp_int64;$/;"	t	namespace:glm
highp_int64	.\gtc\type_precision.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm
highp_int64_t	.\fwd.hpp	/^	typedef int64					highp_int64_t;$/;"	t	namespace:glm
highp_int64_t	.\gtc\type_precision.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm
highp_int8	.\fwd.hpp	/^	typedef int8					highp_int8;$/;"	t	namespace:glm
highp_int8	.\gtc\type_precision.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm
highp_int8_t	.\fwd.hpp	/^	typedef int8					highp_int8_t;$/;"	t	namespace:glm
highp_int8_t	.\gtc\type_precision.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm
highp_ivec1	.\fwd.hpp	/^	typedef vec<1, int, highp>		highp_ivec1;$/;"	t	namespace:glm
highp_ivec1	.\gtc\type_precision.hpp	/^	typedef vec<1, int, highp>		highp_ivec1;$/;"	t	namespace:glm
highp_ivec2	.\fwd.hpp	/^	typedef vec<2, int, highp>		highp_ivec2;$/;"	t	namespace:glm
highp_ivec2	.\gtc\type_precision.hpp	/^	typedef vec<2, int, highp>		highp_ivec2;$/;"	t	namespace:glm
highp_ivec3	.\fwd.hpp	/^	typedef vec<3, int, highp>		highp_ivec3;$/;"	t	namespace:glm
highp_ivec3	.\gtc\type_precision.hpp	/^	typedef vec<3, int, highp>		highp_ivec3;$/;"	t	namespace:glm
highp_ivec4	.\fwd.hpp	/^	typedef vec<4, int, highp>		highp_ivec4;$/;"	t	namespace:glm
highp_ivec4	.\gtc\type_precision.hpp	/^	typedef vec<4, int, highp>		highp_ivec4;$/;"	t	namespace:glm
highp_mat2	.\ext\matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, highp>		highp_mat2;$/;"	t	namespace:glm
highp_mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_mat2;$/;"	t	namespace:glm
highp_mat2x2	.\ext\matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, highp>		highp_mat2x2;$/;"	t	namespace:glm
highp_mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_mat2x2;$/;"	t	namespace:glm
highp_mat2x3	.\ext\matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, highp>		highp_mat2x3;$/;"	t	namespace:glm
highp_mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_mat2x3;$/;"	t	namespace:glm
highp_mat2x4	.\ext\matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, highp>		highp_mat2x4;$/;"	t	namespace:glm
highp_mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_mat2x4;$/;"	t	namespace:glm
highp_mat3	.\ext\matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, highp>		highp_mat3;$/;"	t	namespace:glm
highp_mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_mat3;$/;"	t	namespace:glm
highp_mat3x2	.\ext\matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, highp>		highp_mat3x2;$/;"	t	namespace:glm
highp_mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_mat3x2;$/;"	t	namespace:glm
highp_mat3x3	.\ext\matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, highp>		highp_mat3x3;$/;"	t	namespace:glm
highp_mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_mat3x3;$/;"	t	namespace:glm
highp_mat3x4	.\ext\matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, highp>		highp_mat3x4;$/;"	t	namespace:glm
highp_mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_mat3x4;$/;"	t	namespace:glm
highp_mat4	.\ext\matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, highp>		highp_mat4;$/;"	t	namespace:glm
highp_mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_mat4;$/;"	t	namespace:glm
highp_mat4x2	.\ext\matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, highp>		highp_mat4x2;$/;"	t	namespace:glm
highp_mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_mat4x2;$/;"	t	namespace:glm
highp_mat4x3	.\ext\matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, highp>		highp_mat4x3;$/;"	t	namespace:glm
highp_mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_mat4x3;$/;"	t	namespace:glm
highp_mat4x4	.\ext\matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, highp>		highp_mat4x4;$/;"	t	namespace:glm
highp_mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_mat4x4;$/;"	t	namespace:glm
highp_quat	.\ext\quaternion_float_precision.hpp	/^	typedef qua<float, highp>		highp_quat;$/;"	t	namespace:glm
highp_quat	.\fwd.hpp	/^	typedef qua<float, highp>			highp_quat;$/;"	t	namespace:glm
highp_u16	.\fwd.hpp	/^	typedef uint16					highp_u16;$/;"	t	namespace:glm
highp_u16	.\gtc\type_precision.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm
highp_u16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint16, highp>	highp_u16mat2x2;$/;"	t	namespace:glm
highp_u16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint16, highp>	highp_u16mat2x3;$/;"	t	namespace:glm
highp_u16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint16, highp>	highp_u16mat2x4;$/;"	t	namespace:glm
highp_u16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint16, highp>	highp_u16mat3x2;$/;"	t	namespace:glm
highp_u16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint16, highp>	highp_u16mat3x3;$/;"	t	namespace:glm
highp_u16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint16, highp>	highp_u16mat3x4;$/;"	t	namespace:glm
highp_u16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint16, highp>	highp_u16mat4x2;$/;"	t	namespace:glm
highp_u16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint16, highp>	highp_u16mat4x3;$/;"	t	namespace:glm
highp_u16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint16, highp>	highp_u16mat4x4;$/;"	t	namespace:glm
highp_u16vec1	.\fwd.hpp	/^	typedef vec<1, u16, highp>		highp_u16vec1;$/;"	t	namespace:glm
highp_u16vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u16, highp>		highp_u16vec1;$/;"	t	namespace:glm
highp_u16vec2	.\fwd.hpp	/^	typedef vec<2, u16, highp>		highp_u16vec2;$/;"	t	namespace:glm
highp_u16vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u16, highp>		highp_u16vec2;$/;"	t	namespace:glm
highp_u16vec3	.\fwd.hpp	/^	typedef vec<3, u16, highp>		highp_u16vec3;$/;"	t	namespace:glm
highp_u16vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u16, highp>		highp_u16vec3;$/;"	t	namespace:glm
highp_u16vec4	.\fwd.hpp	/^	typedef vec<4, u16, highp>		highp_u16vec4;$/;"	t	namespace:glm
highp_u16vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u16, highp>		highp_u16vec4;$/;"	t	namespace:glm
highp_u32	.\fwd.hpp	/^	typedef uint32					highp_u32;$/;"	t	namespace:glm
highp_u32	.\gtc\type_precision.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm
highp_u32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint32, highp>	highp_u32mat2x2;$/;"	t	namespace:glm
highp_u32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint32, highp>	highp_u32mat2x3;$/;"	t	namespace:glm
highp_u32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint32, highp>	highp_u32mat2x4;$/;"	t	namespace:glm
highp_u32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint32, highp>	highp_u32mat3x2;$/;"	t	namespace:glm
highp_u32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint32, highp>	highp_u32mat3x3;$/;"	t	namespace:glm
highp_u32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint32, highp>	highp_u32mat3x4;$/;"	t	namespace:glm
highp_u32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint32, highp>	highp_u32mat4x2;$/;"	t	namespace:glm
highp_u32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint32, highp>	highp_u32mat4x3;$/;"	t	namespace:glm
highp_u32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint32, highp>	highp_u32mat4x4;$/;"	t	namespace:glm
highp_u32vec1	.\fwd.hpp	/^	typedef vec<1, u32, highp>		highp_u32vec1;$/;"	t	namespace:glm
highp_u32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u32, highp>		highp_u32vec1;$/;"	t	namespace:glm
highp_u32vec2	.\fwd.hpp	/^	typedef vec<2, u32, highp>		highp_u32vec2;$/;"	t	namespace:glm
highp_u32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u32, highp>		highp_u32vec2;$/;"	t	namespace:glm
highp_u32vec3	.\fwd.hpp	/^	typedef vec<3, u32, highp>		highp_u32vec3;$/;"	t	namespace:glm
highp_u32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u32, highp>		highp_u32vec3;$/;"	t	namespace:glm
highp_u32vec4	.\fwd.hpp	/^	typedef vec<4, u32, highp>		highp_u32vec4;$/;"	t	namespace:glm
highp_u32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u32, highp>		highp_u32vec4;$/;"	t	namespace:glm
highp_u64	.\fwd.hpp	/^	typedef uint64					highp_u64;$/;"	t	namespace:glm
highp_u64	.\gtc\type_precision.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm
highp_u64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint64, highp>	highp_u64mat2x2;$/;"	t	namespace:glm
highp_u64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint64, highp>	highp_u64mat2x3;$/;"	t	namespace:glm
highp_u64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint64, highp>	highp_u64mat2x4;$/;"	t	namespace:glm
highp_u64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint64, highp>	highp_u64mat3x2;$/;"	t	namespace:glm
highp_u64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint64, highp>	highp_u64mat3x3;$/;"	t	namespace:glm
highp_u64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint64, highp>	highp_u64mat3x4;$/;"	t	namespace:glm
highp_u64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint64, highp>	highp_u64mat4x2;$/;"	t	namespace:glm
highp_u64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint64, highp>	highp_u64mat4x3;$/;"	t	namespace:glm
highp_u64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint64, highp>	highp_u64mat4x4;$/;"	t	namespace:glm
highp_u64vec1	.\fwd.hpp	/^	typedef vec<1, u64, highp>		highp_u64vec1;$/;"	t	namespace:glm
highp_u64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u64, highp>		highp_u64vec1;$/;"	t	namespace:glm
highp_u64vec2	.\fwd.hpp	/^	typedef vec<2, u64, highp>		highp_u64vec2;$/;"	t	namespace:glm
highp_u64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u64, highp>		highp_u64vec2;$/;"	t	namespace:glm
highp_u64vec3	.\fwd.hpp	/^	typedef vec<3, u64, highp>		highp_u64vec3;$/;"	t	namespace:glm
highp_u64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u64, highp>		highp_u64vec3;$/;"	t	namespace:glm
highp_u64vec4	.\fwd.hpp	/^	typedef vec<4, u64, highp>		highp_u64vec4;$/;"	t	namespace:glm
highp_u64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u64, highp>		highp_u64vec4;$/;"	t	namespace:glm
highp_u8	.\fwd.hpp	/^	typedef uint8					highp_u8;$/;"	t	namespace:glm
highp_u8	.\gtc\type_precision.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm
highp_u8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint8, highp>		highp_u8mat2x2;$/;"	t	namespace:glm
highp_u8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint8, highp>		highp_u8mat2x3;$/;"	t	namespace:glm
highp_u8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint8, highp>		highp_u8mat2x4;$/;"	t	namespace:glm
highp_u8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint8, highp>		highp_u8mat3x2;$/;"	t	namespace:glm
highp_u8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint8, highp>		highp_u8mat3x3;$/;"	t	namespace:glm
highp_u8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint8, highp>		highp_u8mat3x4;$/;"	t	namespace:glm
highp_u8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint8, highp>		highp_u8mat4x2;$/;"	t	namespace:glm
highp_u8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint8, highp>		highp_u8mat4x3;$/;"	t	namespace:glm
highp_u8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint8, highp>		highp_u8mat4x4;$/;"	t	namespace:glm
highp_u8vec1	.\fwd.hpp	/^	typedef vec<1, u8, highp>		highp_u8vec1;$/;"	t	namespace:glm
highp_u8vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u8, highp>		highp_u8vec1;$/;"	t	namespace:glm
highp_u8vec2	.\fwd.hpp	/^	typedef vec<2, u8, highp>		highp_u8vec2;$/;"	t	namespace:glm
highp_u8vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u8, highp>		highp_u8vec2;$/;"	t	namespace:glm
highp_u8vec3	.\fwd.hpp	/^	typedef vec<3, u8, highp>		highp_u8vec3;$/;"	t	namespace:glm
highp_u8vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u8, highp>		highp_u8vec3;$/;"	t	namespace:glm
highp_u8vec4	.\fwd.hpp	/^	typedef vec<4, u8, highp>		highp_u8vec4;$/;"	t	namespace:glm
highp_u8vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u8, highp>		highp_u8vec4;$/;"	t	namespace:glm
highp_uint16	.\fwd.hpp	/^	typedef uint16					highp_uint16;$/;"	t	namespace:glm
highp_uint16	.\gtc\type_precision.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm
highp_uint16_t	.\fwd.hpp	/^	typedef uint16					highp_uint16_t;$/;"	t	namespace:glm
highp_uint16_t	.\gtc\type_precision.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm
highp_uint32	.\fwd.hpp	/^	typedef uint32					highp_uint32;$/;"	t	namespace:glm
highp_uint32	.\gtc\type_precision.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm
highp_uint32_t	.\fwd.hpp	/^	typedef uint32					highp_uint32_t;$/;"	t	namespace:glm
highp_uint32_t	.\gtc\type_precision.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm
highp_uint64	.\fwd.hpp	/^	typedef uint64					highp_uint64;$/;"	t	namespace:glm
highp_uint64	.\gtc\type_precision.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm
highp_uint64_t	.\fwd.hpp	/^	typedef uint64					highp_uint64_t;$/;"	t	namespace:glm
highp_uint64_t	.\gtc\type_precision.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm
highp_uint8	.\fwd.hpp	/^	typedef uint8					highp_uint8;$/;"	t	namespace:glm
highp_uint8	.\gtc\type_precision.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm
highp_uint8_t	.\fwd.hpp	/^	typedef uint8					highp_uint8_t;$/;"	t	namespace:glm
highp_uint8_t	.\gtc\type_precision.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm
highp_umat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, highp>				highp_umat2;$/;"	t	namespace:glm
highp_umat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint, highp>		highp_umat2x2;$/;"	t	namespace:glm
highp_umat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, highp>				highp_umat2x2;$/;"	t	namespace:glm
highp_umat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint, highp>		highp_umat2x3;$/;"	t	namespace:glm
highp_umat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, uint, highp>				highp_umat2x3;$/;"	t	namespace:glm
highp_umat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint, highp>		highp_umat2x4;$/;"	t	namespace:glm
highp_umat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, uint, highp>				highp_umat2x4;$/;"	t	namespace:glm
highp_umat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, highp>				highp_umat3;$/;"	t	namespace:glm
highp_umat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint, highp>		highp_umat3x2;$/;"	t	namespace:glm
highp_umat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, uint, highp>				highp_umat3x2;$/;"	t	namespace:glm
highp_umat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint, highp>		highp_umat3x3;$/;"	t	namespace:glm
highp_umat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, highp>				highp_umat3x3;$/;"	t	namespace:glm
highp_umat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint, highp>		highp_umat3x4;$/;"	t	namespace:glm
highp_umat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, uint, highp>				highp_umat3x4;$/;"	t	namespace:glm
highp_umat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, highp>				highp_umat4;$/;"	t	namespace:glm
highp_umat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint, highp>		highp_umat4x2;$/;"	t	namespace:glm
highp_umat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, uint, highp>				highp_umat4x2;$/;"	t	namespace:glm
highp_umat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint, highp>		highp_umat4x3;$/;"	t	namespace:glm
highp_umat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, uint, highp>				highp_umat4x3;$/;"	t	namespace:glm
highp_umat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint, highp>		highp_umat4x4;$/;"	t	namespace:glm
highp_umat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, highp>				highp_umat4x4;$/;"	t	namespace:glm
highp_uvec1	.\fwd.hpp	/^	typedef vec<1, uint, highp>		highp_uvec1;$/;"	t	namespace:glm
highp_uvec1	.\gtc\type_precision.hpp	/^	typedef vec<1, uint, highp>		highp_uvec1;$/;"	t	namespace:glm
highp_uvec2	.\fwd.hpp	/^	typedef vec<2, uint, highp>		highp_uvec2;$/;"	t	namespace:glm
highp_uvec2	.\gtc\type_precision.hpp	/^	typedef vec<2, uint, highp>		highp_uvec2;$/;"	t	namespace:glm
highp_uvec3	.\fwd.hpp	/^	typedef vec<3, uint, highp>		highp_uvec3;$/;"	t	namespace:glm
highp_uvec3	.\gtc\type_precision.hpp	/^	typedef vec<3, uint, highp>		highp_uvec3;$/;"	t	namespace:glm
highp_uvec4	.\fwd.hpp	/^	typedef vec<4, uint, highp>		highp_uvec4;$/;"	t	namespace:glm
highp_uvec4	.\gtc\type_precision.hpp	/^	typedef vec<4, uint, highp>		highp_uvec4;$/;"	t	namespace:glm
highp_vec1	.\ext\vector_float1_precision.hpp	/^	typedef vec<1, float, highp>		highp_vec1;$/;"	t	namespace:glm
highp_vec1	.\fwd.hpp	/^	typedef vec<1, float, highp>		highp_vec1;$/;"	t	namespace:glm
highp_vec2	.\ext\vector_float2_precision.hpp	/^	typedef vec<2, float, highp>		highp_vec2;$/;"	t	namespace:glm
highp_vec2	.\fwd.hpp	/^	typedef vec<2, float, highp>		highp_vec2;$/;"	t	namespace:glm
highp_vec3	.\ext\vector_float3_precision.hpp	/^	typedef vec<3, float, highp>		highp_vec3;$/;"	t	namespace:glm
highp_vec3	.\fwd.hpp	/^	typedef vec<3, float, highp>		highp_vec3;$/;"	t	namespace:glm
highp_vec4	.\ext\vector_float4_precision.hpp	/^	typedef vec<4, float, highp>		highp_vec4;$/;"	t	namespace:glm
highp_vec4	.\fwd.hpp	/^	typedef vec<4, float, highp>		highp_vec4;$/;"	t	namespace:glm
i	.\detail\type_float.hpp	/^		int_type i;$/;"	m	union:glm::detail::float_t
i16	.\fwd.hpp	/^	typedef int16					i16;$/;"	t	namespace:glm
i16	.\gtc\type_precision.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm
i16mat2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int16, defaultp>				i16mat2;$/;"	t	namespace:glm
i16mat2x2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int16, defaultp>				i16mat2x2;$/;"	t	namespace:glm
i16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int16, defaultp>	i16mat2x2;$/;"	t	namespace:glm
i16mat2x3	.\ext\matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int16, defaultp>				i16mat2x3;$/;"	t	namespace:glm
i16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int16, defaultp>	i16mat2x3;$/;"	t	namespace:glm
i16mat2x4	.\ext\matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int16, defaultp>				i16mat2x4;$/;"	t	namespace:glm
i16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int16, defaultp>	i16mat2x4;$/;"	t	namespace:glm
i16mat3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int16, defaultp>				i16mat3;$/;"	t	namespace:glm
i16mat3x2	.\ext\matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int16, defaultp>				i16mat3x2;$/;"	t	namespace:glm
i16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int16, defaultp>	i16mat3x2;$/;"	t	namespace:glm
i16mat3x3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int16, defaultp>				i16mat3x3;$/;"	t	namespace:glm
i16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int16, defaultp>	i16mat3x3;$/;"	t	namespace:glm
i16mat3x4	.\ext\matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int16, defaultp>				i16mat3x4;$/;"	t	namespace:glm
i16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int16, defaultp>	i16mat3x4;$/;"	t	namespace:glm
i16mat4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int16, defaultp>				i16mat4;$/;"	t	namespace:glm
i16mat4x2	.\ext\matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int16, defaultp>				i16mat4x2;$/;"	t	namespace:glm
i16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int16, defaultp>	i16mat4x2;$/;"	t	namespace:glm
i16mat4x3	.\ext\matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int16, defaultp>				i16mat4x3;$/;"	t	namespace:glm
i16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int16, defaultp>	i16mat4x3;$/;"	t	namespace:glm
i16mat4x4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int16, defaultp>				i16mat4x4;$/;"	t	namespace:glm
i16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int16, defaultp>	i16mat4x4;$/;"	t	namespace:glm
i16vec1	.\ext\vector_int1_sized.hpp	/^	typedef vec<1, int16, defaultp>	i16vec1;$/;"	t	namespace:glm
i16vec1	.\fwd.hpp	/^	typedef vec<1, i16, defaultp>	i16vec1;$/;"	t	namespace:glm
i16vec2	.\ext\vector_int2_sized.hpp	/^	typedef vec<2, int16, defaultp>		i16vec2;$/;"	t	namespace:glm
i16vec2	.\fwd.hpp	/^	typedef vec<2, i16, defaultp>	i16vec2;$/;"	t	namespace:glm
i16vec3	.\ext\vector_int3_sized.hpp	/^	typedef vec<3, int16, defaultp>		i16vec3;$/;"	t	namespace:glm
i16vec3	.\fwd.hpp	/^	typedef vec<3, i16, defaultp>	i16vec3;$/;"	t	namespace:glm
i16vec4	.\ext\vector_int4_sized.hpp	/^	typedef vec<4, int16, defaultp>		i16vec4;$/;"	t	namespace:glm
i16vec4	.\fwd.hpp	/^	typedef vec<4, i16, defaultp>	i16vec4;$/;"	t	namespace:glm
i32	.\fwd.hpp	/^	typedef int32					i32;$/;"	t	namespace:glm
i32	.\gtc\type_precision.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm
i32mat2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int32, defaultp>				i32mat2;$/;"	t	namespace:glm
i32mat2x2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int32, defaultp>				i32mat2x2;$/;"	t	namespace:glm
i32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int32, defaultp>	i32mat2x2;$/;"	t	namespace:glm
i32mat2x3	.\ext\matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int32, defaultp>				i32mat2x3;$/;"	t	namespace:glm
i32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int32, defaultp>	i32mat2x3;$/;"	t	namespace:glm
i32mat2x4	.\ext\matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int32, defaultp>				i32mat2x4;$/;"	t	namespace:glm
i32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int32, defaultp>	i32mat2x4;$/;"	t	namespace:glm
i32mat3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int32, defaultp>				i32mat3;$/;"	t	namespace:glm
i32mat3x2	.\ext\matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int32, defaultp>				i32mat3x2;$/;"	t	namespace:glm
i32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int32, defaultp>	i32mat3x2;$/;"	t	namespace:glm
i32mat3x3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int32, defaultp>				i32mat3x3;$/;"	t	namespace:glm
i32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int32, defaultp>	i32mat3x3;$/;"	t	namespace:glm
i32mat3x4	.\ext\matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int32, defaultp>				i32mat3x4;$/;"	t	namespace:glm
i32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int32, defaultp>	i32mat3x4;$/;"	t	namespace:glm
i32mat4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int32, defaultp>				i32mat4;$/;"	t	namespace:glm
i32mat4x2	.\ext\matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int32, defaultp>				i32mat4x2;$/;"	t	namespace:glm
i32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int32, defaultp>	i32mat4x2;$/;"	t	namespace:glm
i32mat4x3	.\ext\matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int32, defaultp>				i32mat4x3;$/;"	t	namespace:glm
i32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int32, defaultp>	i32mat4x3;$/;"	t	namespace:glm
i32mat4x4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int32, defaultp>				i32mat4x4;$/;"	t	namespace:glm
i32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int32, defaultp>	i32mat4x4;$/;"	t	namespace:glm
i32vec1	.\ext\vector_int1_sized.hpp	/^	typedef vec<1, int32, defaultp>	i32vec1;$/;"	t	namespace:glm
i32vec1	.\fwd.hpp	/^	typedef vec<1, i32, defaultp>	i32vec1;$/;"	t	namespace:glm
i32vec2	.\ext\vector_int2_sized.hpp	/^	typedef vec<2, int32, defaultp>		i32vec2;$/;"	t	namespace:glm
i32vec2	.\fwd.hpp	/^	typedef vec<2, i32, defaultp>	i32vec2;$/;"	t	namespace:glm
i32vec3	.\ext\vector_int3_sized.hpp	/^	typedef vec<3, int32, defaultp>		i32vec3;$/;"	t	namespace:glm
i32vec3	.\fwd.hpp	/^	typedef vec<3, i32, defaultp>	i32vec3;$/;"	t	namespace:glm
i32vec4	.\ext\vector_int4_sized.hpp	/^	typedef vec<4, int32, defaultp>		i32vec4;$/;"	t	namespace:glm
i32vec4	.\fwd.hpp	/^	typedef vec<4, i32, defaultp>	i32vec4;$/;"	t	namespace:glm
i64	.\fwd.hpp	/^	typedef int64					i64;$/;"	t	namespace:glm
i64	.\gtc\type_precision.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm
i64mat2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int64, defaultp>				i64mat2;$/;"	t	namespace:glm
i64mat2x2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int64, defaultp>				i64mat2x2;$/;"	t	namespace:glm
i64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int64, defaultp>	i64mat2x2;$/;"	t	namespace:glm
i64mat2x3	.\ext\matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int64, defaultp>				i64mat2x3;$/;"	t	namespace:glm
i64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int64, defaultp>	i64mat2x3;$/;"	t	namespace:glm
i64mat2x4	.\ext\matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int64, defaultp>				i64mat2x4;$/;"	t	namespace:glm
i64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int64, defaultp>	i64mat2x4;$/;"	t	namespace:glm
i64mat3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int64, defaultp>				i64mat3;$/;"	t	namespace:glm
i64mat3x2	.\ext\matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int64, defaultp>				i64mat3x2;$/;"	t	namespace:glm
i64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int64, defaultp>	i64mat3x2;$/;"	t	namespace:glm
i64mat3x3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int64, defaultp>				i64mat3x3;$/;"	t	namespace:glm
i64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int64, defaultp>	i64mat3x3;$/;"	t	namespace:glm
i64mat3x4	.\ext\matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int64, defaultp>				i64mat3x4;$/;"	t	namespace:glm
i64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int64, defaultp>	i64mat3x4;$/;"	t	namespace:glm
i64mat4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int64, defaultp>				i64mat4;$/;"	t	namespace:glm
i64mat4x2	.\ext\matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int64, defaultp>				i64mat4x2;$/;"	t	namespace:glm
i64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int64, defaultp>	i64mat4x2;$/;"	t	namespace:glm
i64mat4x3	.\ext\matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int64, defaultp>				i64mat4x3;$/;"	t	namespace:glm
i64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int64, defaultp>	i64mat4x3;$/;"	t	namespace:glm
i64mat4x4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int64, defaultp>				i64mat4x4;$/;"	t	namespace:glm
i64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int64, defaultp>	i64mat4x4;$/;"	t	namespace:glm
i64vec1	.\ext\vector_int1_sized.hpp	/^	typedef vec<1, int64, defaultp>	i64vec1;$/;"	t	namespace:glm
i64vec1	.\fwd.hpp	/^	typedef vec<1, i64, defaultp>	i64vec1;$/;"	t	namespace:glm
i64vec2	.\ext\vector_int2_sized.hpp	/^	typedef vec<2, int64, defaultp>		i64vec2;$/;"	t	namespace:glm
i64vec2	.\fwd.hpp	/^	typedef vec<2, i64, defaultp>	i64vec2;$/;"	t	namespace:glm
i64vec3	.\ext\vector_int3_sized.hpp	/^	typedef vec<3, int64, defaultp>		i64vec3;$/;"	t	namespace:glm
i64vec3	.\fwd.hpp	/^	typedef vec<3, i64, defaultp>	i64vec3;$/;"	t	namespace:glm
i64vec4	.\ext\vector_int4_sized.hpp	/^	typedef vec<4, int64, defaultp>		i64vec4;$/;"	t	namespace:glm
i64vec4	.\fwd.hpp	/^	typedef vec<4, i64, defaultp>	i64vec4;$/;"	t	namespace:glm
i8	.\fwd.hpp	/^	typedef int8					i8;$/;"	t	namespace:glm
i8	.\gtc\type_precision.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm
i8mat2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int8, defaultp>				i8mat2;$/;"	t	namespace:glm
i8mat2x2	.\ext\matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int8, defaultp>				i8mat2x2;$/;"	t	namespace:glm
i8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int8, defaultp>	i8mat2x2;$/;"	t	namespace:glm
i8mat2x3	.\ext\matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int8, defaultp>				i8mat2x3;$/;"	t	namespace:glm
i8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int8, defaultp>	i8mat2x3;$/;"	t	namespace:glm
i8mat2x4	.\ext\matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int8, defaultp>				i8mat2x4;$/;"	t	namespace:glm
i8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int8, defaultp>	i8mat2x4;$/;"	t	namespace:glm
i8mat3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int8, defaultp>				i8mat3;$/;"	t	namespace:glm
i8mat3x2	.\ext\matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int8, defaultp>				i8mat3x2;$/;"	t	namespace:glm
i8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int8, defaultp>	i8mat3x2;$/;"	t	namespace:glm
i8mat3x3	.\ext\matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int8, defaultp>				i8mat3x3;$/;"	t	namespace:glm
i8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int8, defaultp>	i8mat3x3;$/;"	t	namespace:glm
i8mat3x4	.\ext\matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int8, defaultp>				i8mat3x4;$/;"	t	namespace:glm
i8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int8, defaultp>	i8mat3x4;$/;"	t	namespace:glm
i8mat4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int8, defaultp>				i8mat4;$/;"	t	namespace:glm
i8mat4x2	.\ext\matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int8, defaultp>				i8mat4x2;$/;"	t	namespace:glm
i8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int8, defaultp>	i8mat4x2;$/;"	t	namespace:glm
i8mat4x3	.\ext\matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int8, defaultp>				i8mat4x3;$/;"	t	namespace:glm
i8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int8, defaultp>	i8mat4x3;$/;"	t	namespace:glm
i8mat4x4	.\ext\matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int8, defaultp>				i8mat4x4;$/;"	t	namespace:glm
i8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int8, defaultp>	i8mat4x4;$/;"	t	namespace:glm
i8vec1	.\ext\vector_int1_sized.hpp	/^	typedef vec<1, int8, defaultp>	i8vec1;$/;"	t	namespace:glm
i8vec1	.\fwd.hpp	/^	typedef vec<1, i8, defaultp>	i8vec1;$/;"	t	namespace:glm
i8vec2	.\ext\vector_int2_sized.hpp	/^	typedef vec<2, int8, defaultp>		i8vec2;$/;"	t	namespace:glm
i8vec2	.\fwd.hpp	/^	typedef vec<2, i8, defaultp>	i8vec2;$/;"	t	namespace:glm
i8vec3	.\ext\vector_int3_sized.hpp	/^	typedef vec<3, int8, defaultp>		i8vec3;$/;"	t	namespace:glm
i8vec3	.\fwd.hpp	/^	typedef vec<3, i8, defaultp>	i8vec3;$/;"	t	namespace:glm
i8vec4	.\ext\vector_int4_sized.hpp	/^	typedef vec<4, int8, defaultp>		i8vec4;$/;"	t	namespace:glm
i8vec4	.\fwd.hpp	/^	typedef vec<4, i8, defaultp>	i8vec4;$/;"	t	namespace:glm
id	.\gtx\io.hpp	/^			static std::locale::id id;$/;"	m	class:glm::io::format_punct
identity	.\detail\qualifier.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static genType identity()$/;"	f	struct:glm::detail::init_gentype
imat2	.\ext\matrix_int2x2.hpp	/^	typedef mat<2, 2, int, defaultp>	imat2;$/;"	t	namespace:glm
imat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, defaultp>				imat2;$/;"	t	namespace:glm
imat2x2	.\ext\matrix_int2x2.hpp	/^	typedef mat<2, 2, int, defaultp>	imat2x2;$/;"	t	namespace:glm
imat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int, defaultp>	imat2x2;$/;"	t	namespace:glm
imat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, defaultp>				imat2x2;$/;"	t	namespace:glm
imat2x3	.\ext\matrix_int2x3.hpp	/^	typedef mat<2, 3, int, defaultp>	imat2x3;$/;"	t	namespace:glm
imat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int, defaultp>	imat2x3;$/;"	t	namespace:glm
imat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, int, defaultp>				imat2x3;$/;"	t	namespace:glm
imat2x4	.\ext\matrix_int2x4.hpp	/^	typedef mat<2, 4, int, defaultp>	imat2x4;$/;"	t	namespace:glm
imat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int, defaultp>	imat2x4;$/;"	t	namespace:glm
imat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, int, defaultp>				imat2x4;$/;"	t	namespace:glm
imat3	.\ext\matrix_int3x3.hpp	/^	typedef mat<3, 3, int, defaultp>	imat3;$/;"	t	namespace:glm
imat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, defaultp>				imat3;$/;"	t	namespace:glm
imat3x2	.\ext\matrix_int3x2.hpp	/^	typedef mat<3, 2, int, defaultp>	imat3x2;$/;"	t	namespace:glm
imat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int, defaultp>	imat3x2;$/;"	t	namespace:glm
imat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, int, defaultp>				imat3x2;$/;"	t	namespace:glm
imat3x3	.\ext\matrix_int3x3.hpp	/^	typedef mat<3, 3, int, defaultp>	imat3x3;$/;"	t	namespace:glm
imat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int, defaultp>	imat3x3;$/;"	t	namespace:glm
imat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, defaultp>				imat3x3;$/;"	t	namespace:glm
imat3x4	.\ext\matrix_int3x4.hpp	/^	typedef mat<3, 4, int, defaultp>	imat3x4;$/;"	t	namespace:glm
imat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int, defaultp>	imat3x4;$/;"	t	namespace:glm
imat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, int, defaultp>				imat3x4;$/;"	t	namespace:glm
imat4	.\ext\matrix_int4x4.hpp	/^	typedef mat<4, 4, int, defaultp>	imat4;$/;"	t	namespace:glm
imat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, defaultp>				imat4;$/;"	t	namespace:glm
imat4x2	.\ext\matrix_int4x2.hpp	/^	typedef mat<4, 2, int, defaultp>	imat4x2;$/;"	t	namespace:glm
imat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int, defaultp>	imat4x2;$/;"	t	namespace:glm
imat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, int, defaultp>				imat4x2;$/;"	t	namespace:glm
imat4x3	.\ext\matrix_int4x3.hpp	/^	typedef mat<4, 3, int, defaultp>	imat4x3;$/;"	t	namespace:glm
imat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int, defaultp>	imat4x3;$/;"	t	namespace:glm
imat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, int, defaultp>				imat4x3;$/;"	t	namespace:glm
imat4x4	.\ext\matrix_int4x4.hpp	/^	typedef mat<4, 4, int, defaultp>	imat4x4;$/;"	t	namespace:glm
imat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int, defaultp>	imat4x4;$/;"	t	namespace:glm
imat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, defaultp>				imat4x4;$/;"	t	namespace:glm
info_arch	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_platform	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_version	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version_internal	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_version_internal	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
init_gentype	.\detail\qualifier.hpp	/^	struct init_gentype$/;"	s	namespace:glm::detail
init_gentype	.\detail\qualifier.hpp	/^	struct init_gentype<genType, GENTYPE_MAT>$/;"	s	namespace:glm::detail
init_gentype	.\detail\qualifier.hpp	/^	struct init_gentype<genType, GENTYPE_QUAT>$/;"	s	namespace:glm::detail
int1	.\gtx\compatibility.hpp	/^	typedef int							int1;			\/\/!< \\brief integer vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int16	.\ext\scalar_int_sized.hpp	/^		typedef std::int16_t		int16;$/;"	t	namespace:glm::detail
int16	.\ext\scalar_int_sized.hpp	/^	typedef detail::int16		int16;$/;"	t	namespace:glm
int16	.\fwd.hpp	/^	typedef std::int16_t			int16;$/;"	t	namespace:glm
int16_t	.\fwd.hpp	/^	typedef int16					int16_t;$/;"	t	namespace:glm
int1x1	.\gtx\compatibility.hpp	/^	typedef int							int1x1;			\/\/!< \\brief integer matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2	.\gtx\compatibility.hpp	/^	typedef vec<2, int, highp>			int2;			\/\/!< \\brief integer vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x2	.\gtx\compatibility.hpp	/^	typedef mat<2, 2, int, highp>		int2x2;			\/\/!< \\brief integer matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x3	.\gtx\compatibility.hpp	/^	typedef mat<2, 3, int, highp>		int2x3;			\/\/!< \\brief integer matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x4	.\gtx\compatibility.hpp	/^	typedef mat<2, 4, int, highp>		int2x4;			\/\/!< \\brief integer matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3	.\gtx\compatibility.hpp	/^	typedef vec<3, int, highp>			int3;			\/\/!< \\brief integer vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int32	.\ext\scalar_int_sized.hpp	/^		typedef std::int32_t		int32;$/;"	t	namespace:glm::detail
int32	.\ext\scalar_int_sized.hpp	/^	typedef detail::int32		int32;$/;"	t	namespace:glm
int32	.\fwd.hpp	/^	typedef std::int32_t			int32;$/;"	t	namespace:glm
int32_t	.\fwd.hpp	/^	typedef int32					int32_t;$/;"	t	namespace:glm
int3x2	.\gtx\compatibility.hpp	/^	typedef mat<3, 2, int, highp>		int3x2;			\/\/!< \\brief integer matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3x3	.\gtx\compatibility.hpp	/^	typedef mat<3, 3, int, highp>		int3x3;			\/\/!< \\brief integer matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3x4	.\gtx\compatibility.hpp	/^	typedef mat<3, 4, int, highp>		int3x4;			\/\/!< \\brief integer matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4	.\gtx\compatibility.hpp	/^	typedef vec<4, int, highp>			int4;			\/\/!< \\brief integer vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x2	.\gtx\compatibility.hpp	/^	typedef mat<4, 2, int, highp>		int4x2;			\/\/!< \\brief integer matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x3	.\gtx\compatibility.hpp	/^	typedef mat<4, 3, int, highp>		int4x3;			\/\/!< \\brief integer matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x4	.\gtx\compatibility.hpp	/^	typedef mat<4, 4, int, highp>		int4x4;			\/\/!< \\brief integer matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int64	.\detail\setup.hpp	/^		typedef std::int64_t						int64;$/;"	t	namespace:glm::detail
int64	.\ext\scalar_int_sized.hpp	/^	typedef detail::int64		int64;$/;"	t	namespace:glm
int64	.\fwd.hpp	/^	typedef std::int64_t			int64;$/;"	t	namespace:glm
int64_t	.\fwd.hpp	/^	typedef int64					int64_t;$/;"	t	namespace:glm
int8	.\ext\scalar_int_sized.hpp	/^		typedef std::int8_t			int8;$/;"	t	namespace:glm::detail
int8	.\ext\scalar_int_sized.hpp	/^	typedef detail::int8		int8;$/;"	t	namespace:glm
int8	.\fwd.hpp	/^	typedef std::int8_t				int8;$/;"	t	namespace:glm
int8_t	.\fwd.hpp	/^	typedef int8					int8_t;$/;"	t	namespace:glm
int_type	.\detail\type_float.hpp	/^		typedef detail::int64 int_type;$/;"	t	union:glm::detail::float_t
int_type	.\detail\type_float.hpp	/^		typedef int int_type;$/;"	t	union:glm::detail::float_t
io	.\gtx\io.hpp	/^	namespace io$/;"	n	namespace:glm
is_aligned	.\detail\qualifier.hpp	/^		struct is_aligned<glm::aligned_highp>$/;"	s	namespace:glm::detail
is_aligned	.\detail\qualifier.hpp	/^		struct is_aligned<glm::aligned_lowp>$/;"	s	namespace:glm::detail
is_aligned	.\detail\qualifier.hpp	/^		struct is_aligned<glm::aligned_mediump>$/;"	s	namespace:glm::detail
is_aligned	.\detail\qualifier.hpp	/^	struct is_aligned$/;"	s	namespace:glm::detail
is_int	.\detail\setup.hpp	/^	struct is_int$/;"	s	namespace:glm::detail
is_int	.\detail\setup.hpp	/^	struct is_int<signed int>$/;"	s	namespace:glm::detail
is_int	.\detail\setup.hpp	/^	struct is_int<unsigned int>$/;"	s	namespace:glm::detail
is_int	.\ext\scalar_int_sized.hpp	/^	struct is_int<int16>$/;"	s	namespace:glm::detail
is_int	.\ext\scalar_int_sized.hpp	/^	struct is_int<int64>$/;"	s	namespace:glm::detail
is_int	.\ext\scalar_int_sized.hpp	/^	struct is_int<int8>$/;"	s	namespace:glm::detail
is_int	.\ext\scalar_uint_sized.hpp	/^	struct is_int<uint16>$/;"	s	namespace:glm::detail
is_int	.\ext\scalar_uint_sized.hpp	/^	struct is_int<uint64>$/;"	s	namespace:glm::detail
is_int	.\ext\scalar_uint_sized.hpp	/^	struct is_int<uint8>$/;"	s	namespace:glm::detail
is_mat	.\gtx\type_trait.hpp	/^		static bool const is_mat = false;$/;"	m	struct:glm::type
is_mat	.\gtx\type_trait.hpp	/^		static bool const is_mat = true;$/;"	m	struct:glm::type
is_quat	.\gtx\type_trait.hpp	/^		static bool const is_quat = false;$/;"	m	struct:glm::type
is_quat	.\gtx\type_trait.hpp	/^		static bool const is_quat = true;$/;"	m	struct:glm::type
is_vec	.\gtx\type_trait.hpp	/^		static bool const is_vec = false;$/;"	m	struct:glm::type
is_vec	.\gtx\type_trait.hpp	/^		static bool const is_vec = true;$/;"	m	struct:glm::type
isfinite	.\gtx\compatibility.hpp	32;"	d
isinf	.\detail\_fixes.hpp	20;"	d
isnan	.\detail\_fixes.hpp	15;"	d
ivec1	.\ext\vector_int1.hpp	/^	typedef vec<1, int, defaultp>			ivec1;$/;"	t	namespace:glm
ivec1	.\fwd.hpp	/^	typedef vec<1, int, defaultp>	ivec1;$/;"	t	namespace:glm
ivec2	.\ext\vector_int2.hpp	/^	typedef vec<2, int, defaultp>		ivec2;$/;"	t	namespace:glm
ivec2	.\fwd.hpp	/^	typedef vec<2, int, defaultp>	ivec2;$/;"	t	namespace:glm
ivec3	.\ext\vector_int3.hpp	/^	typedef vec<3, int, defaultp>		ivec3;$/;"	t	namespace:glm
ivec3	.\fwd.hpp	/^	typedef vec<3, int, defaultp>	ivec3;$/;"	t	namespace:glm
ivec4	.\ext\vector_int4.hpp	/^	typedef vec<4, int, defaultp>		ivec4;$/;"	t	namespace:glm
ivec4	.\fwd.hpp	/^	typedef vec<4, int, defaultp>	ivec4;$/;"	t	namespace:glm
length	.\detail\type_mat2x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat
length	.\detail\type_mat2x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat
length	.\detail\type_mat2x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat
length	.\detail\type_mat3x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat
length	.\detail\type_mat3x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat
length	.\detail\type_mat3x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat
length	.\detail\type_mat4x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }$/;"	f	struct:glm::mat
length	.\detail\type_mat4x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }$/;"	f	struct:glm::mat
length	.\detail\type_mat4x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::mat
length	.\detail\type_quat.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::qua
length	.\detail\type_vec1.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}$/;"	f	struct:glm::vec
length	.\detail\type_vec2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}$/;"	f	struct:glm::vec
length	.\detail\type_vec3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}$/;"	f	struct:glm::vec
length	.\detail\type_vec4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::vec
length	.\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}$/;"	f	struct:glm::tdualquat
length_t	.\detail\setup.hpp	/^		typedef size_t length_t;$/;"	t	namespace:glm
length_type	.\detail\type_mat2x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat2x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat2x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat3x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat3x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat3x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat4x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat4x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_mat4x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat
length_type	.\detail\type_quat.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::qua
length_type	.\detail\type_vec1.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec
length_type	.\detail\type_vec2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec
length_type	.\detail\type_vec3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec
length_type	.\detail\type_vec4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec
length_type	.\gtx\dual_quaternion.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tdualquat
lerp	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> lerp(const vec<2, T, Q>& x, const vec<2, T, Q>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> lerp(const vec<2, T, Q>& x, const vec<2, T, Q>& y, const vec<2, T, Q>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> lerp(const vec<3, T, Q>& x, const vec<3, T, Q>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> lerp(const vec<3, T, Q>& x, const vec<3, T, Q>& y, const vec<3, T, Q>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> lerp(const vec<4, T, Q>& x, const vec<4, T, Q>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> lerp(const vec<4, T, Q>& x, const vec<4, T, Q>& y, const vec<4, T, Q>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\gtx\compatibility.hpp	/^	template<typename T> GLM_FUNC_QUALIFIER T lerp(T x, T y, T a){return mix(x, y, a);}																					\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
locale_	.\gtx\io.hpp	/^			locale_type     locale_;$/;"	m	class:glm::io::basic_state_saver
locale_type	.\gtx\io.hpp	/^			typedef ::std::locale const            locale_type;$/;"	t	class:glm::io::basic_state_saver::std
log2	.\detail\_fixes.hpp	25;"	d
lowp	.\detail\qualifier.hpp	/^		lowp = packed_lowp, \/\/\/< By default lowp qualifier is also packed$/;"	e	enum:glm::qualifier
lowp_bvec1	.\ext\vector_bool1_precision.hpp	/^	typedef vec<1, bool, lowp>			lowp_bvec1;$/;"	t	namespace:glm
lowp_bvec1	.\fwd.hpp	/^	typedef vec<1, bool, lowp>		lowp_bvec1;$/;"	t	namespace:glm
lowp_bvec2	.\ext\vector_bool2_precision.hpp	/^	typedef vec<2, bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm
lowp_bvec2	.\fwd.hpp	/^	typedef vec<2, bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm
lowp_bvec3	.\ext\vector_bool3_precision.hpp	/^	typedef vec<3, bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm
lowp_bvec3	.\fwd.hpp	/^	typedef vec<3, bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm
lowp_bvec4	.\ext\vector_bool4_precision.hpp	/^	typedef vec<4, bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm
lowp_bvec4	.\fwd.hpp	/^	typedef vec<4, bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm
lowp_ddualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<double, lowp>		lowp_ddualquat;$/;"	t	namespace:glm
lowp_dmat2	.\ext\matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2;$/;"	t	namespace:glm
lowp_dmat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_dmat2;$/;"	t	namespace:glm
lowp_dmat2x2	.\ext\matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm
lowp_dmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm
lowp_dmat2x3	.\ext\matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm
lowp_dmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm
lowp_dmat2x4	.\ext\matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm
lowp_dmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm
lowp_dmat3	.\ext\matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3;$/;"	t	namespace:glm
lowp_dmat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_dmat3;$/;"	t	namespace:glm
lowp_dmat3x2	.\ext\matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm
lowp_dmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm
lowp_dmat3x3	.\ext\matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm
lowp_dmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm
lowp_dmat3x4	.\ext\matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm
lowp_dmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm
lowp_dmat4	.\ext\matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4;$/;"	t	namespace:glm
lowp_dmat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_dmat4;$/;"	t	namespace:glm
lowp_dmat4x2	.\ext\matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm
lowp_dmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm
lowp_dmat4x3	.\ext\matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm
lowp_dmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm
lowp_dmat4x4	.\ext\matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm
lowp_dmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm
lowp_dquat	.\ext\quaternion_double_precision.hpp	/^	typedef qua<double, lowp>		lowp_dquat;$/;"	t	namespace:glm
lowp_dquat	.\fwd.hpp	/^	typedef qua<double, lowp>			lowp_dquat;$/;"	t	namespace:glm
lowp_dualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_dualquat;$/;"	t	namespace:glm
lowp_dvec1	.\ext\vector_double1_precision.hpp	/^	typedef vec<1, double, lowp>		lowp_dvec1;$/;"	t	namespace:glm
lowp_dvec1	.\fwd.hpp	/^	typedef vec<1, f64, lowp>			lowp_dvec1;$/;"	t	namespace:glm
lowp_dvec2	.\ext\vector_double2_precision.hpp	/^	typedef vec<2, double, lowp>		lowp_dvec2;$/;"	t	namespace:glm
lowp_dvec2	.\fwd.hpp	/^	typedef vec<2, f64, lowp>			lowp_dvec2;$/;"	t	namespace:glm
lowp_dvec3	.\ext\vector_double3_precision.hpp	/^	typedef vec<3, double, lowp>		lowp_dvec3;$/;"	t	namespace:glm
lowp_dvec3	.\fwd.hpp	/^	typedef vec<3, f64, lowp>			lowp_dvec3;$/;"	t	namespace:glm
lowp_dvec4	.\ext\vector_double4_precision.hpp	/^	typedef vec<4, double, lowp>		lowp_dvec4;$/;"	t	namespace:glm
lowp_dvec4	.\fwd.hpp	/^	typedef vec<4, f64, lowp>			lowp_dvec4;$/;"	t	namespace:glm
lowp_f32	.\fwd.hpp	/^	typedef float					lowp_f32;$/;"	t	namespace:glm
lowp_f32	.\gtc\type_precision.hpp	/^	typedef float32 lowp_f32;$/;"	t	namespace:glm
lowp_f32mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_f32mat2;$/;"	t	namespace:glm
lowp_f32mat2	.\gtc\type_precision.hpp	/^	typedef lowp_f32mat2x2 lowp_f32mat2;$/;"	t	namespace:glm
lowp_f32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_f32mat2x2;$/;"	t	namespace:glm
lowp_f32mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, lowp> lowp_f32mat2x2;$/;"	t	namespace:glm
lowp_f32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_f32mat2x3;$/;"	t	namespace:glm
lowp_f32mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, lowp> lowp_f32mat2x3;$/;"	t	namespace:glm
lowp_f32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_f32mat2x4;$/;"	t	namespace:glm
lowp_f32mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, lowp> lowp_f32mat2x4;$/;"	t	namespace:glm
lowp_f32mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_f32mat3;$/;"	t	namespace:glm
lowp_f32mat3	.\gtc\type_precision.hpp	/^	typedef lowp_f32mat3x3 lowp_f32mat3;$/;"	t	namespace:glm
lowp_f32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_f32mat3x2;$/;"	t	namespace:glm
lowp_f32mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, lowp> lowp_f32mat3x2;$/;"	t	namespace:glm
lowp_f32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_f32mat3x3;$/;"	t	namespace:glm
lowp_f32mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, lowp> lowp_f32mat3x3;$/;"	t	namespace:glm
lowp_f32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_f32mat3x4;$/;"	t	namespace:glm
lowp_f32mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, lowp> lowp_f32mat3x4;$/;"	t	namespace:glm
lowp_f32mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_f32mat4;$/;"	t	namespace:glm
lowp_f32mat4	.\gtc\type_precision.hpp	/^	typedef lowp_f32mat4x4 lowp_f32mat4;$/;"	t	namespace:glm
lowp_f32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_f32mat4x2;$/;"	t	namespace:glm
lowp_f32mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, lowp> lowp_f32mat4x2;$/;"	t	namespace:glm
lowp_f32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_f32mat4x3;$/;"	t	namespace:glm
lowp_f32mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, lowp> lowp_f32mat4x3;$/;"	t	namespace:glm
lowp_f32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_f32mat4x4;$/;"	t	namespace:glm
lowp_f32mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, lowp> lowp_f32mat4x4;$/;"	t	namespace:glm
lowp_f32quat	.\fwd.hpp	/^	typedef qua<f32, lowp>				lowp_f32quat;$/;"	t	namespace:glm
lowp_f32quat	.\gtc\type_precision.hpp	/^	typedef qua<f32, lowp> lowp_f32quat;$/;"	t	namespace:glm
lowp_f32vec1	.\fwd.hpp	/^	typedef vec<1, f32, lowp>			lowp_f32vec1;$/;"	t	namespace:glm
lowp_f32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, f32, lowp> lowp_f32vec1;$/;"	t	namespace:glm
lowp_f32vec2	.\fwd.hpp	/^	typedef vec<2, f32, lowp>			lowp_f32vec2;$/;"	t	namespace:glm
lowp_f32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, f32, lowp> lowp_f32vec2;$/;"	t	namespace:glm
lowp_f32vec3	.\fwd.hpp	/^	typedef vec<3, f32, lowp>			lowp_f32vec3;$/;"	t	namespace:glm
lowp_f32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, f32, lowp> lowp_f32vec3;$/;"	t	namespace:glm
lowp_f32vec4	.\fwd.hpp	/^	typedef vec<4, f32, lowp>			lowp_f32vec4;$/;"	t	namespace:glm
lowp_f32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, f32, lowp> lowp_f32vec4;$/;"	t	namespace:glm
lowp_f64	.\fwd.hpp	/^	typedef double					lowp_f64;$/;"	t	namespace:glm
lowp_f64	.\gtc\type_precision.hpp	/^	typedef float64 lowp_f64;$/;"	t	namespace:glm
lowp_f64mat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_f64mat2;$/;"	t	namespace:glm
lowp_f64mat2	.\gtc\type_precision.hpp	/^	typedef lowp_f64mat2x2 lowp_f64mat2;$/;"	t	namespace:glm
lowp_f64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_f64mat2x2;$/;"	t	namespace:glm
lowp_f64mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f64, lowp> lowp_f64mat2x2;$/;"	t	namespace:glm
lowp_f64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f64, lowp>		lowp_f64mat2x3;$/;"	t	namespace:glm
lowp_f64mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f64, lowp> lowp_f64mat2x3;$/;"	t	namespace:glm
lowp_f64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f64, lowp>		lowp_f64mat2x4;$/;"	t	namespace:glm
lowp_f64mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f64, lowp> lowp_f64mat2x4;$/;"	t	namespace:glm
lowp_f64mat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_f64mat3;$/;"	t	namespace:glm
lowp_f64mat3	.\gtc\type_precision.hpp	/^	typedef lowp_f64mat3x3 lowp_f64mat3;$/;"	t	namespace:glm
lowp_f64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f64, lowp>		lowp_f64mat3x2;$/;"	t	namespace:glm
lowp_f64mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f64, lowp> lowp_f64mat3x2;$/;"	t	namespace:glm
lowp_f64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_f64mat3x3;$/;"	t	namespace:glm
lowp_f64mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f64, lowp> lowp_f64mat3x3;$/;"	t	namespace:glm
lowp_f64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f64, lowp>		lowp_f64mat3x4;$/;"	t	namespace:glm
lowp_f64mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f64, lowp> lowp_f64mat3x4;$/;"	t	namespace:glm
lowp_f64mat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_f64mat4;$/;"	t	namespace:glm
lowp_f64mat4	.\gtc\type_precision.hpp	/^	typedef lowp_f64mat4x4 lowp_f64mat4;$/;"	t	namespace:glm
lowp_f64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f64, lowp>		lowp_f64mat4x2;$/;"	t	namespace:glm
lowp_f64mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f64, lowp> lowp_f64mat4x2;$/;"	t	namespace:glm
lowp_f64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f64, lowp>		lowp_f64mat4x3;$/;"	t	namespace:glm
lowp_f64mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f64, lowp> lowp_f64mat4x3;$/;"	t	namespace:glm
lowp_f64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_f64mat4x4;$/;"	t	namespace:glm
lowp_f64mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f64, lowp> lowp_f64mat4x4;$/;"	t	namespace:glm
lowp_f64quat	.\fwd.hpp	/^	typedef qua<f64, lowp>				lowp_f64quat;$/;"	t	namespace:glm
lowp_f64quat	.\gtc\type_precision.hpp	/^	typedef qua<f64, lowp> lowp_f64quat;$/;"	t	namespace:glm
lowp_f64vec1	.\fwd.hpp	/^	typedef vec<1, f64, lowp>			lowp_f64vec1;$/;"	t	namespace:glm
lowp_f64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, f64, lowp> lowp_f64vec1;$/;"	t	namespace:glm
lowp_f64vec2	.\fwd.hpp	/^	typedef vec<2, f64, lowp>			lowp_f64vec2;$/;"	t	namespace:glm
lowp_f64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, f64, lowp> lowp_f64vec2;$/;"	t	namespace:glm
lowp_f64vec3	.\fwd.hpp	/^	typedef vec<3, f64, lowp>			lowp_f64vec3;$/;"	t	namespace:glm
lowp_f64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, f64, lowp> lowp_f64vec3;$/;"	t	namespace:glm
lowp_f64vec4	.\fwd.hpp	/^	typedef vec<4, f64, lowp>			lowp_f64vec4;$/;"	t	namespace:glm
lowp_f64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, f64, lowp> lowp_f64vec4;$/;"	t	namespace:glm
lowp_fdualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_fdualquat;$/;"	t	namespace:glm
lowp_float32	.\fwd.hpp	/^	typedef float					lowp_float32;$/;"	t	namespace:glm
lowp_float32	.\gtc\type_precision.hpp	/^	typedef float32 lowp_float32;$/;"	t	namespace:glm
lowp_float32_t	.\fwd.hpp	/^	typedef float					lowp_float32_t;$/;"	t	namespace:glm
lowp_float32_t	.\gtc\type_precision.hpp	/^	typedef float32 lowp_float32_t;$/;"	t	namespace:glm
lowp_float64	.\fwd.hpp	/^	typedef double					lowp_float64;$/;"	t	namespace:glm
lowp_float64	.\gtc\type_precision.hpp	/^	typedef float64 lowp_float64;$/;"	t	namespace:glm
lowp_float64_t	.\fwd.hpp	/^	typedef double					lowp_float64_t;$/;"	t	namespace:glm
lowp_float64_t	.\gtc\type_precision.hpp	/^	typedef float64 lowp_float64_t;$/;"	t	namespace:glm
lowp_fmat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_fmat2;$/;"	t	namespace:glm
lowp_fmat2	.\gtc\type_precision.hpp	/^	typedef lowp_fmat2x2 lowp_fmat2;$/;"	t	namespace:glm
lowp_fmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_fmat2x2;$/;"	t	namespace:glm
lowp_fmat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, lowp> lowp_fmat2x2;$/;"	t	namespace:glm
lowp_fmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_fmat2x3;$/;"	t	namespace:glm
lowp_fmat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, lowp> lowp_fmat2x3;$/;"	t	namespace:glm
lowp_fmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_fmat2x4;$/;"	t	namespace:glm
lowp_fmat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, lowp> lowp_fmat2x4;$/;"	t	namespace:glm
lowp_fmat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_fmat3;$/;"	t	namespace:glm
lowp_fmat3	.\gtc\type_precision.hpp	/^	typedef lowp_fmat3x3 lowp_fmat3;$/;"	t	namespace:glm
lowp_fmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_fmat3x2;$/;"	t	namespace:glm
lowp_fmat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, lowp> lowp_fmat3x2;$/;"	t	namespace:glm
lowp_fmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_fmat3x3;$/;"	t	namespace:glm
lowp_fmat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, lowp> lowp_fmat3x3;$/;"	t	namespace:glm
lowp_fmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_fmat3x4;$/;"	t	namespace:glm
lowp_fmat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, lowp> lowp_fmat3x4;$/;"	t	namespace:glm
lowp_fmat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_fmat4;$/;"	t	namespace:glm
lowp_fmat4	.\gtc\type_precision.hpp	/^	typedef lowp_fmat4x4 lowp_fmat4;$/;"	t	namespace:glm
lowp_fmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_fmat4x2;$/;"	t	namespace:glm
lowp_fmat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, lowp> lowp_fmat4x2;$/;"	t	namespace:glm
lowp_fmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_fmat4x3;$/;"	t	namespace:glm
lowp_fmat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, lowp> lowp_fmat4x3;$/;"	t	namespace:glm
lowp_fmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_fmat4x4;$/;"	t	namespace:glm
lowp_fmat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, lowp> lowp_fmat4x4;$/;"	t	namespace:glm
lowp_fquat	.\fwd.hpp	/^	typedef qua<float, lowp>			lowp_fquat;$/;"	t	namespace:glm
lowp_fvec1	.\fwd.hpp	/^	typedef vec<1, float, lowp>			lowp_fvec1;$/;"	t	namespace:glm
lowp_fvec1	.\gtc\type_precision.hpp	/^	typedef vec<1, float, lowp> lowp_fvec1;$/;"	t	namespace:glm
lowp_fvec2	.\fwd.hpp	/^	typedef vec<2, float, lowp>			lowp_fvec2;$/;"	t	namespace:glm
lowp_fvec2	.\gtc\type_precision.hpp	/^	typedef vec<2, float, lowp> lowp_fvec2;$/;"	t	namespace:glm
lowp_fvec3	.\fwd.hpp	/^	typedef vec<3, float, lowp>			lowp_fvec3;$/;"	t	namespace:glm
lowp_fvec3	.\gtc\type_precision.hpp	/^	typedef vec<3, float, lowp> lowp_fvec3;$/;"	t	namespace:glm
lowp_fvec4	.\fwd.hpp	/^	typedef vec<4, float, lowp>			lowp_fvec4;$/;"	t	namespace:glm
lowp_fvec4	.\gtc\type_precision.hpp	/^	typedef vec<4, float, lowp> lowp_fvec4;$/;"	t	namespace:glm
lowp_i16	.\fwd.hpp	/^	typedef int16					lowp_i16;$/;"	t	namespace:glm
lowp_i16	.\gtc\type_precision.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm
lowp_i16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int16, lowp>		lowp_i16mat2x2;$/;"	t	namespace:glm
lowp_i16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int16, lowp>		lowp_i16mat2x3;$/;"	t	namespace:glm
lowp_i16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int16, lowp>		lowp_i16mat2x4;$/;"	t	namespace:glm
lowp_i16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int16, lowp>		lowp_i16mat3x2;$/;"	t	namespace:glm
lowp_i16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int16, lowp>		lowp_i16mat3x3;$/;"	t	namespace:glm
lowp_i16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int16, lowp>		lowp_i16mat3x4;$/;"	t	namespace:glm
lowp_i16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int16, lowp>		lowp_i16mat4x2;$/;"	t	namespace:glm
lowp_i16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int16, lowp>		lowp_i16mat4x3;$/;"	t	namespace:glm
lowp_i16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int16, lowp>		lowp_i16mat4x4;$/;"	t	namespace:glm
lowp_i16vec1	.\fwd.hpp	/^	typedef vec<1, i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm
lowp_i16vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm
lowp_i16vec2	.\fwd.hpp	/^	typedef vec<2, i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm
lowp_i16vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm
lowp_i16vec3	.\fwd.hpp	/^	typedef vec<3, i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm
lowp_i16vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm
lowp_i16vec4	.\fwd.hpp	/^	typedef vec<4, i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm
lowp_i16vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm
lowp_i32	.\fwd.hpp	/^	typedef int32					lowp_i32;$/;"	t	namespace:glm
lowp_i32	.\gtc\type_precision.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm
lowp_i32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int32, lowp>		lowp_i32mat2x2;$/;"	t	namespace:glm
lowp_i32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int32, lowp>		lowp_i32mat2x3;$/;"	t	namespace:glm
lowp_i32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int32, lowp>		lowp_i32mat2x4;$/;"	t	namespace:glm
lowp_i32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int32, lowp>		lowp_i32mat3x2;$/;"	t	namespace:glm
lowp_i32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int32, lowp>		lowp_i32mat3x3;$/;"	t	namespace:glm
lowp_i32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int32, lowp>		lowp_i32mat3x4;$/;"	t	namespace:glm
lowp_i32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int32, lowp>		lowp_i32mat4x2;$/;"	t	namespace:glm
lowp_i32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int32, lowp>		lowp_i32mat4x3;$/;"	t	namespace:glm
lowp_i32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int32, lowp>		lowp_i32mat4x4;$/;"	t	namespace:glm
lowp_i32vec1	.\fwd.hpp	/^	typedef vec<1, i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm
lowp_i32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm
lowp_i32vec2	.\fwd.hpp	/^	typedef vec<2, i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm
lowp_i32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm
lowp_i32vec3	.\fwd.hpp	/^	typedef vec<3, i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm
lowp_i32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm
lowp_i32vec4	.\fwd.hpp	/^	typedef vec<4, i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm
lowp_i32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm
lowp_i64	.\fwd.hpp	/^	typedef int64					lowp_i64;$/;"	t	namespace:glm
lowp_i64	.\gtc\type_precision.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm
lowp_i64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int64, lowp>		lowp_i64mat2x2;$/;"	t	namespace:glm
lowp_i64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int64, lowp>		lowp_i64mat2x3;$/;"	t	namespace:glm
lowp_i64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int64, lowp>		lowp_i64mat2x4;$/;"	t	namespace:glm
lowp_i64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int64, lowp>		lowp_i64mat3x2;$/;"	t	namespace:glm
lowp_i64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int64, lowp>		lowp_i64mat3x3;$/;"	t	namespace:glm
lowp_i64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int64, lowp>		lowp_i64mat3x4;$/;"	t	namespace:glm
lowp_i64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int64, lowp>		lowp_i64mat4x2;$/;"	t	namespace:glm
lowp_i64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int64, lowp>		lowp_i64mat4x3;$/;"	t	namespace:glm
lowp_i64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int64, lowp>		lowp_i64mat4x4;$/;"	t	namespace:glm
lowp_i64vec1	.\fwd.hpp	/^	typedef vec<1, i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm
lowp_i64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm
lowp_i64vec2	.\fwd.hpp	/^	typedef vec<2, i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm
lowp_i64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm
lowp_i64vec3	.\fwd.hpp	/^	typedef vec<3, i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm
lowp_i64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm
lowp_i64vec4	.\fwd.hpp	/^	typedef vec<4, i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm
lowp_i64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm
lowp_i8	.\fwd.hpp	/^	typedef int8					lowp_i8;$/;"	t	namespace:glm
lowp_i8	.\gtc\type_precision.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm
lowp_i8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int8, lowp>		lowp_i8mat2x2;$/;"	t	namespace:glm
lowp_i8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int8, lowp>		lowp_i8mat2x3;$/;"	t	namespace:glm
lowp_i8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int8, lowp>		lowp_i8mat2x4;$/;"	t	namespace:glm
lowp_i8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int8, lowp>		lowp_i8mat3x2;$/;"	t	namespace:glm
lowp_i8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int8, lowp>		lowp_i8mat3x3;$/;"	t	namespace:glm
lowp_i8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int8, lowp>		lowp_i8mat3x4;$/;"	t	namespace:glm
lowp_i8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int8, lowp>		lowp_i8mat4x2;$/;"	t	namespace:glm
lowp_i8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int8, lowp>		lowp_i8mat4x3;$/;"	t	namespace:glm
lowp_i8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int8, lowp>		lowp_i8mat4x4;$/;"	t	namespace:glm
lowp_i8vec1	.\fwd.hpp	/^	typedef vec<1, i8, lowp>		lowp_i8vec1;$/;"	t	namespace:glm
lowp_i8vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i8, lowp>		lowp_i8vec1;$/;"	t	namespace:glm
lowp_i8vec2	.\fwd.hpp	/^	typedef vec<2, i8, lowp>		lowp_i8vec2;$/;"	t	namespace:glm
lowp_i8vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i8, lowp>		lowp_i8vec2;$/;"	t	namespace:glm
lowp_i8vec3	.\fwd.hpp	/^	typedef vec<3, i8, lowp>		lowp_i8vec3;$/;"	t	namespace:glm
lowp_i8vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i8, lowp>		lowp_i8vec3;$/;"	t	namespace:glm
lowp_i8vec4	.\fwd.hpp	/^	typedef vec<4, i8, lowp>		lowp_i8vec4;$/;"	t	namespace:glm
lowp_i8vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i8, lowp>		lowp_i8vec4;$/;"	t	namespace:glm
lowp_imat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, lowp>				lowp_imat2;$/;"	t	namespace:glm
lowp_imat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int, lowp>		lowp_imat2x2;$/;"	t	namespace:glm
lowp_imat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, lowp>				lowp_imat2x2;$/;"	t	namespace:glm
lowp_imat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int, lowp>		lowp_imat2x3;$/;"	t	namespace:glm
lowp_imat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, int, lowp>				lowp_imat2x3;$/;"	t	namespace:glm
lowp_imat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int, lowp>		lowp_imat2x4;$/;"	t	namespace:glm
lowp_imat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, int, lowp>				lowp_imat2x4;$/;"	t	namespace:glm
lowp_imat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, lowp>				lowp_imat3;$/;"	t	namespace:glm
lowp_imat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int, lowp>		lowp_imat3x2;$/;"	t	namespace:glm
lowp_imat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, int, lowp>				lowp_imat3x2;$/;"	t	namespace:glm
lowp_imat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int, lowp>		lowp_imat3x3;$/;"	t	namespace:glm
lowp_imat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, lowp>				lowp_imat3x3;$/;"	t	namespace:glm
lowp_imat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int, lowp>		lowp_imat3x4;$/;"	t	namespace:glm
lowp_imat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, int, lowp>				lowp_imat3x4;$/;"	t	namespace:glm
lowp_imat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, lowp>				lowp_imat4;$/;"	t	namespace:glm
lowp_imat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int, lowp>		lowp_imat4x2;$/;"	t	namespace:glm
lowp_imat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, int, lowp>				lowp_imat4x2;$/;"	t	namespace:glm
lowp_imat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int, lowp>		lowp_imat4x3;$/;"	t	namespace:glm
lowp_imat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, int, lowp>				lowp_imat4x3;$/;"	t	namespace:glm
lowp_imat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int, lowp>		lowp_imat4x4;$/;"	t	namespace:glm
lowp_imat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, lowp>				lowp_imat4x4;$/;"	t	namespace:glm
lowp_int16	.\fwd.hpp	/^	typedef int16					lowp_int16;$/;"	t	namespace:glm
lowp_int16	.\gtc\type_precision.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm
lowp_int16_t	.\fwd.hpp	/^	typedef int16					lowp_int16_t;$/;"	t	namespace:glm
lowp_int16_t	.\gtc\type_precision.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm
lowp_int32	.\fwd.hpp	/^	typedef int32					lowp_int32;$/;"	t	namespace:glm
lowp_int32	.\gtc\type_precision.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm
lowp_int32_t	.\fwd.hpp	/^	typedef int32					lowp_int32_t;$/;"	t	namespace:glm
lowp_int32_t	.\gtc\type_precision.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm
lowp_int64	.\fwd.hpp	/^	typedef int64					lowp_int64;$/;"	t	namespace:glm
lowp_int64	.\gtc\type_precision.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm
lowp_int64_t	.\fwd.hpp	/^	typedef int64					lowp_int64_t;$/;"	t	namespace:glm
lowp_int64_t	.\gtc\type_precision.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm
lowp_int8	.\fwd.hpp	/^	typedef int8					lowp_int8;$/;"	t	namespace:glm
lowp_int8	.\gtc\type_precision.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm
lowp_int8_t	.\fwd.hpp	/^	typedef int8					lowp_int8_t;$/;"	t	namespace:glm
lowp_int8_t	.\gtc\type_precision.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm
lowp_ivec1	.\fwd.hpp	/^	typedef vec<1, int, lowp>		lowp_ivec1;$/;"	t	namespace:glm
lowp_ivec1	.\gtc\type_precision.hpp	/^	typedef vec<1, int, lowp>		lowp_ivec1;$/;"	t	namespace:glm
lowp_ivec2	.\fwd.hpp	/^	typedef vec<2, int, lowp>		lowp_ivec2;$/;"	t	namespace:glm
lowp_ivec2	.\gtc\type_precision.hpp	/^	typedef vec<2, int, lowp>		lowp_ivec2;$/;"	t	namespace:glm
lowp_ivec3	.\fwd.hpp	/^	typedef vec<3, int, lowp>		lowp_ivec3;$/;"	t	namespace:glm
lowp_ivec3	.\gtc\type_precision.hpp	/^	typedef vec<3, int, lowp>		lowp_ivec3;$/;"	t	namespace:glm
lowp_ivec4	.\fwd.hpp	/^	typedef vec<4, int, lowp>		lowp_ivec4;$/;"	t	namespace:glm
lowp_ivec4	.\gtc\type_precision.hpp	/^	typedef vec<4, int, lowp>		lowp_ivec4;$/;"	t	namespace:glm
lowp_mat2	.\ext\matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, lowp>		lowp_mat2;$/;"	t	namespace:glm
lowp_mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_mat2;$/;"	t	namespace:glm
lowp_mat2x2	.\ext\matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm
lowp_mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_mat2x2;$/;"	t	namespace:glm
lowp_mat2x3	.\ext\matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm
lowp_mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_mat2x3;$/;"	t	namespace:glm
lowp_mat2x4	.\ext\matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm
lowp_mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_mat2x4;$/;"	t	namespace:glm
lowp_mat3	.\ext\matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, lowp>		lowp_mat3;$/;"	t	namespace:glm
lowp_mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_mat3;$/;"	t	namespace:glm
lowp_mat3x2	.\ext\matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm
lowp_mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_mat3x2;$/;"	t	namespace:glm
lowp_mat3x3	.\ext\matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm
lowp_mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_mat3x3;$/;"	t	namespace:glm
lowp_mat3x4	.\ext\matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm
lowp_mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_mat3x4;$/;"	t	namespace:glm
lowp_mat4	.\ext\matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, lowp>		lowp_mat4;$/;"	t	namespace:glm
lowp_mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_mat4;$/;"	t	namespace:glm
lowp_mat4x2	.\ext\matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm
lowp_mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_mat4x2;$/;"	t	namespace:glm
lowp_mat4x3	.\ext\matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm
lowp_mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_mat4x3;$/;"	t	namespace:glm
lowp_mat4x4	.\ext\matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm
lowp_mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_mat4x4;$/;"	t	namespace:glm
lowp_quat	.\ext\quaternion_float_precision.hpp	/^	typedef qua<float, lowp>		lowp_quat;$/;"	t	namespace:glm
lowp_quat	.\fwd.hpp	/^	typedef qua<float, lowp>			lowp_quat;$/;"	t	namespace:glm
lowp_u16	.\fwd.hpp	/^	typedef uint16					lowp_u16;$/;"	t	namespace:glm
lowp_u16	.\gtc\type_precision.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm
lowp_u16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint16, lowp>		lowp_u16mat2x2;$/;"	t	namespace:glm
lowp_u16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint16, lowp>		lowp_u16mat2x3;$/;"	t	namespace:glm
lowp_u16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint16, lowp>		lowp_u16mat2x4;$/;"	t	namespace:glm
lowp_u16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint16, lowp>		lowp_u16mat3x2;$/;"	t	namespace:glm
lowp_u16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint16, lowp>		lowp_u16mat3x3;$/;"	t	namespace:glm
lowp_u16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint16, lowp>		lowp_u16mat3x4;$/;"	t	namespace:glm
lowp_u16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint16, lowp>		lowp_u16mat4x2;$/;"	t	namespace:glm
lowp_u16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint16, lowp>		lowp_u16mat4x3;$/;"	t	namespace:glm
lowp_u16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint16, lowp>		lowp_u16mat4x4;$/;"	t	namespace:glm
lowp_u16vec1	.\fwd.hpp	/^	typedef vec<1, u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm
lowp_u16vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm
lowp_u16vec2	.\fwd.hpp	/^	typedef vec<2, u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm
lowp_u16vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm
lowp_u16vec3	.\fwd.hpp	/^	typedef vec<3, u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm
lowp_u16vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm
lowp_u16vec4	.\fwd.hpp	/^	typedef vec<4, u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm
lowp_u16vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm
lowp_u32	.\fwd.hpp	/^	typedef uint32					lowp_u32;$/;"	t	namespace:glm
lowp_u32	.\gtc\type_precision.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm
lowp_u32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint32, lowp>		lowp_u32mat2x2;$/;"	t	namespace:glm
lowp_u32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint32, lowp>		lowp_u32mat2x3;$/;"	t	namespace:glm
lowp_u32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint32, lowp>		lowp_u32mat2x4;$/;"	t	namespace:glm
lowp_u32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint32, lowp>		lowp_u32mat3x2;$/;"	t	namespace:glm
lowp_u32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint32, lowp>		lowp_u32mat3x3;$/;"	t	namespace:glm
lowp_u32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint32, lowp>		lowp_u32mat3x4;$/;"	t	namespace:glm
lowp_u32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint32, lowp>		lowp_u32mat4x2;$/;"	t	namespace:glm
lowp_u32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint32, lowp>		lowp_u32mat4x3;$/;"	t	namespace:glm
lowp_u32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint32, lowp>		lowp_u32mat4x4;$/;"	t	namespace:glm
lowp_u32vec1	.\fwd.hpp	/^	typedef vec<1, u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm
lowp_u32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm
lowp_u32vec2	.\fwd.hpp	/^	typedef vec<2, u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm
lowp_u32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm
lowp_u32vec3	.\fwd.hpp	/^	typedef vec<3, u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm
lowp_u32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm
lowp_u32vec4	.\fwd.hpp	/^	typedef vec<4, u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm
lowp_u32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm
lowp_u64	.\fwd.hpp	/^	typedef uint64					lowp_u64;$/;"	t	namespace:glm
lowp_u64	.\gtc\type_precision.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm
lowp_u64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint64, lowp>		lowp_u64mat2x2;$/;"	t	namespace:glm
lowp_u64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint64, lowp>		lowp_u64mat2x3;$/;"	t	namespace:glm
lowp_u64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint64, lowp>		lowp_u64mat2x4;$/;"	t	namespace:glm
lowp_u64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint64, lowp>		lowp_u64mat3x2;$/;"	t	namespace:glm
lowp_u64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint64, lowp>		lowp_u64mat3x3;$/;"	t	namespace:glm
lowp_u64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint64, lowp>		lowp_u64mat3x4;$/;"	t	namespace:glm
lowp_u64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint64, lowp>		lowp_u64mat4x2;$/;"	t	namespace:glm
lowp_u64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint64, lowp>		lowp_u64mat4x3;$/;"	t	namespace:glm
lowp_u64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint64, lowp>		lowp_u64mat4x4;$/;"	t	namespace:glm
lowp_u64vec1	.\fwd.hpp	/^	typedef vec<1, u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm
lowp_u64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm
lowp_u64vec2	.\fwd.hpp	/^	typedef vec<2, u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm
lowp_u64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm
lowp_u64vec3	.\fwd.hpp	/^	typedef vec<3, u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm
lowp_u64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm
lowp_u64vec4	.\fwd.hpp	/^	typedef vec<4, u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm
lowp_u64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm
lowp_u8	.\fwd.hpp	/^	typedef uint8					lowp_u8;$/;"	t	namespace:glm
lowp_u8	.\gtc\type_precision.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm
lowp_u8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint8, lowp>		lowp_u8mat2x2;$/;"	t	namespace:glm
lowp_u8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint8, lowp>		lowp_u8mat2x3;$/;"	t	namespace:glm
lowp_u8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint8, lowp>		lowp_u8mat2x4;$/;"	t	namespace:glm
lowp_u8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint8, lowp>		lowp_u8mat3x2;$/;"	t	namespace:glm
lowp_u8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint8, lowp>		lowp_u8mat3x3;$/;"	t	namespace:glm
lowp_u8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint8, lowp>		lowp_u8mat3x4;$/;"	t	namespace:glm
lowp_u8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint8, lowp>		lowp_u8mat4x2;$/;"	t	namespace:glm
lowp_u8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint8, lowp>		lowp_u8mat4x3;$/;"	t	namespace:glm
lowp_u8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint8, lowp>		lowp_u8mat4x4;$/;"	t	namespace:glm
lowp_u8vec1	.\fwd.hpp	/^	typedef vec<1, u8, lowp>		lowp_u8vec1;$/;"	t	namespace:glm
lowp_u8vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u8, lowp>		lowp_u8vec1;$/;"	t	namespace:glm
lowp_u8vec2	.\fwd.hpp	/^	typedef vec<2, u8, lowp>		lowp_u8vec2;$/;"	t	namespace:glm
lowp_u8vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u8, lowp>		lowp_u8vec2;$/;"	t	namespace:glm
lowp_u8vec3	.\fwd.hpp	/^	typedef vec<3, u8, lowp>		lowp_u8vec3;$/;"	t	namespace:glm
lowp_u8vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u8, lowp>		lowp_u8vec3;$/;"	t	namespace:glm
lowp_u8vec4	.\fwd.hpp	/^	typedef vec<4, u8, lowp>		lowp_u8vec4;$/;"	t	namespace:glm
lowp_u8vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u8, lowp>		lowp_u8vec4;$/;"	t	namespace:glm
lowp_uint16	.\fwd.hpp	/^	typedef uint16					lowp_uint16;$/;"	t	namespace:glm
lowp_uint16	.\gtc\type_precision.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm
lowp_uint16_t	.\fwd.hpp	/^	typedef uint16					lowp_uint16_t;$/;"	t	namespace:glm
lowp_uint16_t	.\gtc\type_precision.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm
lowp_uint32	.\fwd.hpp	/^	typedef uint32					lowp_uint32;$/;"	t	namespace:glm
lowp_uint32	.\gtc\type_precision.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm
lowp_uint32_t	.\fwd.hpp	/^	typedef uint32					lowp_uint32_t;$/;"	t	namespace:glm
lowp_uint32_t	.\gtc\type_precision.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm
lowp_uint64	.\fwd.hpp	/^	typedef uint64					lowp_uint64;$/;"	t	namespace:glm
lowp_uint64	.\gtc\type_precision.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm
lowp_uint64_t	.\fwd.hpp	/^	typedef uint64					lowp_uint64_t;$/;"	t	namespace:glm
lowp_uint64_t	.\gtc\type_precision.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm
lowp_uint8	.\fwd.hpp	/^	typedef uint8					lowp_uint8;$/;"	t	namespace:glm
lowp_uint8	.\gtc\type_precision.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm
lowp_uint8_t	.\fwd.hpp	/^	typedef uint8					lowp_uint8_t;$/;"	t	namespace:glm
lowp_uint8_t	.\gtc\type_precision.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm
lowp_umat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, lowp>				lowp_umat2;$/;"	t	namespace:glm
lowp_umat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint, lowp>		lowp_umat2x2;$/;"	t	namespace:glm
lowp_umat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, lowp>				lowp_umat2x2;$/;"	t	namespace:glm
lowp_umat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint, lowp>		lowp_umat2x3;$/;"	t	namespace:glm
lowp_umat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, uint, lowp>				lowp_umat2x3;$/;"	t	namespace:glm
lowp_umat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint, lowp>		lowp_umat2x4;$/;"	t	namespace:glm
lowp_umat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, uint, lowp>				lowp_umat2x4;$/;"	t	namespace:glm
lowp_umat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, lowp>				lowp_umat3;$/;"	t	namespace:glm
lowp_umat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint, lowp>		lowp_umat3x2;$/;"	t	namespace:glm
lowp_umat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, uint, lowp>				lowp_umat3x2;$/;"	t	namespace:glm
lowp_umat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint, lowp>		lowp_umat3x3;$/;"	t	namespace:glm
lowp_umat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, lowp>				lowp_umat3x3;$/;"	t	namespace:glm
lowp_umat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint, lowp>		lowp_umat3x4;$/;"	t	namespace:glm
lowp_umat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, uint, lowp>				lowp_umat3x4;$/;"	t	namespace:glm
lowp_umat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, lowp>				lowp_umat4;$/;"	t	namespace:glm
lowp_umat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint, lowp>		lowp_umat4x2;$/;"	t	namespace:glm
lowp_umat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, uint, lowp>				lowp_umat4x2;$/;"	t	namespace:glm
lowp_umat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint, lowp>		lowp_umat4x3;$/;"	t	namespace:glm
lowp_umat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, uint, lowp>				lowp_umat4x3;$/;"	t	namespace:glm
lowp_umat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint, lowp>		lowp_umat4x4;$/;"	t	namespace:glm
lowp_umat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, lowp>				lowp_umat4x4;$/;"	t	namespace:glm
lowp_uvec1	.\fwd.hpp	/^	typedef vec<1, uint, lowp>		lowp_uvec1;$/;"	t	namespace:glm
lowp_uvec1	.\gtc\type_precision.hpp	/^	typedef vec<1, uint, lowp>		lowp_uvec1;$/;"	t	namespace:glm
lowp_uvec2	.\fwd.hpp	/^	typedef vec<2, uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm
lowp_uvec2	.\gtc\type_precision.hpp	/^	typedef vec<2, uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm
lowp_uvec3	.\fwd.hpp	/^	typedef vec<3, uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm
lowp_uvec3	.\gtc\type_precision.hpp	/^	typedef vec<3, uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm
lowp_uvec4	.\fwd.hpp	/^	typedef vec<4, uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm
lowp_uvec4	.\gtc\type_precision.hpp	/^	typedef vec<4, uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm
lowp_vec1	.\ext\vector_float1_precision.hpp	/^	typedef vec<1, float, lowp>			lowp_vec1;$/;"	t	namespace:glm
lowp_vec1	.\fwd.hpp	/^	typedef vec<1, float, lowp>			lowp_vec1;$/;"	t	namespace:glm
lowp_vec2	.\ext\vector_float2_precision.hpp	/^	typedef vec<2, float, lowp>			lowp_vec2;$/;"	t	namespace:glm
lowp_vec2	.\fwd.hpp	/^	typedef vec<2, float, lowp>			lowp_vec2;$/;"	t	namespace:glm
lowp_vec3	.\ext\vector_float3_precision.hpp	/^	typedef vec<3, float, lowp>			lowp_vec3;$/;"	t	namespace:glm
lowp_vec3	.\fwd.hpp	/^	typedef vec<3, float, lowp>			lowp_vec3;$/;"	t	namespace:glm
lowp_vec4	.\ext\vector_float4_precision.hpp	/^	typedef vec<4, float, lowp>			lowp_vec4;$/;"	t	namespace:glm
lowp_vec4	.\fwd.hpp	/^	typedef vec<4, float, lowp>			lowp_vec4;$/;"	t	namespace:glm
madd_lane	.\simd\neon.h	/^		static float32x4_t madd_lane(float32x4_t acc, float32x4_t v, float32x4_t vlane, int lane) {$/;"	f	namespace:glm::neon
main	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^void main() {}$/;"	f
main	.\out\build\x64-Debug\CMakeFiles\ShowIncludes\main.c	/^int main(){}$/;"	f
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<char>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<int64>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<int>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<long>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<short>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<signed char>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<uint64>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<unsigned char>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<unsigned int>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<unsigned long>$/;"	s	namespace:glm::detail
make_unsigned	.\detail\setup.hpp	/^	struct make_unsigned<unsigned short>$/;"	s	namespace:glm::detail
mantissa	.\detail\type_float.hpp	/^		GLM_CONSTEXPR int_type mantissa() const { return i & ((1 << 23) - 1); }$/;"	f	union:glm::detail::float_t
mantissa	.\detail\type_float.hpp	/^		GLM_CONSTEXPR int_type mantissa() const { return i & ((int_type(1) << 52) - 1); }$/;"	f	union:glm::detail::float_t
mat	.\detail\type_mat2x2.hpp	/^	struct mat<2, 2, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat2x3.hpp	/^	struct mat<2, 3, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat2x4.hpp	/^	struct mat<2, 4, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat3x2.hpp	/^	struct mat<3, 2, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat3x3.hpp	/^	struct mat<3, 3, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat3x4.hpp	/^	struct mat<3, 4, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat4x2.hpp	/^	struct mat<4, 2, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat4x3.hpp	/^	struct mat<4, 3, T, Q>$/;"	s	namespace:glm
mat	.\detail\type_mat4x4.hpp	/^	struct mat<4, 4, T, Q>$/;"	s	namespace:glm
mat2	.\ext\matrix_float2x2.hpp	/^	typedef mat<2, 2, float, defaultp>		mat2;$/;"	t	namespace:glm
mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	mat2;$/;"	t	namespace:glm
mat2x2	.\ext\matrix_float2x2.hpp	/^	typedef mat<2, 2, float, defaultp>		mat2x2;$/;"	t	namespace:glm
mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	mat2x2;$/;"	t	namespace:glm
mat2x3	.\ext\matrix_float2x3.hpp	/^	typedef mat<2, 3, float, defaultp>		mat2x3;$/;"	t	namespace:glm
mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	mat2x3;$/;"	t	namespace:glm
mat2x4	.\ext\matrix_float2x4.hpp	/^	typedef mat<2, 4, float, defaultp>		mat2x4;$/;"	t	namespace:glm
mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	mat2x4;$/;"	t	namespace:glm
mat3	.\ext\matrix_float3x3.hpp	/^	typedef mat<3, 3, float, defaultp>			mat3;$/;"	t	namespace:glm
mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	mat3;$/;"	t	namespace:glm
mat3x2	.\ext\matrix_float3x2.hpp	/^	typedef mat<3, 2, float, defaultp>			mat3x2;$/;"	t	namespace:glm
mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	mat3x2;$/;"	t	namespace:glm
mat3x3	.\ext\matrix_float3x3.hpp	/^	typedef mat<3, 3, float, defaultp>			mat3x3;$/;"	t	namespace:glm
mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	mat3x3;$/;"	t	namespace:glm
mat3x4	.\ext\matrix_float3x4.hpp	/^	typedef mat<3, 4, float, defaultp>			mat3x4;$/;"	t	namespace:glm
mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	mat3x4;$/;"	t	namespace:glm
mat4	.\ext\matrix_float4x4.hpp	/^	typedef mat<4, 4, float, defaultp>			mat4;$/;"	t	namespace:glm
mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	mat4;$/;"	t	namespace:glm
mat4x2	.\ext\matrix_float4x2.hpp	/^	typedef mat<4, 2, float, defaultp>			mat4x2;$/;"	t	namespace:glm
mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	mat4x2;$/;"	t	namespace:glm
mat4x3	.\ext\matrix_float4x3.hpp	/^	typedef mat<4, 3, float, defaultp>			mat4x3;$/;"	t	namespace:glm
mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	mat4x3;$/;"	t	namespace:glm
mat4x4	.\ext\matrix_float4x4.hpp	/^	typedef mat<4, 4, float, defaultp>			mat4x4;$/;"	t	namespace:glm
mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	mat4x4;$/;"	t	namespace:glm
max	.\detail\_fixes.hpp	5;"	d
mediump	.\detail\qualifier.hpp	/^		mediump = packed_mediump, \/\/\/< By default mediump qualifier is also packed$/;"	e	enum:glm::qualifier
mediump_bvec1	.\ext\vector_bool1_precision.hpp	/^	typedef vec<1, bool, mediump>		mediump_bvec1;$/;"	t	namespace:glm
mediump_bvec1	.\fwd.hpp	/^	typedef vec<1, bool, mediump>	mediump_bvec1;$/;"	t	namespace:glm
mediump_bvec2	.\ext\vector_bool2_precision.hpp	/^	typedef vec<2, bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm
mediump_bvec2	.\fwd.hpp	/^	typedef vec<2, bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm
mediump_bvec3	.\ext\vector_bool3_precision.hpp	/^	typedef vec<3, bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm
mediump_bvec3	.\fwd.hpp	/^	typedef vec<3, bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm
mediump_bvec4	.\ext\vector_bool4_precision.hpp	/^	typedef vec<4, bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm
mediump_bvec4	.\fwd.hpp	/^	typedef vec<4, bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm
mediump_ddualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<double, mediump>	mediump_ddualquat;$/;"	t	namespace:glm
mediump_dmat2	.\ext\matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2;$/;"	t	namespace:glm
mediump_dmat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_dmat2;$/;"	t	namespace:glm
mediump_dmat2x2	.\ext\matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm
mediump_dmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm
mediump_dmat2x3	.\ext\matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm
mediump_dmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm
mediump_dmat2x4	.\ext\matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm
mediump_dmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm
mediump_dmat3	.\ext\matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3;$/;"	t	namespace:glm
mediump_dmat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_dmat3;$/;"	t	namespace:glm
mediump_dmat3x2	.\ext\matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm
mediump_dmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm
mediump_dmat3x3	.\ext\matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm
mediump_dmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm
mediump_dmat3x4	.\ext\matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm
mediump_dmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm
mediump_dmat4	.\ext\matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4;$/;"	t	namespace:glm
mediump_dmat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_dmat4;$/;"	t	namespace:glm
mediump_dmat4x2	.\ext\matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm
mediump_dmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm
mediump_dmat4x3	.\ext\matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm
mediump_dmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm
mediump_dmat4x4	.\ext\matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm
mediump_dmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm
mediump_dquat	.\ext\quaternion_double_precision.hpp	/^	typedef qua<double, mediump>	mediump_dquat;$/;"	t	namespace:glm
mediump_dquat	.\fwd.hpp	/^	typedef qua<double, mediump>		mediump_dquat;$/;"	t	namespace:glm
mediump_dualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_dualquat;$/;"	t	namespace:glm
mediump_dvec1	.\ext\vector_double1_precision.hpp	/^	typedef vec<1, double, mediump>		mediump_dvec1;$/;"	t	namespace:glm
mediump_dvec1	.\fwd.hpp	/^	typedef vec<1, f64, mediump>		mediump_dvec1;$/;"	t	namespace:glm
mediump_dvec2	.\ext\vector_double2_precision.hpp	/^	typedef vec<2, double, mediump>		mediump_dvec2;$/;"	t	namespace:glm
mediump_dvec2	.\fwd.hpp	/^	typedef vec<2, f64, mediump>		mediump_dvec2;$/;"	t	namespace:glm
mediump_dvec3	.\ext\vector_double3_precision.hpp	/^	typedef vec<3, double, mediump>		mediump_dvec3;$/;"	t	namespace:glm
mediump_dvec3	.\fwd.hpp	/^	typedef vec<3, f64, mediump>		mediump_dvec3;$/;"	t	namespace:glm
mediump_dvec4	.\ext\vector_double4_precision.hpp	/^	typedef vec<4, double, mediump>		mediump_dvec4;$/;"	t	namespace:glm
mediump_dvec4	.\fwd.hpp	/^	typedef vec<4, f64, mediump>		mediump_dvec4;$/;"	t	namespace:glm
mediump_f32	.\fwd.hpp	/^	typedef float					mediump_f32;$/;"	t	namespace:glm
mediump_f32	.\gtc\type_precision.hpp	/^	typedef float32 mediump_f32;$/;"	t	namespace:glm
mediump_f32mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_f32mat2;$/;"	t	namespace:glm
mediump_f32mat2	.\gtc\type_precision.hpp	/^	typedef mediump_f32mat2x2 mediump_f32mat2;$/;"	t	namespace:glm
mediump_f32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_f32mat2x2;$/;"	t	namespace:glm
mediump_f32mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, mediump> mediump_f32mat2x2;$/;"	t	namespace:glm
mediump_f32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_f32mat2x3;$/;"	t	namespace:glm
mediump_f32mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, mediump> mediump_f32mat2x3;$/;"	t	namespace:glm
mediump_f32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_f32mat2x4;$/;"	t	namespace:glm
mediump_f32mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, mediump> mediump_f32mat2x4;$/;"	t	namespace:glm
mediump_f32mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_f32mat3;$/;"	t	namespace:glm
mediump_f32mat3	.\gtc\type_precision.hpp	/^	typedef mediump_f32mat3x3 mediump_f32mat3;$/;"	t	namespace:glm
mediump_f32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_f32mat3x2;$/;"	t	namespace:glm
mediump_f32mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, mediump> mediump_f32mat3x2;$/;"	t	namespace:glm
mediump_f32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_f32mat3x3;$/;"	t	namespace:glm
mediump_f32mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, mediump> mediump_f32mat3x3;$/;"	t	namespace:glm
mediump_f32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_f32mat3x4;$/;"	t	namespace:glm
mediump_f32mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, mediump> mediump_f32mat3x4;$/;"	t	namespace:glm
mediump_f32mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_f32mat4;$/;"	t	namespace:glm
mediump_f32mat4	.\gtc\type_precision.hpp	/^	typedef mediump_f32mat4x4 mediump_f32mat4;$/;"	t	namespace:glm
mediump_f32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_f32mat4x2;$/;"	t	namespace:glm
mediump_f32mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, mediump> mediump_f32mat4x2;$/;"	t	namespace:glm
mediump_f32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_f32mat4x3;$/;"	t	namespace:glm
mediump_f32mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, mediump> mediump_f32mat4x3;$/;"	t	namespace:glm
mediump_f32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_f32mat4x4;$/;"	t	namespace:glm
mediump_f32mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, mediump> mediump_f32mat4x4;$/;"	t	namespace:glm
mediump_f32quat	.\fwd.hpp	/^	typedef qua<f32, mediump>			mediump_f32quat;$/;"	t	namespace:glm
mediump_f32quat	.\gtc\type_precision.hpp	/^	typedef qua<f32, mediump> mediump_f32quat;$/;"	t	namespace:glm
mediump_f32vec1	.\fwd.hpp	/^	typedef vec<1, f32, mediump>		mediump_f32vec1;$/;"	t	namespace:glm
mediump_f32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, f32, mediump> mediump_f32vec1;$/;"	t	namespace:glm
mediump_f32vec2	.\fwd.hpp	/^	typedef vec<2, f32, mediump>		mediump_f32vec2;$/;"	t	namespace:glm
mediump_f32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, f32, mediump> mediump_f32vec2;$/;"	t	namespace:glm
mediump_f32vec3	.\fwd.hpp	/^	typedef vec<3, f32, mediump>		mediump_f32vec3;$/;"	t	namespace:glm
mediump_f32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, f32, mediump> mediump_f32vec3;$/;"	t	namespace:glm
mediump_f32vec4	.\fwd.hpp	/^	typedef vec<4, f32, mediump>		mediump_f32vec4;$/;"	t	namespace:glm
mediump_f32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, f32, mediump> mediump_f32vec4;$/;"	t	namespace:glm
mediump_f64	.\fwd.hpp	/^	typedef double					mediump_f64;$/;"	t	namespace:glm
mediump_f64	.\gtc\type_precision.hpp	/^	typedef float64 mediump_f64;$/;"	t	namespace:glm
mediump_f64mat2	.\fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_f64mat2;$/;"	t	namespace:glm
mediump_f64mat2	.\gtc\type_precision.hpp	/^	typedef mediump_f64mat2x2 mediump_f64mat2;$/;"	t	namespace:glm
mediump_f64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_f64mat2x2;$/;"	t	namespace:glm
mediump_f64mat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f64, mediump> mediump_f64mat2x2;$/;"	t	namespace:glm
mediump_f64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f64, mediump>		mediump_f64mat2x3;$/;"	t	namespace:glm
mediump_f64mat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f64, mediump> mediump_f64mat2x3;$/;"	t	namespace:glm
mediump_f64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f64, mediump>		mediump_f64mat2x4;$/;"	t	namespace:glm
mediump_f64mat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f64, mediump> mediump_f64mat2x4;$/;"	t	namespace:glm
mediump_f64mat3	.\fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_f64mat3;$/;"	t	namespace:glm
mediump_f64mat3	.\gtc\type_precision.hpp	/^	typedef mediump_f64mat3x3 mediump_f64mat3;$/;"	t	namespace:glm
mediump_f64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f64, mediump>		mediump_f64mat3x2;$/;"	t	namespace:glm
mediump_f64mat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f64, mediump> mediump_f64mat3x2;$/;"	t	namespace:glm
mediump_f64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_f64mat3x3;$/;"	t	namespace:glm
mediump_f64mat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f64, mediump> mediump_f64mat3x3;$/;"	t	namespace:glm
mediump_f64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f64, mediump>		mediump_f64mat3x4;$/;"	t	namespace:glm
mediump_f64mat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f64, mediump> mediump_f64mat3x4;$/;"	t	namespace:glm
mediump_f64mat4	.\fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_f64mat4;$/;"	t	namespace:glm
mediump_f64mat4	.\gtc\type_precision.hpp	/^	typedef mediump_f64mat4x4 mediump_f64mat4;$/;"	t	namespace:glm
mediump_f64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f64, mediump>		mediump_f64mat4x2;$/;"	t	namespace:glm
mediump_f64mat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f64, mediump> mediump_f64mat4x2;$/;"	t	namespace:glm
mediump_f64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f64, mediump>		mediump_f64mat4x3;$/;"	t	namespace:glm
mediump_f64mat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f64, mediump> mediump_f64mat4x3;$/;"	t	namespace:glm
mediump_f64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_f64mat4x4;$/;"	t	namespace:glm
mediump_f64mat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f64, mediump> mediump_f64mat4x4;$/;"	t	namespace:glm
mediump_f64quat	.\fwd.hpp	/^	typedef qua<f64, mediump>			mediump_f64quat;$/;"	t	namespace:glm
mediump_f64quat	.\gtc\type_precision.hpp	/^	typedef qua<f64, mediump> mediump_f64quat;$/;"	t	namespace:glm
mediump_f64vec1	.\fwd.hpp	/^	typedef vec<1, f64, mediump>		mediump_f64vec1;$/;"	t	namespace:glm
mediump_f64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, f64, mediump> mediump_f64vec1;$/;"	t	namespace:glm
mediump_f64vec2	.\fwd.hpp	/^	typedef vec<2, f64, mediump>		mediump_f64vec2;$/;"	t	namespace:glm
mediump_f64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, f64, mediump> mediump_f64vec2;$/;"	t	namespace:glm
mediump_f64vec3	.\fwd.hpp	/^	typedef vec<3, f64, mediump>		mediump_f64vec3;$/;"	t	namespace:glm
mediump_f64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, f64, mediump> mediump_f64vec3;$/;"	t	namespace:glm
mediump_f64vec4	.\fwd.hpp	/^	typedef vec<4, f64, mediump>		mediump_f64vec4;$/;"	t	namespace:glm
mediump_f64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, f64, mediump> mediump_f64vec4;$/;"	t	namespace:glm
mediump_fdualquat	.\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_fdualquat;$/;"	t	namespace:glm
mediump_float32	.\fwd.hpp	/^	typedef float					mediump_float32;$/;"	t	namespace:glm
mediump_float32	.\gtc\type_precision.hpp	/^	typedef float32 mediump_float32;$/;"	t	namespace:glm
mediump_float32_t	.\fwd.hpp	/^	typedef float					mediump_float32_t;$/;"	t	namespace:glm
mediump_float32_t	.\gtc\type_precision.hpp	/^	typedef float32 mediump_float32_t;$/;"	t	namespace:glm
mediump_float64	.\fwd.hpp	/^	typedef double					mediump_float64;$/;"	t	namespace:glm
mediump_float64	.\gtc\type_precision.hpp	/^	typedef float64 mediump_float64;$/;"	t	namespace:glm
mediump_float64_t	.\fwd.hpp	/^	typedef double					mediump_float64_t;$/;"	t	namespace:glm
mediump_float64_t	.\gtc\type_precision.hpp	/^	typedef float64 mediump_float64_t;$/;"	t	namespace:glm
mediump_fmat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_fmat2;$/;"	t	namespace:glm
mediump_fmat2	.\gtc\type_precision.hpp	/^	typedef mediump_fmat2x2 mediump_fmat2;$/;"	t	namespace:glm
mediump_fmat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_fmat2x2;$/;"	t	namespace:glm
mediump_fmat2x2	.\gtc\type_precision.hpp	/^	typedef mat<2, 2, f32, mediump> mediump_fmat2x2;$/;"	t	namespace:glm
mediump_fmat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_fmat2x3;$/;"	t	namespace:glm
mediump_fmat2x3	.\gtc\type_precision.hpp	/^	typedef mat<2, 3, f32, mediump> mediump_fmat2x3;$/;"	t	namespace:glm
mediump_fmat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_fmat2x4;$/;"	t	namespace:glm
mediump_fmat2x4	.\gtc\type_precision.hpp	/^	typedef mat<2, 4, f32, mediump> mediump_fmat2x4;$/;"	t	namespace:glm
mediump_fmat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_fmat3;$/;"	t	namespace:glm
mediump_fmat3	.\gtc\type_precision.hpp	/^	typedef mediump_fmat3x3 mediump_fmat3;$/;"	t	namespace:glm
mediump_fmat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_fmat3x2;$/;"	t	namespace:glm
mediump_fmat3x2	.\gtc\type_precision.hpp	/^	typedef mat<3, 2, f32, mediump> mediump_fmat3x2;$/;"	t	namespace:glm
mediump_fmat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_fmat3x3;$/;"	t	namespace:glm
mediump_fmat3x3	.\gtc\type_precision.hpp	/^	typedef mat<3, 3, f32, mediump> mediump_fmat3x3;$/;"	t	namespace:glm
mediump_fmat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_fmat3x4;$/;"	t	namespace:glm
mediump_fmat3x4	.\gtc\type_precision.hpp	/^	typedef mat<3, 4, f32, mediump> mediump_fmat3x4;$/;"	t	namespace:glm
mediump_fmat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_fmat4;$/;"	t	namespace:glm
mediump_fmat4	.\gtc\type_precision.hpp	/^	typedef mediump_fmat4x4 mediump_fmat4;$/;"	t	namespace:glm
mediump_fmat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_fmat4x2;$/;"	t	namespace:glm
mediump_fmat4x2	.\gtc\type_precision.hpp	/^	typedef mat<4, 2, f32, mediump> mediump_fmat4x2;$/;"	t	namespace:glm
mediump_fmat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_fmat4x3;$/;"	t	namespace:glm
mediump_fmat4x3	.\gtc\type_precision.hpp	/^	typedef mat<4, 3, f32, mediump> mediump_fmat4x3;$/;"	t	namespace:glm
mediump_fmat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_fmat4x4;$/;"	t	namespace:glm
mediump_fmat4x4	.\gtc\type_precision.hpp	/^	typedef mat<4, 4, f32, mediump> mediump_fmat4x4;$/;"	t	namespace:glm
mediump_fquat	.\fwd.hpp	/^	typedef qua<float, mediump>			mediump_fquat;$/;"	t	namespace:glm
mediump_fvec1	.\fwd.hpp	/^	typedef vec<1, float, mediump>		mediump_fvec1;$/;"	t	namespace:glm
mediump_fvec1	.\gtc\type_precision.hpp	/^	typedef vec<1, float, mediump> mediump_fvec1;$/;"	t	namespace:glm
mediump_fvec2	.\fwd.hpp	/^	typedef vec<2, float, mediump>		mediump_fvec2;$/;"	t	namespace:glm
mediump_fvec2	.\gtc\type_precision.hpp	/^	typedef vec<2, float, mediump> mediump_fvec2;$/;"	t	namespace:glm
mediump_fvec3	.\fwd.hpp	/^	typedef vec<3, float, mediump>		mediump_fvec3;$/;"	t	namespace:glm
mediump_fvec3	.\gtc\type_precision.hpp	/^	typedef vec<3, float, mediump> mediump_fvec3;$/;"	t	namespace:glm
mediump_fvec4	.\fwd.hpp	/^	typedef vec<4, float, mediump>		mediump_fvec4;$/;"	t	namespace:glm
mediump_fvec4	.\gtc\type_precision.hpp	/^	typedef vec<4, float, mediump> mediump_fvec4;$/;"	t	namespace:glm
mediump_i16	.\fwd.hpp	/^	typedef int16					mediump_i16;$/;"	t	namespace:glm
mediump_i16	.\gtc\type_precision.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm
mediump_i16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int16, mediump>	mediump_i16mat2x2;$/;"	t	namespace:glm
mediump_i16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int16, mediump>	mediump_i16mat2x3;$/;"	t	namespace:glm
mediump_i16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int16, mediump>	mediump_i16mat2x4;$/;"	t	namespace:glm
mediump_i16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int16, mediump>	mediump_i16mat3x2;$/;"	t	namespace:glm
mediump_i16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int16, mediump>	mediump_i16mat3x3;$/;"	t	namespace:glm
mediump_i16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int16, mediump>	mediump_i16mat3x4;$/;"	t	namespace:glm
mediump_i16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int16, mediump>	mediump_i16mat4x2;$/;"	t	namespace:glm
mediump_i16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int16, mediump>	mediump_i16mat4x3;$/;"	t	namespace:glm
mediump_i16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int16, mediump>	mediump_i16mat4x4;$/;"	t	namespace:glm
mediump_i16vec1	.\fwd.hpp	/^	typedef vec<1, i16, mediump>	mediump_i16vec1;$/;"	t	namespace:glm
mediump_i16vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i16, mediump>	mediump_i16vec1;$/;"	t	namespace:glm
mediump_i16vec2	.\fwd.hpp	/^	typedef vec<2, i16, mediump>	mediump_i16vec2;$/;"	t	namespace:glm
mediump_i16vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i16, mediump>	mediump_i16vec2;$/;"	t	namespace:glm
mediump_i16vec3	.\fwd.hpp	/^	typedef vec<3, i16, mediump>	mediump_i16vec3;$/;"	t	namespace:glm
mediump_i16vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i16, mediump>	mediump_i16vec3;$/;"	t	namespace:glm
mediump_i16vec4	.\fwd.hpp	/^	typedef vec<4, i16, mediump>	mediump_i16vec4;$/;"	t	namespace:glm
mediump_i16vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i16, mediump>	mediump_i16vec4;$/;"	t	namespace:glm
mediump_i32	.\fwd.hpp	/^	typedef int32					mediump_i32;$/;"	t	namespace:glm
mediump_i32	.\gtc\type_precision.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm
mediump_i32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int32, mediump>	mediump_i32mat2x2;$/;"	t	namespace:glm
mediump_i32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int32, mediump>	mediump_i32mat2x3;$/;"	t	namespace:glm
mediump_i32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int32, mediump>	mediump_i32mat2x4;$/;"	t	namespace:glm
mediump_i32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int32, mediump>	mediump_i32mat3x2;$/;"	t	namespace:glm
mediump_i32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int32, mediump>	mediump_i32mat3x3;$/;"	t	namespace:glm
mediump_i32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int32, mediump>	mediump_i32mat3x4;$/;"	t	namespace:glm
mediump_i32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int32, mediump>	mediump_i32mat4x2;$/;"	t	namespace:glm
mediump_i32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int32, mediump>	mediump_i32mat4x3;$/;"	t	namespace:glm
mediump_i32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int32, mediump>	mediump_i32mat4x4;$/;"	t	namespace:glm
mediump_i32vec1	.\fwd.hpp	/^	typedef vec<1, i32, mediump>	mediump_i32vec1;$/;"	t	namespace:glm
mediump_i32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i32, mediump>	mediump_i32vec1;$/;"	t	namespace:glm
mediump_i32vec2	.\fwd.hpp	/^	typedef vec<2, i32, mediump>	mediump_i32vec2;$/;"	t	namespace:glm
mediump_i32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i32, mediump>	mediump_i32vec2;$/;"	t	namespace:glm
mediump_i32vec3	.\fwd.hpp	/^	typedef vec<3, i32, mediump>	mediump_i32vec3;$/;"	t	namespace:glm
mediump_i32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i32, mediump>	mediump_i32vec3;$/;"	t	namespace:glm
mediump_i32vec4	.\fwd.hpp	/^	typedef vec<4, i32, mediump>	mediump_i32vec4;$/;"	t	namespace:glm
mediump_i32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i32, mediump>	mediump_i32vec4;$/;"	t	namespace:glm
mediump_i64	.\fwd.hpp	/^	typedef int64					mediump_i64;$/;"	t	namespace:glm
mediump_i64	.\gtc\type_precision.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm
mediump_i64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int64, mediump>	mediump_i64mat2x2;$/;"	t	namespace:glm
mediump_i64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int64, mediump>	mediump_i64mat2x3;$/;"	t	namespace:glm
mediump_i64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int64, mediump>	mediump_i64mat2x4;$/;"	t	namespace:glm
mediump_i64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int64, mediump>	mediump_i64mat3x2;$/;"	t	namespace:glm
mediump_i64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int64, mediump>	mediump_i64mat3x3;$/;"	t	namespace:glm
mediump_i64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int64, mediump>	mediump_i64mat3x4;$/;"	t	namespace:glm
mediump_i64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int64, mediump>	mediump_i64mat4x2;$/;"	t	namespace:glm
mediump_i64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int64, mediump>	mediump_i64mat4x3;$/;"	t	namespace:glm
mediump_i64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int64, mediump>	mediump_i64mat4x4;$/;"	t	namespace:glm
mediump_i64vec1	.\fwd.hpp	/^	typedef vec<1, i64, mediump>	mediump_i64vec1;$/;"	t	namespace:glm
mediump_i64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i64, mediump>	mediump_i64vec1;$/;"	t	namespace:glm
mediump_i64vec2	.\fwd.hpp	/^	typedef vec<2, i64, mediump>	mediump_i64vec2;$/;"	t	namespace:glm
mediump_i64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i64, mediump>	mediump_i64vec2;$/;"	t	namespace:glm
mediump_i64vec3	.\fwd.hpp	/^	typedef vec<3, i64, mediump>	mediump_i64vec3;$/;"	t	namespace:glm
mediump_i64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i64, mediump>	mediump_i64vec3;$/;"	t	namespace:glm
mediump_i64vec4	.\fwd.hpp	/^	typedef vec<4, i64, mediump>	mediump_i64vec4;$/;"	t	namespace:glm
mediump_i64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i64, mediump>	mediump_i64vec4;$/;"	t	namespace:glm
mediump_i8	.\fwd.hpp	/^	typedef int8					mediump_i8;$/;"	t	namespace:glm
mediump_i8	.\gtc\type_precision.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm
mediump_i8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int8, mediump>	mediump_i8mat2x2;$/;"	t	namespace:glm
mediump_i8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int8, mediump>	mediump_i8mat2x3;$/;"	t	namespace:glm
mediump_i8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int8, mediump>	mediump_i8mat2x4;$/;"	t	namespace:glm
mediump_i8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int8, mediump>	mediump_i8mat3x2;$/;"	t	namespace:glm
mediump_i8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int8, mediump>	mediump_i8mat3x3;$/;"	t	namespace:glm
mediump_i8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int8, mediump>	mediump_i8mat3x4;$/;"	t	namespace:glm
mediump_i8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int8, mediump>	mediump_i8mat4x2;$/;"	t	namespace:glm
mediump_i8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int8, mediump>	mediump_i8mat4x3;$/;"	t	namespace:glm
mediump_i8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int8, mediump>	mediump_i8mat4x4;$/;"	t	namespace:glm
mediump_i8vec1	.\fwd.hpp	/^	typedef vec<1, i8, mediump>		mediump_i8vec1;$/;"	t	namespace:glm
mediump_i8vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, i8, mediump>		mediump_i8vec1;$/;"	t	namespace:glm
mediump_i8vec2	.\fwd.hpp	/^	typedef vec<2, i8, mediump>		mediump_i8vec2;$/;"	t	namespace:glm
mediump_i8vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, i8, mediump>		mediump_i8vec2;$/;"	t	namespace:glm
mediump_i8vec3	.\fwd.hpp	/^	typedef vec<3, i8, mediump>		mediump_i8vec3;$/;"	t	namespace:glm
mediump_i8vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, i8, mediump>		mediump_i8vec3;$/;"	t	namespace:glm
mediump_i8vec4	.\fwd.hpp	/^	typedef vec<4, i8, mediump>		mediump_i8vec4;$/;"	t	namespace:glm
mediump_i8vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, i8, mediump>		mediump_i8vec4;$/;"	t	namespace:glm
mediump_imat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, mediump>			mediump_imat2;$/;"	t	namespace:glm
mediump_imat2x2	.\fwd.hpp	/^	typedef mat<2, 2, int, mediump>		mediump_imat2x2;$/;"	t	namespace:glm
mediump_imat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, int, mediump>			mediump_imat2x2;$/;"	t	namespace:glm
mediump_imat2x3	.\fwd.hpp	/^	typedef mat<2, 3, int, mediump>		mediump_imat2x3;$/;"	t	namespace:glm
mediump_imat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, int, mediump>			mediump_imat2x3;$/;"	t	namespace:glm
mediump_imat2x4	.\fwd.hpp	/^	typedef mat<2, 4, int, mediump>		mediump_imat2x4;$/;"	t	namespace:glm
mediump_imat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, int, mediump>			mediump_imat2x4;$/;"	t	namespace:glm
mediump_imat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, mediump>			mediump_imat3;$/;"	t	namespace:glm
mediump_imat3x2	.\fwd.hpp	/^	typedef mat<3, 2, int, mediump>		mediump_imat3x2;$/;"	t	namespace:glm
mediump_imat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, int, mediump>			mediump_imat3x2;$/;"	t	namespace:glm
mediump_imat3x3	.\fwd.hpp	/^	typedef mat<3, 3, int, mediump>		mediump_imat3x3;$/;"	t	namespace:glm
mediump_imat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, int, mediump>			mediump_imat3x3;$/;"	t	namespace:glm
mediump_imat3x4	.\fwd.hpp	/^	typedef mat<3, 4, int, mediump>		mediump_imat3x4;$/;"	t	namespace:glm
mediump_imat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, int, mediump>			mediump_imat3x4;$/;"	t	namespace:glm
mediump_imat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, mediump>			mediump_imat4;$/;"	t	namespace:glm
mediump_imat4x2	.\fwd.hpp	/^	typedef mat<4, 2, int, mediump>		mediump_imat4x2;$/;"	t	namespace:glm
mediump_imat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, int, mediump>			mediump_imat4x2;$/;"	t	namespace:glm
mediump_imat4x3	.\fwd.hpp	/^	typedef mat<4, 3, int, mediump>		mediump_imat4x3;$/;"	t	namespace:glm
mediump_imat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, int, mediump>			mediump_imat4x3;$/;"	t	namespace:glm
mediump_imat4x4	.\fwd.hpp	/^	typedef mat<4, 4, int, mediump>		mediump_imat4x4;$/;"	t	namespace:glm
mediump_imat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, int, mediump>			mediump_imat4x4;$/;"	t	namespace:glm
mediump_int16	.\fwd.hpp	/^	typedef int16					mediump_int16;$/;"	t	namespace:glm
mediump_int16	.\gtc\type_precision.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm
mediump_int16_t	.\fwd.hpp	/^	typedef int16					mediump_int16_t;$/;"	t	namespace:glm
mediump_int16_t	.\gtc\type_precision.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm
mediump_int32	.\fwd.hpp	/^	typedef int32					mediump_int32;$/;"	t	namespace:glm
mediump_int32	.\gtc\type_precision.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm
mediump_int32_t	.\fwd.hpp	/^	typedef int32					mediump_int32_t;$/;"	t	namespace:glm
mediump_int32_t	.\gtc\type_precision.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm
mediump_int64	.\fwd.hpp	/^	typedef int64					mediump_int64;$/;"	t	namespace:glm
mediump_int64	.\gtc\type_precision.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm
mediump_int64_t	.\fwd.hpp	/^	typedef int64					mediump_int64_t;$/;"	t	namespace:glm
mediump_int64_t	.\gtc\type_precision.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm
mediump_int8	.\fwd.hpp	/^	typedef int8					mediump_int8;$/;"	t	namespace:glm
mediump_int8	.\gtc\type_precision.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm
mediump_int8_t	.\fwd.hpp	/^	typedef int8					mediump_int8_t;$/;"	t	namespace:glm
mediump_int8_t	.\gtc\type_precision.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm
mediump_ivec1	.\fwd.hpp	/^	typedef vec<1, int, mediump>	mediump_ivec1;$/;"	t	namespace:glm
mediump_ivec1	.\gtc\type_precision.hpp	/^	typedef vec<1, int, mediump>	mediump_ivec1;$/;"	t	namespace:glm
mediump_ivec2	.\fwd.hpp	/^	typedef vec<2, int, mediump>	mediump_ivec2;$/;"	t	namespace:glm
mediump_ivec2	.\gtc\type_precision.hpp	/^	typedef vec<2, int, mediump>	mediump_ivec2;$/;"	t	namespace:glm
mediump_ivec3	.\fwd.hpp	/^	typedef vec<3, int, mediump>	mediump_ivec3;$/;"	t	namespace:glm
mediump_ivec3	.\gtc\type_precision.hpp	/^	typedef vec<3, int, mediump>	mediump_ivec3;$/;"	t	namespace:glm
mediump_ivec4	.\fwd.hpp	/^	typedef vec<4, int, mediump>	mediump_ivec4;$/;"	t	namespace:glm
mediump_ivec4	.\gtc\type_precision.hpp	/^	typedef vec<4, int, mediump>	mediump_ivec4;$/;"	t	namespace:glm
mediump_mat2	.\ext\matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, mediump>	mediump_mat2;$/;"	t	namespace:glm
mediump_mat2	.\fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_mat2;$/;"	t	namespace:glm
mediump_mat2x2	.\ext\matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, mediump>	mediump_mat2x2;$/;"	t	namespace:glm
mediump_mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_mat2x2;$/;"	t	namespace:glm
mediump_mat2x3	.\ext\matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, mediump>	mediump_mat2x3;$/;"	t	namespace:glm
mediump_mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_mat2x3;$/;"	t	namespace:glm
mediump_mat2x4	.\ext\matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, mediump>	mediump_mat2x4;$/;"	t	namespace:glm
mediump_mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_mat2x4;$/;"	t	namespace:glm
mediump_mat3	.\ext\matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, mediump>	mediump_mat3;$/;"	t	namespace:glm
mediump_mat3	.\fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_mat3;$/;"	t	namespace:glm
mediump_mat3x2	.\ext\matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, mediump>	mediump_mat3x2;$/;"	t	namespace:glm
mediump_mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_mat3x2;$/;"	t	namespace:glm
mediump_mat3x3	.\ext\matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, mediump>	mediump_mat3x3;$/;"	t	namespace:glm
mediump_mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_mat3x3;$/;"	t	namespace:glm
mediump_mat3x4	.\ext\matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, mediump>	mediump_mat3x4;$/;"	t	namespace:glm
mediump_mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_mat3x4;$/;"	t	namespace:glm
mediump_mat4	.\ext\matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, mediump>	mediump_mat4;$/;"	t	namespace:glm
mediump_mat4	.\fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_mat4;$/;"	t	namespace:glm
mediump_mat4x2	.\ext\matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, mediump>	mediump_mat4x2;$/;"	t	namespace:glm
mediump_mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_mat4x2;$/;"	t	namespace:glm
mediump_mat4x3	.\ext\matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, mediump>	mediump_mat4x3;$/;"	t	namespace:glm
mediump_mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_mat4x3;$/;"	t	namespace:glm
mediump_mat4x4	.\ext\matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, mediump>	mediump_mat4x4;$/;"	t	namespace:glm
mediump_mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_mat4x4;$/;"	t	namespace:glm
mediump_quat	.\ext\quaternion_float_precision.hpp	/^	typedef qua<float, mediump>		mediump_quat;$/;"	t	namespace:glm
mediump_quat	.\fwd.hpp	/^	typedef qua<float, mediump>			mediump_quat;$/;"	t	namespace:glm
mediump_u16	.\fwd.hpp	/^	typedef uint16					mediump_u16;$/;"	t	namespace:glm
mediump_u16	.\gtc\type_precision.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm
mediump_u16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint16, mediump>	mediump_u16mat2x2;$/;"	t	namespace:glm
mediump_u16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint16, mediump>	mediump_u16mat2x3;$/;"	t	namespace:glm
mediump_u16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint16, mediump>	mediump_u16mat2x4;$/;"	t	namespace:glm
mediump_u16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint16, mediump>	mediump_u16mat3x2;$/;"	t	namespace:glm
mediump_u16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint16, mediump>	mediump_u16mat3x3;$/;"	t	namespace:glm
mediump_u16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint16, mediump>	mediump_u16mat3x4;$/;"	t	namespace:glm
mediump_u16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint16, mediump>	mediump_u16mat4x2;$/;"	t	namespace:glm
mediump_u16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint16, mediump>	mediump_u16mat4x3;$/;"	t	namespace:glm
mediump_u16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint16, mediump>	mediump_u16mat4x4;$/;"	t	namespace:glm
mediump_u16vec1	.\fwd.hpp	/^	typedef vec<1, u16, mediump>	mediump_u16vec1;$/;"	t	namespace:glm
mediump_u16vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u16, mediump>	mediump_u16vec1;$/;"	t	namespace:glm
mediump_u16vec2	.\fwd.hpp	/^	typedef vec<2, u16, mediump>	mediump_u16vec2;$/;"	t	namespace:glm
mediump_u16vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u16, mediump>	mediump_u16vec2;$/;"	t	namespace:glm
mediump_u16vec3	.\fwd.hpp	/^	typedef vec<3, u16, mediump>	mediump_u16vec3;$/;"	t	namespace:glm
mediump_u16vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u16, mediump>	mediump_u16vec3;$/;"	t	namespace:glm
mediump_u16vec4	.\fwd.hpp	/^	typedef vec<4, u16, mediump>	mediump_u16vec4;$/;"	t	namespace:glm
mediump_u16vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u16, mediump>	mediump_u16vec4;$/;"	t	namespace:glm
mediump_u32	.\fwd.hpp	/^	typedef uint32					mediump_u32;$/;"	t	namespace:glm
mediump_u32	.\gtc\type_precision.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm
mediump_u32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint32, mediump>	mediump_u32mat2x2;$/;"	t	namespace:glm
mediump_u32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint32, mediump>	mediump_u32mat2x3;$/;"	t	namespace:glm
mediump_u32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint32, mediump>	mediump_u32mat2x4;$/;"	t	namespace:glm
mediump_u32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint32, mediump>	mediump_u32mat3x2;$/;"	t	namespace:glm
mediump_u32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint32, mediump>	mediump_u32mat3x3;$/;"	t	namespace:glm
mediump_u32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint32, mediump>	mediump_u32mat3x4;$/;"	t	namespace:glm
mediump_u32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint32, mediump>	mediump_u32mat4x2;$/;"	t	namespace:glm
mediump_u32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint32, mediump>	mediump_u32mat4x3;$/;"	t	namespace:glm
mediump_u32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint32, mediump>	mediump_u32mat4x4;$/;"	t	namespace:glm
mediump_u32vec1	.\fwd.hpp	/^	typedef vec<1, u32, mediump>	mediump_u32vec1;$/;"	t	namespace:glm
mediump_u32vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u32, mediump>	mediump_u32vec1;$/;"	t	namespace:glm
mediump_u32vec2	.\fwd.hpp	/^	typedef vec<2, u32, mediump>	mediump_u32vec2;$/;"	t	namespace:glm
mediump_u32vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u32, mediump>	mediump_u32vec2;$/;"	t	namespace:glm
mediump_u32vec3	.\fwd.hpp	/^	typedef vec<3, u32, mediump>	mediump_u32vec3;$/;"	t	namespace:glm
mediump_u32vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u32, mediump>	mediump_u32vec3;$/;"	t	namespace:glm
mediump_u32vec4	.\fwd.hpp	/^	typedef vec<4, u32, mediump>	mediump_u32vec4;$/;"	t	namespace:glm
mediump_u32vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u32, mediump>	mediump_u32vec4;$/;"	t	namespace:glm
mediump_u64	.\fwd.hpp	/^	typedef uint64					mediump_u64;$/;"	t	namespace:glm
mediump_u64	.\gtc\type_precision.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm
mediump_u64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint64, mediump>	mediump_u64mat2x2;$/;"	t	namespace:glm
mediump_u64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint64, mediump>	mediump_u64mat2x3;$/;"	t	namespace:glm
mediump_u64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint64, mediump>	mediump_u64mat2x4;$/;"	t	namespace:glm
mediump_u64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint64, mediump>	mediump_u64mat3x2;$/;"	t	namespace:glm
mediump_u64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint64, mediump>	mediump_u64mat3x3;$/;"	t	namespace:glm
mediump_u64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint64, mediump>	mediump_u64mat3x4;$/;"	t	namespace:glm
mediump_u64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint64, mediump>	mediump_u64mat4x2;$/;"	t	namespace:glm
mediump_u64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint64, mediump>	mediump_u64mat4x3;$/;"	t	namespace:glm
mediump_u64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint64, mediump>	mediump_u64mat4x4;$/;"	t	namespace:glm
mediump_u64vec1	.\fwd.hpp	/^	typedef vec<1, u64, mediump>	mediump_u64vec1;$/;"	t	namespace:glm
mediump_u64vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u64, mediump>	mediump_u64vec1;$/;"	t	namespace:glm
mediump_u64vec2	.\fwd.hpp	/^	typedef vec<2, u64, mediump>	mediump_u64vec2;$/;"	t	namespace:glm
mediump_u64vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u64, mediump>	mediump_u64vec2;$/;"	t	namespace:glm
mediump_u64vec3	.\fwd.hpp	/^	typedef vec<3, u64, mediump>	mediump_u64vec3;$/;"	t	namespace:glm
mediump_u64vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u64, mediump>	mediump_u64vec3;$/;"	t	namespace:glm
mediump_u64vec4	.\fwd.hpp	/^	typedef vec<4, u64, mediump>	mediump_u64vec4;$/;"	t	namespace:glm
mediump_u64vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u64, mediump>	mediump_u64vec4;$/;"	t	namespace:glm
mediump_u8	.\fwd.hpp	/^	typedef uint8					mediump_u8;$/;"	t	namespace:glm
mediump_u8	.\gtc\type_precision.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm
mediump_u8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint8, mediump>	mediump_u8mat2x2;$/;"	t	namespace:glm
mediump_u8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint8, mediump>	mediump_u8mat2x3;$/;"	t	namespace:glm
mediump_u8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint8, mediump>	mediump_u8mat2x4;$/;"	t	namespace:glm
mediump_u8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint8, mediump>	mediump_u8mat3x2;$/;"	t	namespace:glm
mediump_u8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint8, mediump>	mediump_u8mat3x3;$/;"	t	namespace:glm
mediump_u8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint8, mediump>	mediump_u8mat3x4;$/;"	t	namespace:glm
mediump_u8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint8, mediump>	mediump_u8mat4x2;$/;"	t	namespace:glm
mediump_u8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint8, mediump>	mediump_u8mat4x3;$/;"	t	namespace:glm
mediump_u8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint8, mediump>	mediump_u8mat4x4;$/;"	t	namespace:glm
mediump_u8vec1	.\fwd.hpp	/^	typedef vec<1, u8, mediump>		mediump_u8vec1;$/;"	t	namespace:glm
mediump_u8vec1	.\gtc\type_precision.hpp	/^	typedef vec<1, u8, mediump>		mediump_u8vec1;$/;"	t	namespace:glm
mediump_u8vec2	.\fwd.hpp	/^	typedef vec<2, u8, mediump>		mediump_u8vec2;$/;"	t	namespace:glm
mediump_u8vec2	.\gtc\type_precision.hpp	/^	typedef vec<2, u8, mediump>		mediump_u8vec2;$/;"	t	namespace:glm
mediump_u8vec3	.\fwd.hpp	/^	typedef vec<3, u8, mediump>		mediump_u8vec3;$/;"	t	namespace:glm
mediump_u8vec3	.\gtc\type_precision.hpp	/^	typedef vec<3, u8, mediump>		mediump_u8vec3;$/;"	t	namespace:glm
mediump_u8vec4	.\fwd.hpp	/^	typedef vec<4, u8, mediump>		mediump_u8vec4;$/;"	t	namespace:glm
mediump_u8vec4	.\gtc\type_precision.hpp	/^	typedef vec<4, u8, mediump>		mediump_u8vec4;$/;"	t	namespace:glm
mediump_uint16	.\fwd.hpp	/^	typedef uint16					mediump_uint16;$/;"	t	namespace:glm
mediump_uint16	.\gtc\type_precision.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm
mediump_uint16_t	.\fwd.hpp	/^	typedef uint16					mediump_uint16_t;$/;"	t	namespace:glm
mediump_uint16_t	.\gtc\type_precision.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm
mediump_uint32	.\fwd.hpp	/^	typedef uint32					mediump_uint32;$/;"	t	namespace:glm
mediump_uint32	.\gtc\type_precision.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm
mediump_uint32_t	.\fwd.hpp	/^	typedef uint32					mediump_uint32_t;$/;"	t	namespace:glm
mediump_uint32_t	.\gtc\type_precision.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm
mediump_uint64	.\fwd.hpp	/^	typedef uint64					mediump_uint64;$/;"	t	namespace:glm
mediump_uint64	.\gtc\type_precision.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm
mediump_uint64_t	.\fwd.hpp	/^	typedef uint64					mediump_uint64_t;$/;"	t	namespace:glm
mediump_uint64_t	.\gtc\type_precision.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm
mediump_uint8	.\fwd.hpp	/^	typedef uint8					mediump_uint8;$/;"	t	namespace:glm
mediump_uint8	.\gtc\type_precision.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm
mediump_uint8_t	.\fwd.hpp	/^	typedef uint8					mediump_uint8_t;$/;"	t	namespace:glm
mediump_uint8_t	.\gtc\type_precision.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm
mediump_umat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, mediump>			mediump_umat2;$/;"	t	namespace:glm
mediump_umat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint, mediump>	mediump_umat2x2;$/;"	t	namespace:glm
mediump_umat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, mediump>			mediump_umat2x2;$/;"	t	namespace:glm
mediump_umat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint, mediump>	mediump_umat2x3;$/;"	t	namespace:glm
mediump_umat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, uint, mediump>			mediump_umat2x3;$/;"	t	namespace:glm
mediump_umat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint, mediump>	mediump_umat2x4;$/;"	t	namespace:glm
mediump_umat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, uint, mediump>			mediump_umat2x4;$/;"	t	namespace:glm
mediump_umat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, mediump>			mediump_umat3;$/;"	t	namespace:glm
mediump_umat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint, mediump>	mediump_umat3x2;$/;"	t	namespace:glm
mediump_umat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, uint, mediump>			mediump_umat3x2;$/;"	t	namespace:glm
mediump_umat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint, mediump>	mediump_umat3x3;$/;"	t	namespace:glm
mediump_umat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, mediump>			mediump_umat3x3;$/;"	t	namespace:glm
mediump_umat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint, mediump>	mediump_umat3x4;$/;"	t	namespace:glm
mediump_umat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, uint, mediump>			mediump_umat3x4;$/;"	t	namespace:glm
mediump_umat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, mediump>			mediump_umat4;$/;"	t	namespace:glm
mediump_umat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint, mediump>	mediump_umat4x2;$/;"	t	namespace:glm
mediump_umat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, uint, mediump>			mediump_umat4x2;$/;"	t	namespace:glm
mediump_umat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint, mediump>	mediump_umat4x3;$/;"	t	namespace:glm
mediump_umat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, uint, mediump>			mediump_umat4x3;$/;"	t	namespace:glm
mediump_umat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint, mediump>	mediump_umat4x4;$/;"	t	namespace:glm
mediump_umat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, mediump>			mediump_umat4x4;$/;"	t	namespace:glm
mediump_uvec1	.\fwd.hpp	/^	typedef vec<1, uint, mediump>	mediump_uvec1;$/;"	t	namespace:glm
mediump_uvec1	.\gtc\type_precision.hpp	/^	typedef vec<1, uint, mediump>	mediump_uvec1;$/;"	t	namespace:glm
mediump_uvec2	.\fwd.hpp	/^	typedef vec<2, uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm
mediump_uvec2	.\gtc\type_precision.hpp	/^	typedef vec<2, uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm
mediump_uvec3	.\fwd.hpp	/^	typedef vec<3, uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm
mediump_uvec3	.\gtc\type_precision.hpp	/^	typedef vec<3, uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm
mediump_uvec4	.\fwd.hpp	/^	typedef vec<4, uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm
mediump_uvec4	.\gtc\type_precision.hpp	/^	typedef vec<4, uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm
mediump_vec1	.\ext\vector_float1_precision.hpp	/^	typedef vec<1, float, mediump>		mediump_vec1;$/;"	t	namespace:glm
mediump_vec1	.\fwd.hpp	/^	typedef vec<1, float, mediump>		mediump_vec1;$/;"	t	namespace:glm
mediump_vec2	.\ext\vector_float2_precision.hpp	/^	typedef vec<2, float, mediump>		mediump_vec2;$/;"	t	namespace:glm
mediump_vec2	.\fwd.hpp	/^	typedef vec<2, float, mediump>		mediump_vec2;$/;"	t	namespace:glm
mediump_vec3	.\ext\vector_float3_precision.hpp	/^	typedef vec<3, float, mediump>		mediump_vec3;$/;"	t	namespace:glm
mediump_vec3	.\fwd.hpp	/^	typedef vec<3, float, mediump>		mediump_vec3;$/;"	t	namespace:glm
mediump_vec4	.\ext\vector_float4_precision.hpp	/^	typedef vec<4, float, mediump>		mediump_vec4;$/;"	t	namespace:glm
mediump_vec4	.\fwd.hpp	/^	typedef vec<4, float, mediump>		mediump_vec4;$/;"	t	namespace:glm
min	.\detail\_fixes.hpp	10;"	d
mod289	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER T mod289(T const& x)$/;"	f	namespace:glm::detail
mul_lane	.\simd\neon.h	/^		static float32x4_t mul_lane(float32x4_t v, float32x4_t vlane, int lane) {$/;"	f	namespace:glm::neon
negative	.\detail\type_float.hpp	/^		GLM_CONSTEXPR bool negative() const { return i < 0; }$/;"	f	union:glm::detail::float_t
neon	.\simd\neon.h	/^	namespace neon {$/;"	n	namespace:glm
newline	.\gtx\io.hpp	/^			char_type  newline;$/;"	m	class:glm::io::format_punct
op_div	.\detail\_swizzle.hpp	/^		struct op_div$/;"	s	struct:glm::detail::_swizzle_base2
op_equal	.\detail\_swizzle.hpp	/^		struct op_equal$/;"	s	struct:glm::detail::_swizzle_base2
op_minus	.\detail\_swizzle.hpp	/^		struct op_minus$/;"	s	struct:glm::detail::_swizzle_base2
op_mul	.\detail\_swizzle.hpp	/^		struct op_mul$/;"	s	struct:glm::detail::_swizzle_base2
op_plus	.\detail\_swizzle.hpp	/^		struct op_plus$/;"	s	struct:glm::detail::_swizzle_base2
operator ()	.\detail\_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e *= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_mul
operator ()	.\detail\_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e += t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_plus
operator ()	.\detail\_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e -= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_minus
operator ()	.\detail\_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e = t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_equal
operator ()	.\detail\_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e \/= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_div
operator ()	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<2, T, Q> operator ()()  const { return vec<2, T, Q>(this->elem(E0), this->elem(E1)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator ()	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<3, T, Q> operator ()()  const { return vec<3, T, Q>(this->elem(E0), this->elem(E1), this->elem(E2)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator ()	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<4, T, Q> operator ()()  const { return vec<4, T, Q>(this->elem(E0), this->elem(E1), this->elem(E2), this->elem(E3)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator *=	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator *= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator +=	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator += (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator -=	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator -= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator /=	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator \/= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator =	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (Stub const&) { return *this; }$/;"	f	struct:glm::detail::_swizzle_base2
operator =	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const T& t)$/;"	f	struct:glm::detail::_swizzle_base2
operator =	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator =	.\detail\type_float.hpp	/^		GLM_CONSTEXPR float_t& operator=(float_t const& x)$/;"	f	union:glm::detail::float_t
operator []	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[]  (size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2
operator []	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[](size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2
operator []	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& operator[](size_t i)$/;"	f	struct:glm::detail::_swizzle_base2
operator vec<N, T, Q>	.\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER operator vec<N, T, Q> () const { return (*this)(); }$/;"	f	struct:glm::detail::_swizzle
order	.\gtx\io.hpp	/^			order_type order;$/;"	m	class:glm::io::format_punct
order	.\gtx\io.hpp	/^		struct order$/;"	s	namespace:glm::io
order_type	.\gtx\io.hpp	/^		enum order_type { column_major, row_major};$/;"	g	namespace:glm::io
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<2, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<2, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<2, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<3, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<3, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<3, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<4, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<4, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait<4, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	.\matrix.hpp	/^	struct outerProduct_trait{};$/;"	s	namespace:glm::detail
p	.\detail\type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::vec::__anon11::__anon14
p	.\detail\type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon17
p	.\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon18::__anon21
p	.\detail\type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon24
packed	.\detail\qualifier.hpp	/^		packed = packed_highp, \/\/\/< By default packed qualifier is also high precision$/;"	e	enum:glm::qualifier
packed_bvec1	.\gtc\type_aligned.hpp	/^	typedef packed_highp_bvec1			packed_bvec1;$/;"	t	namespace:glm
packed_bvec2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_bvec2			packed_bvec2;$/;"	t	namespace:glm
packed_bvec3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_bvec3			packed_bvec3;$/;"	t	namespace:glm
packed_bvec4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_bvec4			packed_bvec4;$/;"	t	namespace:glm
packed_dmat2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat2			packed_dmat2;$/;"	t	namespace:glm
packed_dmat2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat2			packed_dmat2;$/;"	t	namespace:glm
packed_dmat2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat2		packed_dmat2;$/;"	t	namespace:glm
packed_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat2x2		packed_dmat2x2;$/;"	t	namespace:glm
packed_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat2x2			packed_dmat2x2;$/;"	t	namespace:glm
packed_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat2x2		packed_dmat2x2;$/;"	t	namespace:glm
packed_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat2x3		packed_dmat2x3;$/;"	t	namespace:glm
packed_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat2x3			packed_dmat2x3;$/;"	t	namespace:glm
packed_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat2x3		packed_dmat2x3;$/;"	t	namespace:glm
packed_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat2x4		packed_dmat2x4;$/;"	t	namespace:glm
packed_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat2x4			packed_dmat2x4;$/;"	t	namespace:glm
packed_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat2x4		packed_dmat2x4;$/;"	t	namespace:glm
packed_dmat3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat3			packed_dmat3;$/;"	t	namespace:glm
packed_dmat3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat3			packed_dmat3;$/;"	t	namespace:glm
packed_dmat3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat3		packed_dmat3;$/;"	t	namespace:glm
packed_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat3x2		packed_dmat3x2;$/;"	t	namespace:glm
packed_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat3x2			packed_dmat3x2;$/;"	t	namespace:glm
packed_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat3x2		packed_dmat3x2;$/;"	t	namespace:glm
packed_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat3x3		packed_dmat3x3;$/;"	t	namespace:glm
packed_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat3x3			packed_dmat3x3;$/;"	t	namespace:glm
packed_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat3x3		packed_dmat3x3;$/;"	t	namespace:glm
packed_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat3x4		packed_dmat3x4;$/;"	t	namespace:glm
packed_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat3x4			packed_dmat3x4;$/;"	t	namespace:glm
packed_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat3x4		packed_dmat3x4;$/;"	t	namespace:glm
packed_dmat4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat4			packed_dmat4;$/;"	t	namespace:glm
packed_dmat4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat4			packed_dmat4;$/;"	t	namespace:glm
packed_dmat4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat4		packed_dmat4;$/;"	t	namespace:glm
packed_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat4x2		packed_dmat4x2;$/;"	t	namespace:glm
packed_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat4x2			packed_dmat4x2;$/;"	t	namespace:glm
packed_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat4x2		packed_dmat4x2;$/;"	t	namespace:glm
packed_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat4x3		packed_dmat4x3;$/;"	t	namespace:glm
packed_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat4x3			packed_dmat4x3;$/;"	t	namespace:glm
packed_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat4x3		packed_dmat4x3;$/;"	t	namespace:glm
packed_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dmat4x4		packed_dmat4x4;$/;"	t	namespace:glm
packed_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dmat4x4			packed_dmat4x4;$/;"	t	namespace:glm
packed_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dmat4x4		packed_dmat4x4;$/;"	t	namespace:glm
packed_dvec1	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dvec1			packed_dvec1;$/;"	t	namespace:glm
packed_dvec1	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dvec1			packed_dvec1;$/;"	t	namespace:glm
packed_dvec1	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dvec1		packed_dvec1;$/;"	t	namespace:glm
packed_dvec2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dvec2			packed_dvec2;$/;"	t	namespace:glm
packed_dvec2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dvec2			packed_dvec2;$/;"	t	namespace:glm
packed_dvec2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dvec2		packed_dvec2;$/;"	t	namespace:glm
packed_dvec3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dvec3			packed_dvec3;$/;"	t	namespace:glm
packed_dvec3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dvec3			packed_dvec3;$/;"	t	namespace:glm
packed_dvec3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dvec3		packed_dvec3;$/;"	t	namespace:glm
packed_dvec4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_dvec4			packed_dvec4;$/;"	t	namespace:glm
packed_dvec4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_dvec4			packed_dvec4;$/;"	t	namespace:glm
packed_dvec4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_dvec4		packed_dvec4;$/;"	t	namespace:glm
packed_highp	.\detail\qualifier.hpp	/^		packed_highp, \/\/\/< Typed data is tightly packed in memory and operations are executed with high precision in term of ULPs$/;"	e	enum:glm::qualifier
packed_highp_bvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, bool, packed_highp>		packed_highp_bvec1;$/;"	t	namespace:glm
packed_highp_bvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, bool, packed_highp>		packed_highp_bvec2;$/;"	t	namespace:glm
packed_highp_bvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, bool, packed_highp>		packed_highp_bvec3;$/;"	t	namespace:glm
packed_highp_bvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, bool, packed_highp>		packed_highp_bvec4;$/;"	t	namespace:glm
packed_highp_dmat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, packed_highp>		packed_highp_dmat2;$/;"	t	namespace:glm
packed_highp_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, packed_highp>		packed_highp_dmat2x2;$/;"	t	namespace:glm
packed_highp_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, double, packed_highp>		packed_highp_dmat2x3;$/;"	t	namespace:glm
packed_highp_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, double, packed_highp>		packed_highp_dmat2x4;$/;"	t	namespace:glm
packed_highp_dmat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, packed_highp>		packed_highp_dmat3;$/;"	t	namespace:glm
packed_highp_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, double, packed_highp>		packed_highp_dmat3x2;$/;"	t	namespace:glm
packed_highp_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, packed_highp>		packed_highp_dmat3x3;$/;"	t	namespace:glm
packed_highp_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, double, packed_highp>		packed_highp_dmat3x4;$/;"	t	namespace:glm
packed_highp_dmat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, packed_highp>		packed_highp_dmat4;$/;"	t	namespace:glm
packed_highp_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, double, packed_highp>		packed_highp_dmat4x2;$/;"	t	namespace:glm
packed_highp_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, double, packed_highp>		packed_highp_dmat4x3;$/;"	t	namespace:glm
packed_highp_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, packed_highp>		packed_highp_dmat4x4;$/;"	t	namespace:glm
packed_highp_dvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, double, packed_highp>	packed_highp_dvec1;$/;"	t	namespace:glm
packed_highp_dvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, double, packed_highp>	packed_highp_dvec2;$/;"	t	namespace:glm
packed_highp_dvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, double, packed_highp>	packed_highp_dvec3;$/;"	t	namespace:glm
packed_highp_dvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, double, packed_highp>	packed_highp_dvec4;$/;"	t	namespace:glm
packed_highp_ivec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, int, packed_highp>		packed_highp_ivec1;$/;"	t	namespace:glm
packed_highp_ivec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, int, packed_highp>		packed_highp_ivec2;$/;"	t	namespace:glm
packed_highp_ivec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, int, packed_highp>		packed_highp_ivec3;$/;"	t	namespace:glm
packed_highp_ivec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, int, packed_highp>		packed_highp_ivec4;$/;"	t	namespace:glm
packed_highp_mat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, packed_highp>		packed_highp_mat2;$/;"	t	namespace:glm
packed_highp_mat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, packed_highp>		packed_highp_mat2x2;$/;"	t	namespace:glm
packed_highp_mat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, float, packed_highp>		packed_highp_mat2x3;$/;"	t	namespace:glm
packed_highp_mat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, float, packed_highp>		packed_highp_mat2x4;$/;"	t	namespace:glm
packed_highp_mat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, packed_highp>		packed_highp_mat3;$/;"	t	namespace:glm
packed_highp_mat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, float, packed_highp>		packed_highp_mat3x2;$/;"	t	namespace:glm
packed_highp_mat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, packed_highp>		packed_highp_mat3x3;$/;"	t	namespace:glm
packed_highp_mat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, float, packed_highp>		packed_highp_mat3x4;$/;"	t	namespace:glm
packed_highp_mat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, packed_highp>		packed_highp_mat4;$/;"	t	namespace:glm
packed_highp_mat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, float, packed_highp>		packed_highp_mat4x2;$/;"	t	namespace:glm
packed_highp_mat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, float, packed_highp>		packed_highp_mat4x3;$/;"	t	namespace:glm
packed_highp_mat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, packed_highp>		packed_highp_mat4x4;$/;"	t	namespace:glm
packed_highp_uvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, uint, packed_highp>		packed_highp_uvec1;$/;"	t	namespace:glm
packed_highp_uvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, uint, packed_highp>		packed_highp_uvec2;$/;"	t	namespace:glm
packed_highp_uvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, uint, packed_highp>		packed_highp_uvec3;$/;"	t	namespace:glm
packed_highp_uvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, uint, packed_highp>		packed_highp_uvec4;$/;"	t	namespace:glm
packed_highp_vec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, float, packed_highp>		packed_highp_vec1;$/;"	t	namespace:glm
packed_highp_vec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, float, packed_highp>		packed_highp_vec2;$/;"	t	namespace:glm
packed_highp_vec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, float, packed_highp>		packed_highp_vec3;$/;"	t	namespace:glm
packed_highp_vec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, float, packed_highp>		packed_highp_vec4;$/;"	t	namespace:glm
packed_ivec1	.\gtc\type_aligned.hpp	/^	typedef packed_highp_ivec1			packed_ivec1;$/;"	t	namespace:glm
packed_ivec2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_ivec2			packed_ivec2;$/;"	t	namespace:glm
packed_ivec3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_ivec3			packed_ivec3;$/;"	t	namespace:glm
packed_ivec4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_ivec4			packed_ivec4;$/;"	t	namespace:glm
packed_lowp	.\detail\qualifier.hpp	/^		packed_lowp, \/\/\/< Typed data is tightly packed in memory  and operations are executed with low precision in term of ULPs to maximize performance$/;"	e	enum:glm::qualifier
packed_lowp_bvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, bool, packed_lowp>		packed_lowp_bvec1;$/;"	t	namespace:glm
packed_lowp_bvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, bool, packed_lowp>		packed_lowp_bvec2;$/;"	t	namespace:glm
packed_lowp_bvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, bool, packed_lowp>		packed_lowp_bvec3;$/;"	t	namespace:glm
packed_lowp_bvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, bool, packed_lowp>		packed_lowp_bvec4;$/;"	t	namespace:glm
packed_lowp_dmat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, packed_lowp>		packed_lowp_dmat2;$/;"	t	namespace:glm
packed_lowp_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, packed_lowp>		packed_lowp_dmat2x2;$/;"	t	namespace:glm
packed_lowp_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, double, packed_lowp>		packed_lowp_dmat2x3;$/;"	t	namespace:glm
packed_lowp_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, double, packed_lowp>		packed_lowp_dmat2x4;$/;"	t	namespace:glm
packed_lowp_dmat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, packed_lowp>		packed_lowp_dmat3;$/;"	t	namespace:glm
packed_lowp_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, double, packed_lowp>		packed_lowp_dmat3x2;$/;"	t	namespace:glm
packed_lowp_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, packed_lowp>		packed_lowp_dmat3x3;$/;"	t	namespace:glm
packed_lowp_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, double, packed_lowp>		packed_lowp_dmat3x4;$/;"	t	namespace:glm
packed_lowp_dmat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, packed_lowp>		packed_lowp_dmat4;$/;"	t	namespace:glm
packed_lowp_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, double, packed_lowp>		packed_lowp_dmat4x2;$/;"	t	namespace:glm
packed_lowp_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, double, packed_lowp>		packed_lowp_dmat4x3;$/;"	t	namespace:glm
packed_lowp_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, packed_lowp>		packed_lowp_dmat4x4;$/;"	t	namespace:glm
packed_lowp_dvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, double, packed_lowp>		packed_lowp_dvec1;$/;"	t	namespace:glm
packed_lowp_dvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, double, packed_lowp>		packed_lowp_dvec2;$/;"	t	namespace:glm
packed_lowp_dvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, double, packed_lowp>		packed_lowp_dvec3;$/;"	t	namespace:glm
packed_lowp_dvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, double, packed_lowp>		packed_lowp_dvec4;$/;"	t	namespace:glm
packed_lowp_ivec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, int, packed_lowp>		packed_lowp_ivec1;$/;"	t	namespace:glm
packed_lowp_ivec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, int, packed_lowp>		packed_lowp_ivec2;$/;"	t	namespace:glm
packed_lowp_ivec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, int, packed_lowp>		packed_lowp_ivec3;$/;"	t	namespace:glm
packed_lowp_ivec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, int, packed_lowp>		packed_lowp_ivec4;$/;"	t	namespace:glm
packed_lowp_mat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, packed_lowp>		packed_lowp_mat2;$/;"	t	namespace:glm
packed_lowp_mat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, packed_lowp>		packed_lowp_mat2x2;$/;"	t	namespace:glm
packed_lowp_mat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, float, packed_lowp>		packed_lowp_mat2x3;$/;"	t	namespace:glm
packed_lowp_mat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, float, packed_lowp>		packed_lowp_mat2x4;$/;"	t	namespace:glm
packed_lowp_mat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, packed_lowp>		packed_lowp_mat3;$/;"	t	namespace:glm
packed_lowp_mat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, float, packed_lowp>		packed_lowp_mat3x2;$/;"	t	namespace:glm
packed_lowp_mat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, packed_lowp>		packed_lowp_mat3x3;$/;"	t	namespace:glm
packed_lowp_mat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, float, packed_lowp>		packed_lowp_mat3x4;$/;"	t	namespace:glm
packed_lowp_mat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, packed_lowp>		packed_lowp_mat4;$/;"	t	namespace:glm
packed_lowp_mat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, float, packed_lowp>		packed_lowp_mat4x2;$/;"	t	namespace:glm
packed_lowp_mat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, float, packed_lowp>		packed_lowp_mat4x3;$/;"	t	namespace:glm
packed_lowp_mat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, packed_lowp>		packed_lowp_mat4x4;$/;"	t	namespace:glm
packed_lowp_uvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, uint, packed_lowp>		packed_lowp_uvec1;$/;"	t	namespace:glm
packed_lowp_uvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, uint, packed_lowp>		packed_lowp_uvec2;$/;"	t	namespace:glm
packed_lowp_uvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, uint, packed_lowp>		packed_lowp_uvec3;$/;"	t	namespace:glm
packed_lowp_uvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, uint, packed_lowp>		packed_lowp_uvec4;$/;"	t	namespace:glm
packed_lowp_vec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, float, packed_lowp>		packed_lowp_vec1;$/;"	t	namespace:glm
packed_lowp_vec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, float, packed_lowp>		packed_lowp_vec2;$/;"	t	namespace:glm
packed_lowp_vec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, float, packed_lowp>		packed_lowp_vec3;$/;"	t	namespace:glm
packed_lowp_vec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, float, packed_lowp>		packed_lowp_vec4;$/;"	t	namespace:glm
packed_mat2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat2			packed_mat2;$/;"	t	namespace:glm
packed_mat2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat2			packed_mat2;$/;"	t	namespace:glm
packed_mat2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat2			packed_mat2;$/;"	t	namespace:glm
packed_mat2x2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat2x2			packed_mat2x2;$/;"	t	namespace:glm
packed_mat2x2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat2x2			packed_mat2x2;$/;"	t	namespace:glm
packed_mat2x2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat2x2		packed_mat2x2;$/;"	t	namespace:glm
packed_mat2x3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat2x3			packed_mat2x3;$/;"	t	namespace:glm
packed_mat2x3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat2x3			packed_mat2x3;$/;"	t	namespace:glm
packed_mat2x3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat2x3		packed_mat2x3;$/;"	t	namespace:glm
packed_mat2x4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat2x4			packed_mat2x4;$/;"	t	namespace:glm
packed_mat2x4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat2x4			packed_mat2x4;$/;"	t	namespace:glm
packed_mat2x4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat2x4		packed_mat2x4;$/;"	t	namespace:glm
packed_mat3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat3			packed_mat3;$/;"	t	namespace:glm
packed_mat3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat3			packed_mat3;$/;"	t	namespace:glm
packed_mat3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat3			packed_mat3;$/;"	t	namespace:glm
packed_mat3x2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat3x2			packed_mat3x2;$/;"	t	namespace:glm
packed_mat3x2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat3x2			packed_mat3x2;$/;"	t	namespace:glm
packed_mat3x2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat3x2		packed_mat3x2;$/;"	t	namespace:glm
packed_mat3x3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat3x3			packed_mat3x3;$/;"	t	namespace:glm
packed_mat3x3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat3x3			packed_mat3x3;$/;"	t	namespace:glm
packed_mat3x3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat3x3		packed_mat3x3;$/;"	t	namespace:glm
packed_mat3x4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat3x4			packed_mat3x4;$/;"	t	namespace:glm
packed_mat3x4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat3x4			packed_mat3x4;$/;"	t	namespace:glm
packed_mat3x4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat3x4		packed_mat3x4;$/;"	t	namespace:glm
packed_mat4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat4			packed_mat4;$/;"	t	namespace:glm
packed_mat4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat4			packed_mat4;$/;"	t	namespace:glm
packed_mat4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat4			packed_mat4;$/;"	t	namespace:glm
packed_mat4x2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat4x2			packed_mat4x2;$/;"	t	namespace:glm
packed_mat4x2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat4x2			packed_mat4x2;$/;"	t	namespace:glm
packed_mat4x2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat4x2		packed_mat4x2;$/;"	t	namespace:glm
packed_mat4x3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat4x3			packed_mat4x3;$/;"	t	namespace:glm
packed_mat4x3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat4x3			packed_mat4x3;$/;"	t	namespace:glm
packed_mat4x3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat4x3		packed_mat4x3;$/;"	t	namespace:glm
packed_mat4x4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_mat4x4			packed_mat4x4;$/;"	t	namespace:glm
packed_mat4x4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_mat4x4			packed_mat4x4;$/;"	t	namespace:glm
packed_mat4x4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_mat4x4		packed_mat4x4;$/;"	t	namespace:glm
packed_mediump	.\detail\qualifier.hpp	/^		packed_mediump, \/\/\/< Typed data is tightly packed in memory  and operations are executed with medium precision in term of ULPs for higher performance$/;"	e	enum:glm::qualifier
packed_mediump_bvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, bool, packed_mediump>	packed_mediump_bvec1;$/;"	t	namespace:glm
packed_mediump_bvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, bool, packed_mediump>	packed_mediump_bvec2;$/;"	t	namespace:glm
packed_mediump_bvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, bool, packed_mediump>	packed_mediump_bvec3;$/;"	t	namespace:glm
packed_mediump_bvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, bool, packed_mediump>	packed_mediump_bvec4;$/;"	t	namespace:glm
packed_mediump_dmat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, packed_mediump>	packed_mediump_dmat2;$/;"	t	namespace:glm
packed_mediump_dmat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, double, packed_mediump>	packed_mediump_dmat2x2;$/;"	t	namespace:glm
packed_mediump_dmat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, double, packed_mediump>	packed_mediump_dmat2x3;$/;"	t	namespace:glm
packed_mediump_dmat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, double, packed_mediump>	packed_mediump_dmat2x4;$/;"	t	namespace:glm
packed_mediump_dmat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, packed_mediump>	packed_mediump_dmat3;$/;"	t	namespace:glm
packed_mediump_dmat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, double, packed_mediump>	packed_mediump_dmat3x2;$/;"	t	namespace:glm
packed_mediump_dmat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, double, packed_mediump>	packed_mediump_dmat3x3;$/;"	t	namespace:glm
packed_mediump_dmat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, double, packed_mediump>	packed_mediump_dmat3x4;$/;"	t	namespace:glm
packed_mediump_dmat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, packed_mediump>	packed_mediump_dmat4;$/;"	t	namespace:glm
packed_mediump_dmat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, double, packed_mediump>	packed_mediump_dmat4x2;$/;"	t	namespace:glm
packed_mediump_dmat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, double, packed_mediump>	packed_mediump_dmat4x3;$/;"	t	namespace:glm
packed_mediump_dmat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, double, packed_mediump>	packed_mediump_dmat4x4;$/;"	t	namespace:glm
packed_mediump_dvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, double, packed_mediump>	packed_mediump_dvec1;$/;"	t	namespace:glm
packed_mediump_dvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, double, packed_mediump>	packed_mediump_dvec2;$/;"	t	namespace:glm
packed_mediump_dvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, double, packed_mediump>	packed_mediump_dvec3;$/;"	t	namespace:glm
packed_mediump_dvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, double, packed_mediump>	packed_mediump_dvec4;$/;"	t	namespace:glm
packed_mediump_ivec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, int, packed_mediump>		packed_mediump_ivec1;$/;"	t	namespace:glm
packed_mediump_ivec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, int, packed_mediump>		packed_mediump_ivec2;$/;"	t	namespace:glm
packed_mediump_ivec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, int, packed_mediump>		packed_mediump_ivec3;$/;"	t	namespace:glm
packed_mediump_ivec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, int, packed_mediump>		packed_mediump_ivec4;$/;"	t	namespace:glm
packed_mediump_mat2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, packed_mediump>	packed_mediump_mat2;$/;"	t	namespace:glm
packed_mediump_mat2x2	.\gtc\type_aligned.hpp	/^	typedef mat<2, 2, float, packed_mediump>	packed_mediump_mat2x2;$/;"	t	namespace:glm
packed_mediump_mat2x3	.\gtc\type_aligned.hpp	/^	typedef mat<2, 3, float, packed_mediump>	packed_mediump_mat2x3;$/;"	t	namespace:glm
packed_mediump_mat2x4	.\gtc\type_aligned.hpp	/^	typedef mat<2, 4, float, packed_mediump>	packed_mediump_mat2x4;$/;"	t	namespace:glm
packed_mediump_mat3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, packed_mediump>	packed_mediump_mat3;$/;"	t	namespace:glm
packed_mediump_mat3x2	.\gtc\type_aligned.hpp	/^	typedef mat<3, 2, float, packed_mediump>	packed_mediump_mat3x2;$/;"	t	namespace:glm
packed_mediump_mat3x3	.\gtc\type_aligned.hpp	/^	typedef mat<3, 3, float, packed_mediump>	packed_mediump_mat3x3;$/;"	t	namespace:glm
packed_mediump_mat3x4	.\gtc\type_aligned.hpp	/^	typedef mat<3, 4, float, packed_mediump>	packed_mediump_mat3x4;$/;"	t	namespace:glm
packed_mediump_mat4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, packed_mediump>	packed_mediump_mat4;$/;"	t	namespace:glm
packed_mediump_mat4x2	.\gtc\type_aligned.hpp	/^	typedef mat<4, 2, float, packed_mediump>	packed_mediump_mat4x2;$/;"	t	namespace:glm
packed_mediump_mat4x3	.\gtc\type_aligned.hpp	/^	typedef mat<4, 3, float, packed_mediump>	packed_mediump_mat4x3;$/;"	t	namespace:glm
packed_mediump_mat4x4	.\gtc\type_aligned.hpp	/^	typedef mat<4, 4, float, packed_mediump>	packed_mediump_mat4x4;$/;"	t	namespace:glm
packed_mediump_uvec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, uint, packed_mediump>	packed_mediump_uvec1;$/;"	t	namespace:glm
packed_mediump_uvec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, uint, packed_mediump>	packed_mediump_uvec2;$/;"	t	namespace:glm
packed_mediump_uvec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, uint, packed_mediump>	packed_mediump_uvec3;$/;"	t	namespace:glm
packed_mediump_uvec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, uint, packed_mediump>	packed_mediump_uvec4;$/;"	t	namespace:glm
packed_mediump_vec1	.\gtc\type_aligned.hpp	/^	typedef vec<1, float, packed_mediump>	packed_mediump_vec1;$/;"	t	namespace:glm
packed_mediump_vec2	.\gtc\type_aligned.hpp	/^	typedef vec<2, float, packed_mediump>	packed_mediump_vec2;$/;"	t	namespace:glm
packed_mediump_vec3	.\gtc\type_aligned.hpp	/^	typedef vec<3, float, packed_mediump>	packed_mediump_vec3;$/;"	t	namespace:glm
packed_mediump_vec4	.\gtc\type_aligned.hpp	/^	typedef vec<4, float, packed_mediump>	packed_mediump_vec4;$/;"	t	namespace:glm
packed_uvec1	.\gtc\type_aligned.hpp	/^	typedef packed_highp_uvec1			packed_uvec1;$/;"	t	namespace:glm
packed_uvec2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_uvec2			packed_uvec2;$/;"	t	namespace:glm
packed_uvec3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_uvec3			packed_uvec3;$/;"	t	namespace:glm
packed_uvec4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_uvec4			packed_uvec4;$/;"	t	namespace:glm
packed_vec1	.\gtc\type_aligned.hpp	/^	typedef packed_highp_vec1			packed_vec1;$/;"	t	namespace:glm
packed_vec1	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_vec1			packed_vec1;$/;"	t	namespace:glm
packed_vec1	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_vec1			packed_vec1;$/;"	t	namespace:glm
packed_vec2	.\gtc\type_aligned.hpp	/^	typedef packed_highp_vec2			packed_vec2;$/;"	t	namespace:glm
packed_vec2	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_vec2			packed_vec2;$/;"	t	namespace:glm
packed_vec2	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_vec2			packed_vec2;$/;"	t	namespace:glm
packed_vec3	.\gtc\type_aligned.hpp	/^	typedef packed_highp_vec3			packed_vec3;$/;"	t	namespace:glm
packed_vec3	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_vec3			packed_vec3;$/;"	t	namespace:glm
packed_vec3	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_vec3			packed_vec3;$/;"	t	namespace:glm
packed_vec4	.\gtc\type_aligned.hpp	/^	typedef packed_highp_vec4			packed_vec4;$/;"	t	namespace:glm
packed_vec4	.\gtc\type_aligned.hpp	/^	typedef packed_lowp_vec4			packed_vec4;$/;"	t	namespace:glm
packed_vec4	.\gtc\type_aligned.hpp	/^	typedef packed_mediump_vec4			packed_vec4;$/;"	t	namespace:glm
part_type	.\gtx\dual_quaternion.hpp	/^		typedef qua<T, Q> part_type;$/;"	t	struct:glm::tdualquat
permute	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER T permute(T const& x)$/;"	f	namespace:glm::detail
permute	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> permute(vec<2, T, Q> const& x)$/;"	f	namespace:glm::detail
permute	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> permute(vec<3, T, Q> const& x)$/;"	f	namespace:glm::detail
permute	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> permute(vec<4, T, Q> const& x)$/;"	f	namespace:glm::detail
precision	.\detail\qualifier.hpp	/^	typedef qualifier precision;$/;"	t	namespace:glm
precision	.\gtx\io.hpp	/^			unsigned   precision;$/;"	m	class:glm::io::format_punct
precision	.\gtx\io.hpp	/^		struct precision$/;"	s	namespace:glm::io
precision_	.\gtx\io.hpp	/^			streamsize_type precision_;$/;"	m	class:glm::io::basic_state_saver
q	.\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon18::__anon21
q	.\detail\type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::vec::__anon25
qnxnto	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdCXX\CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qua	.\detail\type_quat.hpp	/^	struct qua$/;"	s	namespace:glm
qualifier	.\detail\qualifier.hpp	/^	enum qualifier$/;"	g	namespace:glm
quat	.\ext\quaternion_float.hpp	/^	typedef qua<float, defaultp>		quat;$/;"	t	namespace:glm
quat	.\fwd.hpp	/^	typedef qua<float, defaultp>		quat;$/;"	t	namespace:glm
qword	.\gtx\raw_data.hpp	/^	typedef detail::uint64		qword;$/;"	t	namespace:glm
r	.\detail\type_vec1.hpp	/^				T r;$/;"	m	union:glm::vec::__anon3
r	.\detail\type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon4
r	.\detail\type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::vec::__anon5::__anon7
r	.\detail\type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon9
r	.\detail\type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::vec::__anon11::__anon13
r	.\detail\type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon15
r	.\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::vec::__anon18::__anon20
r	.\detail\type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon22
real	.\gtx\dual_quaternion.hpp	/^		qua<T, Q> real, dual;$/;"	m	struct:glm::tdualquat
row_major	.\gtx\io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
row_type	.\detail\type_mat2x2.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat2x3.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat2x4.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat3x2.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat3x3.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat3x4.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat4x2.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat4x3.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat
row_type	.\detail\type_mat4x4.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat
rows	.\gtx\type_trait.hpp	/^		static length_t const rows = 0;$/;"	m	struct:glm::type
rows	.\gtx\type_trait.hpp	/^		static length_t const rows = R;$/;"	m	struct:glm::type
s	.\detail\type_vec1.hpp	/^				T s;$/;"	m	union:glm::vec::__anon3
s	.\detail\type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon4
s	.\detail\type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::vec::__anon5::__anon8
s	.\detail\type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon9
s	.\detail\type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::vec::__anon11::__anon14
s	.\detail\type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon15
s	.\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon18::__anon21
s	.\detail\type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon22
saturate	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER T saturate(T x){return clamp(x, T(0), T(1));}														\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> saturate(const vec<2, T, Q>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> saturate(const vec<3, T, Q>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	.\gtx\compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> saturate(const vec<4, T, Q>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
separator	.\gtx\io.hpp	/^			char_type  separator;$/;"	m	class:glm::io::format_punct
sint	.\gtx\integer.hpp	/^	typedef signed int					sint;$/;"	t	namespace:glm
size1	.\gtx\std_based_type.hpp	/^	typedef vec<1, std::size_t, defaultp>		size1;$/;"	t	namespace:glm
size1_t	.\gtx\std_based_type.hpp	/^	typedef vec<1, std::size_t, defaultp>		size1_t;$/;"	t	namespace:glm
size2	.\gtx\std_based_type.hpp	/^	typedef vec<2, std::size_t, defaultp>		size2;$/;"	t	namespace:glm
size2_t	.\gtx\std_based_type.hpp	/^	typedef vec<2, std::size_t, defaultp>		size2_t;$/;"	t	namespace:glm
size3	.\gtx\std_based_type.hpp	/^	typedef vec<3, std::size_t, defaultp>		size3;$/;"	t	namespace:glm
size3_t	.\gtx\std_based_type.hpp	/^	typedef vec<3, std::size_t, defaultp>		size3_t;$/;"	t	namespace:glm
size4	.\gtx\std_based_type.hpp	/^	typedef vec<4, std::size_t, defaultp>		size4;$/;"	t	namespace:glm
size4_t	.\gtx\std_based_type.hpp	/^	typedef vec<4, std::size_t, defaultp>		size4_t;$/;"	t	namespace:glm
space	.\gtx\io.hpp	/^			char_type  space;$/;"	m	class:glm::io::format_punct
state_	.\gtx\io.hpp	/^			state_type&     state_;$/;"	m	class:glm::io::basic_state_saver
state_saver	.\gtx\io.hpp	/^		typedef basic_state_saver<char>     state_saver;$/;"	t	namespace:glm::io
state_type	.\gtx\io.hpp	/^			typedef ::std::basic_ios<CTy,CTr>      state_type;$/;"	t	class:glm::io::basic_state_saver
std	.\detail\setup.hpp	/^namespace std {$/;"	n	namespace:glm
std	.\gtx\hash.hpp	/^namespace std$/;"	n
storage	.\detail\qualifier.hpp	/^		struct storage<3, T, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^		struct storage<L, T, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<2, detail::int64, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<2, detail::uint64, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<2, double, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<4, detail::int64, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<4, detail::uint64, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<4, double, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<4, float, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<4, int, true>$/;"	s	namespace:glm::detail
storage	.\detail\qualifier.hpp	/^	struct storage<4, unsigned int, true>$/;"	s	namespace:glm::detail
streamsize_type	.\gtx\io.hpp	/^			typedef ::std::streamsize              streamsize_type;$/;"	t	class:glm::io::basic_state_saver
t	.\detail\type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::vec::__anon5::__anon8
t	.\detail\type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::vec::__anon10
t	.\detail\type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::vec::__anon11::__anon14
t	.\detail\type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon16
t	.\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::vec::__anon18::__anon21
t	.\detail\type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon23
taylorInvSqrt	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER T taylorInvSqrt(T const& r)$/;"	f	namespace:glm::detail
taylorInvSqrt	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> taylorInvSqrt(vec<2, T, Q> const& r)$/;"	f	namespace:glm::detail
taylorInvSqrt	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> taylorInvSqrt(vec<3, T, Q> const& r)$/;"	f	namespace:glm::detail
taylorInvSqrt	.\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> taylorInvSqrt(vec<4, T, Q> const& r)$/;"	f	namespace:glm::detail
tdualquat	.\gtx\dual_quaternion.hpp	/^	struct tdualquat$/;"	s	namespace:glm
test	.\detail\setup.hpp	/^		enum test {value = 0};$/;"	g	struct:glm::detail::is_int
test	.\detail\setup.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
test	.\ext\scalar_int_sized.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
test	.\ext\scalar_uint_sized.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
toMat3	.\gtx\quaternion.hpp	/^	GLM_FUNC_DECL mat<3, 3, T, Q> toMat3($/;"	f	namespace:glm
toMat4	.\gtx\quaternion.hpp	/^	GLM_FUNC_DECL mat<4, 4, T, Q> toMat4($/;"	f	namespace:glm
toQuat	.\gtx\quaternion.hpp	/^	GLM_FUNC_DECL qua<T, Q> toQuat($/;"	f	namespace:glm
transpose_type	.\detail\type_mat2x2.hpp	/^		typedef mat<2, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat2x3.hpp	/^		typedef mat<3, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat2x4.hpp	/^		typedef mat<4, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat3x2.hpp	/^		typedef mat<2, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat3x3.hpp	/^		typedef mat<3, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat3x4.hpp	/^		typedef mat<4, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat4x2.hpp	/^		typedef mat<2, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat4x3.hpp	/^		typedef mat<3, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat
transpose_type	.\detail\type_mat4x4.hpp	/^		typedef mat<4, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat
type	.\detail\qualifier.hpp	/^			typedef struct alignas(L * sizeof(T)) type {$/;"	s	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^			} type;$/;"	m	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^			} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	.\detail\qualifier.hpp	/^		typedef glm_f32vec4 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_f64vec2 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_f64vec4 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_i32vec4 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_i64vec2 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_i64vec4 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_u32vec4 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_u64vec2 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef glm_u64vec4 type;$/;"	t	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		typedef struct type {$/;"	s	struct:glm::detail::storage
type	.\detail\qualifier.hpp	/^		} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	.\detail\setup.hpp	/^		typedef uint64 type;$/;"	t	struct:glm::detail::make_unsigned
type	.\detail\setup.hpp	/^		typedef unsigned char type;$/;"	t	struct:glm::detail::make_unsigned
type	.\detail\setup.hpp	/^		typedef unsigned int type;$/;"	t	struct:glm::detail::make_unsigned
type	.\detail\setup.hpp	/^		typedef unsigned long type;$/;"	t	struct:glm::detail::make_unsigned
type	.\detail\setup.hpp	/^		typedef unsigned short type;$/;"	t	struct:glm::detail::make_unsigned
type	.\detail\type_mat2x2.hpp	/^		typedef mat<2, 2, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat2x3.hpp	/^		typedef mat<2, 3, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat2x4.hpp	/^		typedef mat<2, 4, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat3x2.hpp	/^		typedef mat<3, 2, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat3x3.hpp	/^		typedef mat<3, 3, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat3x4.hpp	/^		typedef mat<3, 4, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat4x2.hpp	/^		typedef mat<4, 2, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat4x3.hpp	/^		typedef mat<4, 3, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_mat4x4.hpp	/^		typedef mat<4, 4, T, Q> type;$/;"	t	struct:glm::mat
type	.\detail\type_quat.hpp	/^		typedef qua<T, Q> type;$/;"	t	struct:glm::qua
type	.\detail\type_vec1.hpp	/^		typedef vec<1, T, Q> type;$/;"	t	struct:glm::vec
type	.\detail\type_vec2.hpp	/^		typedef vec<2, T, Q> type;$/;"	t	struct:glm::vec
type	.\detail\type_vec3.hpp	/^		typedef vec<3, T, Q> type;$/;"	t	struct:glm::vec
type	.\detail\type_vec4.hpp	/^		typedef vec<4, T, Q> type;$/;"	t	struct:glm::vec
type	.\gtx\type_trait.hpp	/^	struct type$/;"	s	namespace:glm
type	.\gtx\type_trait.hpp	/^	struct type<mat<C, R, T, Q> >$/;"	s	namespace:glm
type	.\gtx\type_trait.hpp	/^	struct type<qua<T, Q> >$/;"	s	namespace:glm
type	.\gtx\type_trait.hpp	/^	struct type<tdualquat<T, Q> >$/;"	s	namespace:glm
type	.\gtx\type_trait.hpp	/^	struct type<vec<L, T, Q> >$/;"	s	namespace:glm
type	.\matrix.hpp	/^		typedef mat<2, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<2, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<2, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<3, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<3, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<3, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<4, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<4, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\matrix.hpp	/^		typedef mat<4, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait
u16	.\fwd.hpp	/^	typedef uint16					u16;$/;"	t	namespace:glm
u16	.\gtc\type_precision.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm
u16mat2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint16, defaultp>				u16mat2;$/;"	t	namespace:glm
u16mat2x2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint16, defaultp>				u16mat2x2;$/;"	t	namespace:glm
u16mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint16, defaultp>	u16mat2x2;$/;"	t	namespace:glm
u16mat2x3	.\ext\matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint16, defaultp>				u16mat2x3;$/;"	t	namespace:glm
u16mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint16, defaultp>	u16mat2x3;$/;"	t	namespace:glm
u16mat2x4	.\ext\matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint16, defaultp>				u16mat2x4;$/;"	t	namespace:glm
u16mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint16, defaultp>	u16mat2x4;$/;"	t	namespace:glm
u16mat3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint16, defaultp>				u16mat3;$/;"	t	namespace:glm
u16mat3x2	.\ext\matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint16, defaultp>				u16mat3x2;$/;"	t	namespace:glm
u16mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint16, defaultp>	u16mat3x2;$/;"	t	namespace:glm
u16mat3x3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint16, defaultp>				u16mat3x3;$/;"	t	namespace:glm
u16mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint16, defaultp>	u16mat3x3;$/;"	t	namespace:glm
u16mat3x4	.\ext\matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint16, defaultp>				u16mat3x4;$/;"	t	namespace:glm
u16mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint16, defaultp>	u16mat3x4;$/;"	t	namespace:glm
u16mat4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint16, defaultp>				u16mat4;$/;"	t	namespace:glm
u16mat4x2	.\ext\matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint16, defaultp>				u16mat4x2;$/;"	t	namespace:glm
u16mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint16, defaultp>	u16mat4x2;$/;"	t	namespace:glm
u16mat4x3	.\ext\matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint16, defaultp>				u16mat4x3;$/;"	t	namespace:glm
u16mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint16, defaultp>	u16mat4x3;$/;"	t	namespace:glm
u16mat4x4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint16, defaultp>				u16mat4x4;$/;"	t	namespace:glm
u16mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint16, defaultp>	u16mat4x4;$/;"	t	namespace:glm
u16vec1	.\ext\vector_uint1_sized.hpp	/^	typedef vec<1, uint16, defaultp>	u16vec1;$/;"	t	namespace:glm
u16vec1	.\fwd.hpp	/^	typedef vec<1, u16, defaultp>	u16vec1;$/;"	t	namespace:glm
u16vec1	.\gtx\number_precision.hpp	/^	typedef u16			u16vec1;    \/\/!< \\brief 16bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u16vec2	.\ext\vector_uint2_sized.hpp	/^	typedef vec<2, uint16, defaultp>	u16vec2;$/;"	t	namespace:glm
u16vec2	.\fwd.hpp	/^	typedef vec<2, u16, defaultp>	u16vec2;$/;"	t	namespace:glm
u16vec3	.\ext\vector_uint3_sized.hpp	/^	typedef vec<3, uint16, defaultp>	u16vec3;$/;"	t	namespace:glm
u16vec3	.\fwd.hpp	/^	typedef vec<3, u16, defaultp>	u16vec3;$/;"	t	namespace:glm
u16vec4	.\ext\vector_uint4_sized.hpp	/^	typedef vec<4, uint16, defaultp>	u16vec4;$/;"	t	namespace:glm
u16vec4	.\fwd.hpp	/^	typedef vec<4, u16, defaultp>	u16vec4;$/;"	t	namespace:glm
u32	.\fwd.hpp	/^	typedef uint32					u32;$/;"	t	namespace:glm
u32	.\gtc\type_precision.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm
u32mat2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint32, defaultp>				u32mat2;$/;"	t	namespace:glm
u32mat2x2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint32, defaultp>				u32mat2x2;$/;"	t	namespace:glm
u32mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint32, defaultp>	u32mat2x2;$/;"	t	namespace:glm
u32mat2x3	.\ext\matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint32, defaultp>				u32mat2x3;$/;"	t	namespace:glm
u32mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint32, defaultp>	u32mat2x3;$/;"	t	namespace:glm
u32mat2x4	.\ext\matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint32, defaultp>				u32mat2x4;$/;"	t	namespace:glm
u32mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint32, defaultp>	u32mat2x4;$/;"	t	namespace:glm
u32mat3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint32, defaultp>				u32mat3;$/;"	t	namespace:glm
u32mat3x2	.\ext\matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint32, defaultp>				u32mat3x2;$/;"	t	namespace:glm
u32mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint32, defaultp>	u32mat3x2;$/;"	t	namespace:glm
u32mat3x3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint32, defaultp>				u32mat3x3;$/;"	t	namespace:glm
u32mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint32, defaultp>	u32mat3x3;$/;"	t	namespace:glm
u32mat3x4	.\ext\matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint32, defaultp>				u32mat3x4;$/;"	t	namespace:glm
u32mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint32, defaultp>	u32mat3x4;$/;"	t	namespace:glm
u32mat4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint32, defaultp>				u32mat4;$/;"	t	namespace:glm
u32mat4x2	.\ext\matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint32, defaultp>				u32mat4x2;$/;"	t	namespace:glm
u32mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint32, defaultp>	u32mat4x2;$/;"	t	namespace:glm
u32mat4x3	.\ext\matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint32, defaultp>				u32mat4x3;$/;"	t	namespace:glm
u32mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint32, defaultp>	u32mat4x3;$/;"	t	namespace:glm
u32mat4x4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint32, defaultp>				u32mat4x4;$/;"	t	namespace:glm
u32mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint32, defaultp>	u32mat4x4;$/;"	t	namespace:glm
u32vec1	.\ext\vector_uint1_sized.hpp	/^	typedef vec<1, uint32, defaultp>	u32vec1;$/;"	t	namespace:glm
u32vec1	.\fwd.hpp	/^	typedef vec<1, u32, defaultp>	u32vec1;$/;"	t	namespace:glm
u32vec1	.\gtx\number_precision.hpp	/^	typedef u32			u32vec1;    \/\/!< \\brief 32bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u32vec2	.\ext\vector_uint2_sized.hpp	/^	typedef vec<2, uint32, defaultp>	u32vec2;$/;"	t	namespace:glm
u32vec2	.\fwd.hpp	/^	typedef vec<2, u32, defaultp>	u32vec2;$/;"	t	namespace:glm
u32vec3	.\ext\vector_uint3_sized.hpp	/^	typedef vec<3, uint32, defaultp>	u32vec3;$/;"	t	namespace:glm
u32vec3	.\fwd.hpp	/^	typedef vec<3, u32, defaultp>	u32vec3;$/;"	t	namespace:glm
u32vec4	.\ext\vector_uint4_sized.hpp	/^	typedef vec<4, uint32, defaultp>	u32vec4;$/;"	t	namespace:glm
u32vec4	.\fwd.hpp	/^	typedef vec<4, u32, defaultp>	u32vec4;$/;"	t	namespace:glm
u64	.\fwd.hpp	/^	typedef uint64					u64;$/;"	t	namespace:glm
u64	.\gtc\type_precision.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm
u64mat2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint64, defaultp>				u64mat2;$/;"	t	namespace:glm
u64mat2x2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint64, defaultp>				u64mat2x2;$/;"	t	namespace:glm
u64mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint64, defaultp>	u64mat2x2;$/;"	t	namespace:glm
u64mat2x3	.\ext\matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint64, defaultp>				u64mat2x3;$/;"	t	namespace:glm
u64mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint64, defaultp>	u64mat2x3;$/;"	t	namespace:glm
u64mat2x4	.\ext\matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint64, defaultp>				u64mat2x4;$/;"	t	namespace:glm
u64mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint64, defaultp>	u64mat2x4;$/;"	t	namespace:glm
u64mat3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint64, defaultp>				u64mat3;$/;"	t	namespace:glm
u64mat3x2	.\ext\matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint64, defaultp>				u64mat3x2;$/;"	t	namespace:glm
u64mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint64, defaultp>	u64mat3x2;$/;"	t	namespace:glm
u64mat3x3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint64, defaultp>				u64mat3x3;$/;"	t	namespace:glm
u64mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint64, defaultp>	u64mat3x3;$/;"	t	namespace:glm
u64mat3x4	.\ext\matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint64, defaultp>				u64mat3x4;$/;"	t	namespace:glm
u64mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint64, defaultp>	u64mat3x4;$/;"	t	namespace:glm
u64mat4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint64, defaultp>				u64mat4;$/;"	t	namespace:glm
u64mat4x2	.\ext\matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint64, defaultp>				u64mat4x2;$/;"	t	namespace:glm
u64mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint64, defaultp>	u64mat4x2;$/;"	t	namespace:glm
u64mat4x3	.\ext\matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint64, defaultp>				u64mat4x3;$/;"	t	namespace:glm
u64mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint64, defaultp>	u64mat4x3;$/;"	t	namespace:glm
u64mat4x4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint64, defaultp>				u64mat4x4;$/;"	t	namespace:glm
u64mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint64, defaultp>	u64mat4x4;$/;"	t	namespace:glm
u64vec1	.\ext\vector_uint1_sized.hpp	/^	typedef vec<1, uint64, defaultp>	u64vec1;$/;"	t	namespace:glm
u64vec1	.\fwd.hpp	/^	typedef vec<1, u64, defaultp>	u64vec1;$/;"	t	namespace:glm
u64vec1	.\gtx\number_precision.hpp	/^	typedef u64			u64vec1;    \/\/!< \\brief 64bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u64vec2	.\ext\vector_uint2_sized.hpp	/^	typedef vec<2, uint64, defaultp>	u64vec2;$/;"	t	namespace:glm
u64vec2	.\fwd.hpp	/^	typedef vec<2, u64, defaultp>	u64vec2;$/;"	t	namespace:glm
u64vec3	.\ext\vector_uint3_sized.hpp	/^	typedef vec<3, uint64, defaultp>	u64vec3;$/;"	t	namespace:glm
u64vec3	.\fwd.hpp	/^	typedef vec<3, u64, defaultp>	u64vec3;$/;"	t	namespace:glm
u64vec4	.\ext\vector_uint4_sized.hpp	/^	typedef vec<4, uint64, defaultp>	u64vec4;$/;"	t	namespace:glm
u64vec4	.\fwd.hpp	/^	typedef vec<4, u64, defaultp>	u64vec4;$/;"	t	namespace:glm
u8	.\fwd.hpp	/^	typedef uint8					u8;$/;"	t	namespace:glm
u8	.\gtc\type_precision.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm
u8mat2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint8, defaultp>				u8mat2;$/;"	t	namespace:glm
u8mat2x2	.\ext\matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint8, defaultp>				u8mat2x2;$/;"	t	namespace:glm
u8mat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint8, defaultp>	u8mat2x2;$/;"	t	namespace:glm
u8mat2x3	.\ext\matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint8, defaultp>				u8mat2x3;$/;"	t	namespace:glm
u8mat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint8, defaultp>	u8mat2x3;$/;"	t	namespace:glm
u8mat2x4	.\ext\matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint8, defaultp>				u8mat2x4;$/;"	t	namespace:glm
u8mat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint8, defaultp>	u8mat2x4;$/;"	t	namespace:glm
u8mat3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint8, defaultp>				u8mat3;$/;"	t	namespace:glm
u8mat3x2	.\ext\matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint8, defaultp>				u8mat3x2;$/;"	t	namespace:glm
u8mat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint8, defaultp>	u8mat3x2;$/;"	t	namespace:glm
u8mat3x3	.\ext\matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint8, defaultp>				u8mat3x3;$/;"	t	namespace:glm
u8mat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint8, defaultp>	u8mat3x3;$/;"	t	namespace:glm
u8mat3x4	.\ext\matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint8, defaultp>				u8mat3x4;$/;"	t	namespace:glm
u8mat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint8, defaultp>	u8mat3x4;$/;"	t	namespace:glm
u8mat4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint8, defaultp>				u8mat4;$/;"	t	namespace:glm
u8mat4x2	.\ext\matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint8, defaultp>				u8mat4x2;$/;"	t	namespace:glm
u8mat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint8, defaultp>	u8mat4x2;$/;"	t	namespace:glm
u8mat4x3	.\ext\matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint8, defaultp>				u8mat4x3;$/;"	t	namespace:glm
u8mat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint8, defaultp>	u8mat4x3;$/;"	t	namespace:glm
u8mat4x4	.\ext\matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint8, defaultp>				u8mat4x4;$/;"	t	namespace:glm
u8mat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint8, defaultp>	u8mat4x4;$/;"	t	namespace:glm
u8vec1	.\ext\vector_uint1_sized.hpp	/^	typedef vec<1, uint8, defaultp>		u8vec1;$/;"	t	namespace:glm
u8vec1	.\fwd.hpp	/^	typedef vec<1, u8, defaultp>	u8vec1;$/;"	t	namespace:glm
u8vec1	.\gtx\number_precision.hpp	/^	typedef u8			u8vec1;		\/\/!< \\brief 8bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u8vec2	.\ext\vector_uint2_sized.hpp	/^	typedef vec<2, uint8, defaultp>		u8vec2;$/;"	t	namespace:glm
u8vec2	.\fwd.hpp	/^	typedef vec<2, u8, defaultp>	u8vec2;$/;"	t	namespace:glm
u8vec3	.\ext\vector_uint3_sized.hpp	/^	typedef vec<3, uint8, defaultp>		u8vec3;$/;"	t	namespace:glm
u8vec3	.\fwd.hpp	/^	typedef vec<3, u8, defaultp>	u8vec3;$/;"	t	namespace:glm
u8vec4	.\ext\vector_uint4_sized.hpp	/^	typedef vec<4, uint8, defaultp>		u8vec4;$/;"	t	namespace:glm
u8vec4	.\fwd.hpp	/^	typedef vec<4, u8, defaultp>	u8vec4;$/;"	t	namespace:glm
uint	.\detail\setup.hpp	/^	typedef unsigned int	uint;$/;"	t	namespace:glm
uint	.\fwd.hpp	/^	typedef unsigned int			uint;$/;"	t	namespace:glm
uint16	.\ext\scalar_uint_sized.hpp	/^		typedef std::uint16_t		uint16;$/;"	t	namespace:glm::detail
uint16	.\ext\scalar_uint_sized.hpp	/^	typedef detail::uint16		uint16;$/;"	t	namespace:glm
uint16	.\fwd.hpp	/^	typedef std::uint16_t			uint16;$/;"	t	namespace:glm
uint16_t	.\fwd.hpp	/^	typedef uint16					uint16_t;$/;"	t	namespace:glm
uint32	.\ext\scalar_uint_sized.hpp	/^		typedef std::uint32_t		uint32;$/;"	t	namespace:glm::detail
uint32	.\ext\scalar_uint_sized.hpp	/^	typedef detail::uint32		uint32;$/;"	t	namespace:glm
uint32	.\fwd.hpp	/^	typedef std::uint32_t			uint32;$/;"	t	namespace:glm
uint32_t	.\fwd.hpp	/^	typedef uint32					uint32_t;$/;"	t	namespace:glm
uint64	.\detail\setup.hpp	/^		typedef std::uint64_t						uint64;$/;"	t	namespace:glm::detail
uint64	.\ext\scalar_uint_sized.hpp	/^	typedef detail::uint64		uint64;$/;"	t	namespace:glm
uint64	.\fwd.hpp	/^	typedef std::uint64_t			uint64;$/;"	t	namespace:glm
uint64_t	.\fwd.hpp	/^	typedef uint64					uint64_t;$/;"	t	namespace:glm
uint8	.\ext\scalar_uint_sized.hpp	/^		typedef std::uint8_t		uint8;$/;"	t	namespace:glm::detail
uint8	.\ext\scalar_uint_sized.hpp	/^	typedef detail::uint8		uint8;$/;"	t	namespace:glm
uint8	.\fwd.hpp	/^	typedef std::uint8_t			uint8;$/;"	t	namespace:glm
uint8_t	.\fwd.hpp	/^	typedef uint8					uint8_t;$/;"	t	namespace:glm
umat2	.\ext\matrix_uint2x2.hpp	/^	typedef mat<2, 2, uint, defaultp>	umat2;$/;"	t	namespace:glm
umat2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, defaultp>				umat2;$/;"	t	namespace:glm
umat2x2	.\ext\matrix_uint2x2.hpp	/^	typedef mat<2, 2, uint, defaultp>	umat2x2;$/;"	t	namespace:glm
umat2x2	.\fwd.hpp	/^	typedef mat<2, 2, uint, defaultp>	umat2x2;$/;"	t	namespace:glm
umat2x2	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 2, uint, defaultp>				umat2x2;$/;"	t	namespace:glm
umat2x3	.\ext\matrix_uint2x3.hpp	/^	typedef mat<2, 3, uint, defaultp>	umat2x3;$/;"	t	namespace:glm
umat2x3	.\fwd.hpp	/^	typedef mat<2, 3, uint, defaultp>	umat2x3;$/;"	t	namespace:glm
umat2x3	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 3, uint, defaultp>				umat2x3;$/;"	t	namespace:glm
umat2x4	.\ext\matrix_uint2x4.hpp	/^	typedef mat<2, 4, uint, defaultp>	umat2x4;$/;"	t	namespace:glm
umat2x4	.\fwd.hpp	/^	typedef mat<2, 4, uint, defaultp>	umat2x4;$/;"	t	namespace:glm
umat2x4	.\gtc\matrix_integer.hpp	/^	typedef mat<2, 4, uint, defaultp>				umat2x4;$/;"	t	namespace:glm
umat3	.\ext\matrix_uint3x3.hpp	/^	typedef mat<3, 3, uint, defaultp>	umat3;$/;"	t	namespace:glm
umat3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, defaultp>				umat3;$/;"	t	namespace:glm
umat3x2	.\ext\matrix_uint3x2.hpp	/^	typedef mat<3, 2, uint, defaultp>	umat3x2;$/;"	t	namespace:glm
umat3x2	.\fwd.hpp	/^	typedef mat<3, 2, uint, defaultp>	umat3x2;$/;"	t	namespace:glm
umat3x2	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 2, uint, defaultp>				umat3x2;$/;"	t	namespace:glm
umat3x3	.\ext\matrix_uint3x3.hpp	/^	typedef mat<3, 3, uint, defaultp>	umat3x3;$/;"	t	namespace:glm
umat3x3	.\fwd.hpp	/^	typedef mat<3, 3, uint, defaultp>	umat3x3;$/;"	t	namespace:glm
umat3x3	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 3, uint, defaultp>				umat3x3;$/;"	t	namespace:glm
umat3x4	.\ext\matrix_uint3x4.hpp	/^	typedef mat<3, 4, uint, defaultp>	umat3x4;$/;"	t	namespace:glm
umat3x4	.\fwd.hpp	/^	typedef mat<3, 4, uint, defaultp>	umat3x4;$/;"	t	namespace:glm
umat3x4	.\gtc\matrix_integer.hpp	/^	typedef mat<3, 4, uint, defaultp>				umat3x4;$/;"	t	namespace:glm
umat4	.\ext\matrix_uint4x4.hpp	/^	typedef mat<4, 4, uint, defaultp>	umat4;$/;"	t	namespace:glm
umat4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, defaultp>				umat4;$/;"	t	namespace:glm
umat4x2	.\ext\matrix_uint4x2.hpp	/^	typedef mat<4, 2, uint, defaultp>	umat4x2;$/;"	t	namespace:glm
umat4x2	.\fwd.hpp	/^	typedef mat<4, 2, uint, defaultp>	umat4x2;$/;"	t	namespace:glm
umat4x2	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 2, uint, defaultp>				umat4x2;$/;"	t	namespace:glm
umat4x3	.\ext\matrix_uint4x3.hpp	/^	typedef mat<4, 3, uint, defaultp>	umat4x3;$/;"	t	namespace:glm
umat4x3	.\fwd.hpp	/^	typedef mat<4, 3, uint, defaultp>	umat4x3;$/;"	t	namespace:glm
umat4x3	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 3, uint, defaultp>				umat4x3;$/;"	t	namespace:glm
umat4x4	.\ext\matrix_uint4x4.hpp	/^	typedef mat<4, 4, uint, defaultp>	umat4x4;$/;"	t	namespace:glm
umat4x4	.\fwd.hpp	/^	typedef mat<4, 4, uint, defaultp>	umat4x4;$/;"	t	namespace:glm
umat4x4	.\gtc\matrix_integer.hpp	/^	typedef mat<4, 4, uint, defaultp>				umat4x4;$/;"	t	namespace:glm
uvec1	.\ext\vector_uint1.hpp	/^	typedef vec<1, unsigned int, defaultp>			uvec1;$/;"	t	namespace:glm
uvec1	.\fwd.hpp	/^	typedef vec<1, uint, defaultp>	uvec1;$/;"	t	namespace:glm
uvec2	.\ext\vector_uint2.hpp	/^	typedef vec<2, unsigned int, defaultp>		uvec2;$/;"	t	namespace:glm
uvec2	.\fwd.hpp	/^	typedef vec<2, uint, defaultp>	uvec2;$/;"	t	namespace:glm
uvec3	.\ext\vector_uint3.hpp	/^	typedef vec<3, unsigned int, defaultp>		uvec3;$/;"	t	namespace:glm
uvec3	.\fwd.hpp	/^	typedef vec<3, uint, defaultp>	uvec3;$/;"	t	namespace:glm
uvec4	.\ext\vector_uint4.hpp	/^	typedef vec<4, unsigned int, defaultp>		uvec4;$/;"	t	namespace:glm
uvec4	.\fwd.hpp	/^	typedef vec<4, uint, defaultp>	uvec4;$/;"	t	namespace:glm
value	.\detail\qualifier.hpp	/^			static const bool value = true;$/;"	m	struct:glm::detail::is_aligned
value	.\detail\qualifier.hpp	/^		static const bool value = false;$/;"	m	struct:glm::detail::is_aligned
value	.\detail\setup.hpp	/^		enum test {value = 0};$/;"	e	enum:glm::detail::is_int::test
value	.\detail\setup.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	.\detail\type_mat2x2.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat
value	.\detail\type_mat2x3.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat
value	.\detail\type_mat2x4.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat
value	.\detail\type_mat3x2.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat
value	.\detail\type_mat3x3.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat
value	.\detail\type_mat3x4.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat
value	.\detail\type_mat4x2.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat
value	.\detail\type_mat4x3.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat
value	.\detail\type_mat4x4.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat
value	.\ext\scalar_int_sized.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	.\ext\scalar_uint_sized.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	.\gtx\io.hpp	/^			CTy value[3];$/;"	m	struct:glm::io::delimeter
value	.\gtx\io.hpp	/^			order_type value;$/;"	m	struct:glm::io::order
value	.\gtx\io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::precision
value	.\gtx\io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::width
value_type	.\detail\type_mat2x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat2x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat2x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat3x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat3x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat3x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat4x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat4x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_mat4x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat
value_type	.\detail\type_quat.hpp	/^		typedef T value_type;$/;"	t	struct:glm::qua
value_type	.\detail\type_vec1.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec
value_type	.\detail\type_vec2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec
value_type	.\detail\type_vec3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec
value_type	.\detail\type_vec4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec
value_type	.\gtx\dual_quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tdualquat
vec	.\detail\type_vec1.hpp	/^	struct vec<1, T, Q>$/;"	s	namespace:glm
vec	.\detail\type_vec2.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1,-1,-2> const& that)$/;"	f	struct:glm::vec
vec	.\detail\type_vec2.hpp	/^	struct vec<2, T, Q>$/;"	s	namespace:glm
vec	.\detail\type_vec3.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& scalar, detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v)$/;"	f	struct:glm::vec
vec	.\detail\type_vec3.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T const& scalar)$/;"	f	struct:glm::vec
vec	.\detail\type_vec3.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& that)$/;"	f	struct:glm::vec
vec	.\detail\type_vec3.hpp	/^	struct vec<3, T, Q>$/;"	s	namespace:glm
vec	.\detail\type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& x, T const& y, detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v)$/;"	f	struct:glm::vec
vec	.\detail\type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& x, detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T const& w)$/;"	f	struct:glm::vec
vec	.\detail\type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(T const& x, detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& v)$/;"	f	struct:glm::vec
vec	.\detail\type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T const& z, T const& w)$/;"	f	struct:glm::vec
vec	.\detail\type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, detail::_swizzle<2, T, Q, F0, F1, -1, -2> const& u)$/;"	f	struct:glm::vec
vec	.\detail\type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& v, T const& w)$/;"	f	struct:glm::vec
vec	.\detail\type_vec4.hpp	/^			GLM_FUNC_DECL GLM_CONSTEXPR vec(detail::_swizzle<4, T, Q, E0, E1, E2, E3> const& that)$/;"	f	struct:glm::vec
vec	.\detail\type_vec4.hpp	/^	struct vec<4, T, Q>$/;"	s	namespace:glm
vec1	.\ext\vector_float1.hpp	/^	typedef vec<1, float, defaultp>		vec1;$/;"	t	namespace:glm
vec1	.\fwd.hpp	/^	typedef vec<1, float, defaultp>		vec1;$/;"	t	namespace:glm
vec2	.\ext\vector_float2.hpp	/^	typedef vec<2, float, defaultp>	vec2;$/;"	t	namespace:glm
vec2	.\fwd.hpp	/^	typedef vec<2, float, defaultp>		vec2;$/;"	t	namespace:glm
vec3	.\ext\vector_float3.hpp	/^	typedef vec<3, float, defaultp>		vec3;$/;"	t	namespace:glm
vec3	.\fwd.hpp	/^	typedef vec<3, float, defaultp>		vec3;$/;"	t	namespace:glm
vec4	.\ext\vector_float4.hpp	/^	typedef vec<4, float, defaultp>		vec4;$/;"	t	namespace:glm
vec4	.\fwd.hpp	/^	typedef vec<4, float, defaultp>		vec4;$/;"	t	namespace:glm
volatile	.\out\build\x64-Debug\CMakeFiles\3.19.20122902-MSVC_2\CompilerIdC\CMakeCCompilerId.c	11;"	d	file:
w	.\detail\type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon1::__anon2
w	.\detail\type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua
w	.\detail\type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua
w	.\detail\type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon18::__anon19
w	.\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec
w	.\detail\type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::vec::__anon25
wformat_saver	.\gtx\io.hpp	/^		typedef basic_format_saver<wchar_t> wformat_saver;$/;"	t	namespace:glm::io
width	.\gtx\io.hpp	/^			unsigned   width;$/;"	m	class:glm::io::format_punct
width	.\gtx\io.hpp	/^		struct width$/;"	s	namespace:glm::io
width_	.\gtx\io.hpp	/^			streamsize_type width_;$/;"	m	class:glm::io::basic_state_saver
word	.\gtx\raw_data.hpp	/^	typedef detail::uint16		word;$/;"	t	namespace:glm
wstate_saver	.\gtx\io.hpp	/^		typedef basic_state_saver<wchar_t> wstate_saver;$/;"	t	namespace:glm::io
ww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> ww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
www	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> www(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wwzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> wx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wxzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> wy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wywx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wywy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wywz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wyzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> wz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> wzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
wzzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> wzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
x	.\detail\type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon1::__anon2
x	.\detail\type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua
x	.\detail\type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua
x	.\detail\type_vec1.hpp	/^				T x;$/;"	m	union:glm::vec::__anon3
x	.\detail\type_vec1.hpp	/^			T x;$/;"	m	struct:glm::vec
x	.\detail\type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon4
x	.\detail\type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::vec::__anon5::__anon6
x	.\detail\type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::vec
x	.\detail\type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon9
x	.\detail\type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::vec::__anon11::__anon12
x	.\detail\type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec
x	.\detail\type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon15
x	.\detail\type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon18::__anon19
x	.\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec
x	.\detail\type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::vec::__anon22
xw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xwzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm
xx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm
xxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm
xxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xxzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xxzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xywx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xywy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xywz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
xyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xyzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xyzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> xz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> xzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
xzzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
xzzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> xzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
y	.\detail\type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon1::__anon2
y	.\detail\type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua
y	.\detail\type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua
y	.\detail\type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::vec::__anon5::__anon6
y	.\detail\type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::vec
y	.\detail\type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::vec::__anon10
y	.\detail\type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::vec::__anon11::__anon12
y	.\detail\type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec
y	.\detail\type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon16
y	.\detail\type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon18::__anon19
y	.\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec
y	.\detail\type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::vec::__anon23
yw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> ywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> ywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> ywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
ywzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> ywzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yxzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yxzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yywx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yywy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yywz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm
yyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yyzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yyzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> yz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> yzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
yzzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
yzzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> yzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
z	.\detail\type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon1::__anon2
z	.\detail\type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua
z	.\detail\type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua
z	.\detail\type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::vec::__anon11::__anon12
z	.\detail\type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec
z	.\detail\type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon17
z	.\detail\type_vec4.hpp	/^				struct { T x, y, z, w; };$/;"	m	struct:glm::vec::__anon18::__anon19
z	.\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec
z	.\detail\type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::vec::__anon24
zw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zwzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zxzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zxzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zywx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zywy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zywz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zyzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zyzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<2, T, Q> zz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzww	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzwx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzwy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzwz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzxw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzxx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzxy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzxz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzyw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzyx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzyy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzyz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<3, T, Q> zzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzzw	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzzx	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzzy	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
zzzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm
zzzz	.\gtx\vec_swizzle.hpp	/^	GLM_INLINE glm::vec<4, T, Q> zzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm
